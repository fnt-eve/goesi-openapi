/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the CorporationsCorporationIdTitlesGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdTitlesGetInner{}

// CorporationsCorporationIdTitlesGetInner struct for CorporationsCorporationIdTitlesGetInner
type CorporationsCorporationIdTitlesGetInner struct {
	GrantableRoles []string `json:"grantable_roles,omitempty"`
	GrantableRolesAtBase []string `json:"grantable_roles_at_base,omitempty"`
	GrantableRolesAtHq []string `json:"grantable_roles_at_hq,omitempty"`
	GrantableRolesAtOther []string `json:"grantable_roles_at_other,omitempty"`
	Name *string `json:"name,omitempty"`
	Roles []string `json:"roles,omitempty"`
	RolesAtBase []string `json:"roles_at_base,omitempty"`
	RolesAtHq []string `json:"roles_at_hq,omitempty"`
	RolesAtOther []string `json:"roles_at_other,omitempty"`
	TitleId *int64 `json:"title_id,omitempty"`
}

// NewCorporationsCorporationIdTitlesGetInner instantiates a new CorporationsCorporationIdTitlesGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdTitlesGetInner() *CorporationsCorporationIdTitlesGetInner {
	this := CorporationsCorporationIdTitlesGetInner{}
	return &this
}

// NewCorporationsCorporationIdTitlesGetInnerWithDefaults instantiates a new CorporationsCorporationIdTitlesGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdTitlesGetInnerWithDefaults() *CorporationsCorporationIdTitlesGetInner {
	this := CorporationsCorporationIdTitlesGetInner{}
	return &this
}

// GetGrantableRoles returns the GrantableRoles field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRoles() []string {
	if o == nil || IsNil(o.GrantableRoles) {
		var ret []string
		return ret
	}
	return o.GrantableRoles
}

// GetGrantableRolesOk returns a tuple with the GrantableRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRoles) {
		return nil, false
	}
	return o.GrantableRoles, true
}

// HasGrantableRoles returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasGrantableRoles() bool {
	if o != nil && !IsNil(o.GrantableRoles) {
		return true
	}

	return false
}

// SetGrantableRoles gets a reference to the given []string and assigns it to the GrantableRoles field.
func (o *CorporationsCorporationIdTitlesGetInner) SetGrantableRoles(v []string) {
	o.GrantableRoles = v
}

// GetGrantableRolesAtBase returns the GrantableRolesAtBase field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesAtBase() []string {
	if o == nil || IsNil(o.GrantableRolesAtBase) {
		var ret []string
		return ret
	}
	return o.GrantableRolesAtBase
}

// GetGrantableRolesAtBaseOk returns a tuple with the GrantableRolesAtBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesAtBaseOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRolesAtBase) {
		return nil, false
	}
	return o.GrantableRolesAtBase, true
}

// HasGrantableRolesAtBase returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasGrantableRolesAtBase() bool {
	if o != nil && !IsNil(o.GrantableRolesAtBase) {
		return true
	}

	return false
}

// SetGrantableRolesAtBase gets a reference to the given []string and assigns it to the GrantableRolesAtBase field.
func (o *CorporationsCorporationIdTitlesGetInner) SetGrantableRolesAtBase(v []string) {
	o.GrantableRolesAtBase = v
}

// GetGrantableRolesAtHq returns the GrantableRolesAtHq field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesAtHq() []string {
	if o == nil || IsNil(o.GrantableRolesAtHq) {
		var ret []string
		return ret
	}
	return o.GrantableRolesAtHq
}

// GetGrantableRolesAtHqOk returns a tuple with the GrantableRolesAtHq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesAtHqOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRolesAtHq) {
		return nil, false
	}
	return o.GrantableRolesAtHq, true
}

// HasGrantableRolesAtHq returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasGrantableRolesAtHq() bool {
	if o != nil && !IsNil(o.GrantableRolesAtHq) {
		return true
	}

	return false
}

// SetGrantableRolesAtHq gets a reference to the given []string and assigns it to the GrantableRolesAtHq field.
func (o *CorporationsCorporationIdTitlesGetInner) SetGrantableRolesAtHq(v []string) {
	o.GrantableRolesAtHq = v
}

// GetGrantableRolesAtOther returns the GrantableRolesAtOther field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesAtOther() []string {
	if o == nil || IsNil(o.GrantableRolesAtOther) {
		var ret []string
		return ret
	}
	return o.GrantableRolesAtOther
}

// GetGrantableRolesAtOtherOk returns a tuple with the GrantableRolesAtOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetGrantableRolesAtOtherOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRolesAtOther) {
		return nil, false
	}
	return o.GrantableRolesAtOther, true
}

// HasGrantableRolesAtOther returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasGrantableRolesAtOther() bool {
	if o != nil && !IsNil(o.GrantableRolesAtOther) {
		return true
	}

	return false
}

// SetGrantableRolesAtOther gets a reference to the given []string and assigns it to the GrantableRolesAtOther field.
func (o *CorporationsCorporationIdTitlesGetInner) SetGrantableRolesAtOther(v []string) {
	o.GrantableRolesAtOther = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CorporationsCorporationIdTitlesGetInner) SetName(v string) {
	o.Name = &v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *CorporationsCorporationIdTitlesGetInner) SetRoles(v []string) {
	o.Roles = v
}

// GetRolesAtBase returns the RolesAtBase field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesAtBase() []string {
	if o == nil || IsNil(o.RolesAtBase) {
		var ret []string
		return ret
	}
	return o.RolesAtBase
}

// GetRolesAtBaseOk returns a tuple with the RolesAtBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesAtBaseOk() ([]string, bool) {
	if o == nil || IsNil(o.RolesAtBase) {
		return nil, false
	}
	return o.RolesAtBase, true
}

// HasRolesAtBase returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasRolesAtBase() bool {
	if o != nil && !IsNil(o.RolesAtBase) {
		return true
	}

	return false
}

// SetRolesAtBase gets a reference to the given []string and assigns it to the RolesAtBase field.
func (o *CorporationsCorporationIdTitlesGetInner) SetRolesAtBase(v []string) {
	o.RolesAtBase = v
}

// GetRolesAtHq returns the RolesAtHq field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesAtHq() []string {
	if o == nil || IsNil(o.RolesAtHq) {
		var ret []string
		return ret
	}
	return o.RolesAtHq
}

// GetRolesAtHqOk returns a tuple with the RolesAtHq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesAtHqOk() ([]string, bool) {
	if o == nil || IsNil(o.RolesAtHq) {
		return nil, false
	}
	return o.RolesAtHq, true
}

// HasRolesAtHq returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasRolesAtHq() bool {
	if o != nil && !IsNil(o.RolesAtHq) {
		return true
	}

	return false
}

// SetRolesAtHq gets a reference to the given []string and assigns it to the RolesAtHq field.
func (o *CorporationsCorporationIdTitlesGetInner) SetRolesAtHq(v []string) {
	o.RolesAtHq = v
}

// GetRolesAtOther returns the RolesAtOther field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesAtOther() []string {
	if o == nil || IsNil(o.RolesAtOther) {
		var ret []string
		return ret
	}
	return o.RolesAtOther
}

// GetRolesAtOtherOk returns a tuple with the RolesAtOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetRolesAtOtherOk() ([]string, bool) {
	if o == nil || IsNil(o.RolesAtOther) {
		return nil, false
	}
	return o.RolesAtOther, true
}

// HasRolesAtOther returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasRolesAtOther() bool {
	if o != nil && !IsNil(o.RolesAtOther) {
		return true
	}

	return false
}

// SetRolesAtOther gets a reference to the given []string and assigns it to the RolesAtOther field.
func (o *CorporationsCorporationIdTitlesGetInner) SetRolesAtOther(v []string) {
	o.RolesAtOther = v
}

// GetTitleId returns the TitleId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdTitlesGetInner) GetTitleId() int64 {
	if o == nil || IsNil(o.TitleId) {
		var ret int64
		return ret
	}
	return *o.TitleId
}

// GetTitleIdOk returns a tuple with the TitleId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdTitlesGetInner) GetTitleIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TitleId) {
		return nil, false
	}
	return o.TitleId, true
}

// HasTitleId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdTitlesGetInner) HasTitleId() bool {
	if o != nil && !IsNil(o.TitleId) {
		return true
	}

	return false
}

// SetTitleId gets a reference to the given int64 and assigns it to the TitleId field.
func (o *CorporationsCorporationIdTitlesGetInner) SetTitleId(v int64) {
	o.TitleId = &v
}

func (o CorporationsCorporationIdTitlesGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdTitlesGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.GrantableRoles) {
		toSerialize["grantable_roles"] = o.GrantableRoles
	}
	if !IsNil(o.GrantableRolesAtBase) {
		toSerialize["grantable_roles_at_base"] = o.GrantableRolesAtBase
	}
	if !IsNil(o.GrantableRolesAtHq) {
		toSerialize["grantable_roles_at_hq"] = o.GrantableRolesAtHq
	}
	if !IsNil(o.GrantableRolesAtOther) {
		toSerialize["grantable_roles_at_other"] = o.GrantableRolesAtOther
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.RolesAtBase) {
		toSerialize["roles_at_base"] = o.RolesAtBase
	}
	if !IsNil(o.RolesAtHq) {
		toSerialize["roles_at_hq"] = o.RolesAtHq
	}
	if !IsNil(o.RolesAtOther) {
		toSerialize["roles_at_other"] = o.RolesAtOther
	}
	if !IsNil(o.TitleId) {
		toSerialize["title_id"] = o.TitleId
	}
	return toSerialize, nil
}

type NullableCorporationsCorporationIdTitlesGetInner struct {
	value *CorporationsCorporationIdTitlesGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdTitlesGetInner) Get() *CorporationsCorporationIdTitlesGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdTitlesGetInner) Set(val *CorporationsCorporationIdTitlesGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdTitlesGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdTitlesGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdTitlesGetInner(val *CorporationsCorporationIdTitlesGetInner) *NullableCorporationsCorporationIdTitlesGetInner {
	return &NullableCorporationsCorporationIdTitlesGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdTitlesGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdTitlesGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


