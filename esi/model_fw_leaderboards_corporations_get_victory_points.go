/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FwLeaderboardsCorporationsGetVictoryPoints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FwLeaderboardsCorporationsGetVictoryPoints{}

// FwLeaderboardsCorporationsGetVictoryPoints Top 10 rankings of corporations by victory points from yesterday, last week and in total
type FwLeaderboardsCorporationsGetVictoryPoints struct {
	// Top 10 ranking of corporations active in faction warfare by total victory points. A corporation is considered \"active\" if they have participated in faction warfare in the past 14 days
	ActiveTotal []FwLeaderboardsCorporationsGetVictoryPointsActiveTotalInner `json:"active_total"`
	// Top 10 ranking of corporations by victory points in the past week
	LastWeek []FwLeaderboardsCorporationsGetVictoryPointsLastWeekInner `json:"last_week"`
	// Top 10 ranking of corporations by victory points in the past day
	Yesterday []FwLeaderboardsCorporationsGetVictoryPointsYesterdayInner `json:"yesterday"`
}

type _FwLeaderboardsCorporationsGetVictoryPoints FwLeaderboardsCorporationsGetVictoryPoints

// NewFwLeaderboardsCorporationsGetVictoryPoints instantiates a new FwLeaderboardsCorporationsGetVictoryPoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFwLeaderboardsCorporationsGetVictoryPoints(activeTotal []FwLeaderboardsCorporationsGetVictoryPointsActiveTotalInner, lastWeek []FwLeaderboardsCorporationsGetVictoryPointsLastWeekInner, yesterday []FwLeaderboardsCorporationsGetVictoryPointsYesterdayInner) *FwLeaderboardsCorporationsGetVictoryPoints {
	this := FwLeaderboardsCorporationsGetVictoryPoints{}
	this.ActiveTotal = activeTotal
	this.LastWeek = lastWeek
	this.Yesterday = yesterday
	return &this
}

// NewFwLeaderboardsCorporationsGetVictoryPointsWithDefaults instantiates a new FwLeaderboardsCorporationsGetVictoryPoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFwLeaderboardsCorporationsGetVictoryPointsWithDefaults() *FwLeaderboardsCorporationsGetVictoryPoints {
	this := FwLeaderboardsCorporationsGetVictoryPoints{}
	return &this
}

// GetActiveTotal returns the ActiveTotal field value
func (o *FwLeaderboardsCorporationsGetVictoryPoints) GetActiveTotal() []FwLeaderboardsCorporationsGetVictoryPointsActiveTotalInner {
	if o == nil {
		var ret []FwLeaderboardsCorporationsGetVictoryPointsActiveTotalInner
		return ret
	}

	return o.ActiveTotal
}

// GetActiveTotalOk returns a tuple with the ActiveTotal field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsCorporationsGetVictoryPoints) GetActiveTotalOk() ([]FwLeaderboardsCorporationsGetVictoryPointsActiveTotalInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveTotal, true
}

// SetActiveTotal sets field value
func (o *FwLeaderboardsCorporationsGetVictoryPoints) SetActiveTotal(v []FwLeaderboardsCorporationsGetVictoryPointsActiveTotalInner) {
	o.ActiveTotal = v
}

// GetLastWeek returns the LastWeek field value
func (o *FwLeaderboardsCorporationsGetVictoryPoints) GetLastWeek() []FwLeaderboardsCorporationsGetVictoryPointsLastWeekInner {
	if o == nil {
		var ret []FwLeaderboardsCorporationsGetVictoryPointsLastWeekInner
		return ret
	}

	return o.LastWeek
}

// GetLastWeekOk returns a tuple with the LastWeek field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsCorporationsGetVictoryPoints) GetLastWeekOk() ([]FwLeaderboardsCorporationsGetVictoryPointsLastWeekInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastWeek, true
}

// SetLastWeek sets field value
func (o *FwLeaderboardsCorporationsGetVictoryPoints) SetLastWeek(v []FwLeaderboardsCorporationsGetVictoryPointsLastWeekInner) {
	o.LastWeek = v
}

// GetYesterday returns the Yesterday field value
func (o *FwLeaderboardsCorporationsGetVictoryPoints) GetYesterday() []FwLeaderboardsCorporationsGetVictoryPointsYesterdayInner {
	if o == nil {
		var ret []FwLeaderboardsCorporationsGetVictoryPointsYesterdayInner
		return ret
	}

	return o.Yesterday
}

// GetYesterdayOk returns a tuple with the Yesterday field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsCorporationsGetVictoryPoints) GetYesterdayOk() ([]FwLeaderboardsCorporationsGetVictoryPointsYesterdayInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Yesterday, true
}

// SetYesterday sets field value
func (o *FwLeaderboardsCorporationsGetVictoryPoints) SetYesterday(v []FwLeaderboardsCorporationsGetVictoryPointsYesterdayInner) {
	o.Yesterday = v
}

func (o FwLeaderboardsCorporationsGetVictoryPoints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FwLeaderboardsCorporationsGetVictoryPoints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_total"] = o.ActiveTotal
	toSerialize["last_week"] = o.LastWeek
	toSerialize["yesterday"] = o.Yesterday
	return toSerialize, nil
}

func (o *FwLeaderboardsCorporationsGetVictoryPoints) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active_total",
		"last_week",
		"yesterday",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFwLeaderboardsCorporationsGetVictoryPoints := _FwLeaderboardsCorporationsGetVictoryPoints{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFwLeaderboardsCorporationsGetVictoryPoints)

	if err != nil {
		return err
	}

	*o = FwLeaderboardsCorporationsGetVictoryPoints(varFwLeaderboardsCorporationsGetVictoryPoints)

	return err
}

type NullableFwLeaderboardsCorporationsGetVictoryPoints struct {
	value *FwLeaderboardsCorporationsGetVictoryPoints
	isSet bool
}

func (v NullableFwLeaderboardsCorporationsGetVictoryPoints) Get() *FwLeaderboardsCorporationsGetVictoryPoints {
	return v.value
}

func (v *NullableFwLeaderboardsCorporationsGetVictoryPoints) Set(val *FwLeaderboardsCorporationsGetVictoryPoints) {
	v.value = val
	v.isSet = true
}

func (v NullableFwLeaderboardsCorporationsGetVictoryPoints) IsSet() bool {
	return v.isSet
}

func (v *NullableFwLeaderboardsCorporationsGetVictoryPoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFwLeaderboardsCorporationsGetVictoryPoints(val *FwLeaderboardsCorporationsGetVictoryPoints) *NullableFwLeaderboardsCorporationsGetVictoryPoints {
	return &NullableFwLeaderboardsCorporationsGetVictoryPoints{value: val, isSet: true}
}

func (v NullableFwLeaderboardsCorporationsGetVictoryPoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFwLeaderboardsCorporationsGetVictoryPoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


