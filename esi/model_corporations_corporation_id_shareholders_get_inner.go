/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdShareholdersGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdShareholdersGetInner{}

// CorporationsCorporationIdShareholdersGetInner struct for CorporationsCorporationIdShareholdersGetInner
type CorporationsCorporationIdShareholdersGetInner struct {
	ShareCount int64 `json:"share_count"`
	ShareholderId int64 `json:"shareholder_id"`
	ShareholderType string `json:"shareholder_type"`
}

type _CorporationsCorporationIdShareholdersGetInner CorporationsCorporationIdShareholdersGetInner

// NewCorporationsCorporationIdShareholdersGetInner instantiates a new CorporationsCorporationIdShareholdersGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdShareholdersGetInner(shareCount int64, shareholderId int64, shareholderType string) *CorporationsCorporationIdShareholdersGetInner {
	this := CorporationsCorporationIdShareholdersGetInner{}
	this.ShareCount = shareCount
	this.ShareholderId = shareholderId
	this.ShareholderType = shareholderType
	return &this
}

// NewCorporationsCorporationIdShareholdersGetInnerWithDefaults instantiates a new CorporationsCorporationIdShareholdersGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdShareholdersGetInnerWithDefaults() *CorporationsCorporationIdShareholdersGetInner {
	this := CorporationsCorporationIdShareholdersGetInner{}
	return &this
}

// GetShareCount returns the ShareCount field value
func (o *CorporationsCorporationIdShareholdersGetInner) GetShareCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShareCount
}

// GetShareCountOk returns a tuple with the ShareCount field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdShareholdersGetInner) GetShareCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareCount, true
}

// SetShareCount sets field value
func (o *CorporationsCorporationIdShareholdersGetInner) SetShareCount(v int64) {
	o.ShareCount = v
}

// GetShareholderId returns the ShareholderId field value
func (o *CorporationsCorporationIdShareholdersGetInner) GetShareholderId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShareholderId
}

// GetShareholderIdOk returns a tuple with the ShareholderId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdShareholdersGetInner) GetShareholderIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareholderId, true
}

// SetShareholderId sets field value
func (o *CorporationsCorporationIdShareholdersGetInner) SetShareholderId(v int64) {
	o.ShareholderId = v
}

// GetShareholderType returns the ShareholderType field value
func (o *CorporationsCorporationIdShareholdersGetInner) GetShareholderType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShareholderType
}

// GetShareholderTypeOk returns a tuple with the ShareholderType field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdShareholdersGetInner) GetShareholderTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShareholderType, true
}

// SetShareholderType sets field value
func (o *CorporationsCorporationIdShareholdersGetInner) SetShareholderType(v string) {
	o.ShareholderType = v
}

func (o CorporationsCorporationIdShareholdersGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdShareholdersGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["share_count"] = o.ShareCount
	toSerialize["shareholder_id"] = o.ShareholderId
	toSerialize["shareholder_type"] = o.ShareholderType
	return toSerialize, nil
}

func (o *CorporationsCorporationIdShareholdersGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"share_count",
		"shareholder_id",
		"shareholder_type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdShareholdersGetInner := _CorporationsCorporationIdShareholdersGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdShareholdersGetInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdShareholdersGetInner(varCorporationsCorporationIdShareholdersGetInner)

	return err
}

type NullableCorporationsCorporationIdShareholdersGetInner struct {
	value *CorporationsCorporationIdShareholdersGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdShareholdersGetInner) Get() *CorporationsCorporationIdShareholdersGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdShareholdersGetInner) Set(val *CorporationsCorporationIdShareholdersGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdShareholdersGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdShareholdersGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdShareholdersGetInner(val *CorporationsCorporationIdShareholdersGetInner) *NullableCorporationsCorporationIdShareholdersGetInner {
	return &NullableCorporationsCorporationIdShareholdersGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdShareholdersGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdShareholdersGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


