/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the StatusGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StatusGet{}

// StatusGet struct for StatusGet
type StatusGet struct {
	// Current online player count
	Players int32 `json:"players"`
	// Running version as string
	ServerVersion string `json:"server_version"`
	// Server start timestamp
	StartTime time.Time `json:"start_time"`
	// If the server is in VIP mode
	Vip *bool `json:"vip,omitempty"`
}

type _StatusGet StatusGet

// NewStatusGet instantiates a new StatusGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStatusGet(players int32, serverVersion string, startTime time.Time) *StatusGet {
	this := StatusGet{}
	this.Players = players
	this.ServerVersion = serverVersion
	this.StartTime = startTime
	return &this
}

// NewStatusGetWithDefaults instantiates a new StatusGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStatusGetWithDefaults() *StatusGet {
	this := StatusGet{}
	return &this
}

// GetPlayers returns the Players field value
func (o *StatusGet) GetPlayers() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Players
}

// GetPlayersOk returns a tuple with the Players field value
// and a boolean to check if the value has been set.
func (o *StatusGet) GetPlayersOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Players, true
}

// SetPlayers sets field value
func (o *StatusGet) SetPlayers(v int32) {
	o.Players = v
}

// GetServerVersion returns the ServerVersion field value
func (o *StatusGet) GetServerVersion() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ServerVersion
}

// GetServerVersionOk returns a tuple with the ServerVersion field value
// and a boolean to check if the value has been set.
func (o *StatusGet) GetServerVersionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ServerVersion, true
}

// SetServerVersion sets field value
func (o *StatusGet) SetServerVersion(v string) {
	o.ServerVersion = v
}

// GetStartTime returns the StartTime field value
func (o *StatusGet) GetStartTime() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value
// and a boolean to check if the value has been set.
func (o *StatusGet) GetStartTimeOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartTime, true
}

// SetStartTime sets field value
func (o *StatusGet) SetStartTime(v time.Time) {
	o.StartTime = v
}

// GetVip returns the Vip field value if set, zero value otherwise.
func (o *StatusGet) GetVip() bool {
	if o == nil || IsNil(o.Vip) {
		var ret bool
		return ret
	}
	return *o.Vip
}

// GetVipOk returns a tuple with the Vip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StatusGet) GetVipOk() (*bool, bool) {
	if o == nil || IsNil(o.Vip) {
		return nil, false
	}
	return o.Vip, true
}

// HasVip returns a boolean if a field has been set.
func (o *StatusGet) HasVip() bool {
	if o != nil && !IsNil(o.Vip) {
		return true
	}

	return false
}

// SetVip gets a reference to the given bool and assigns it to the Vip field.
func (o *StatusGet) SetVip(v bool) {
	o.Vip = &v
}

func (o StatusGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StatusGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["players"] = o.Players
	toSerialize["server_version"] = o.ServerVersion
	toSerialize["start_time"] = o.StartTime
	if !IsNil(o.Vip) {
		toSerialize["vip"] = o.Vip
	}
	return toSerialize, nil
}

func (o *StatusGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"players",
		"server_version",
		"start_time",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varStatusGet := _StatusGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varStatusGet)

	if err != nil {
		return err
	}

	*o = StatusGet(varStatusGet)

	return err
}

type NullableStatusGet struct {
	value *StatusGet
	isSet bool
}

func (v NullableStatusGet) Get() *StatusGet {
	return v.value
}

func (v *NullableStatusGet) Set(val *StatusGet) {
	v.value = val
	v.isSet = true
}

func (v NullableStatusGet) IsSet() bool {
	return v.isSet
}

func (v *NullableStatusGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStatusGet(val *StatusGet) *NullableStatusGet {
	return &NullableStatusGet{value: val, isSet: true}
}

func (v NullableStatusGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStatusGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


