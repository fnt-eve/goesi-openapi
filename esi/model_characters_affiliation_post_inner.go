/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CharactersAffiliationPostInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersAffiliationPostInner{}

// CharactersAffiliationPostInner struct for CharactersAffiliationPostInner
type CharactersAffiliationPostInner struct {
	// The character's alliance ID, if their corporation is in an alliance
	AllianceId *int64 `json:"alliance_id,omitempty"`
	// The character's ID
	CharacterId int64 `json:"character_id"`
	// The character's corporation ID
	CorporationId int64 `json:"corporation_id"`
	// The character's faction ID, if their corporation is in a faction
	FactionId *int64 `json:"faction_id,omitempty"`
}

type _CharactersAffiliationPostInner CharactersAffiliationPostInner

// NewCharactersAffiliationPostInner instantiates a new CharactersAffiliationPostInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersAffiliationPostInner(characterId int64, corporationId int64) *CharactersAffiliationPostInner {
	this := CharactersAffiliationPostInner{}
	this.CharacterId = characterId
	this.CorporationId = corporationId
	return &this
}

// NewCharactersAffiliationPostInnerWithDefaults instantiates a new CharactersAffiliationPostInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersAffiliationPostInnerWithDefaults() *CharactersAffiliationPostInner {
	this := CharactersAffiliationPostInner{}
	return &this
}

// GetAllianceId returns the AllianceId field value if set, zero value otherwise.
func (o *CharactersAffiliationPostInner) GetAllianceId() int64 {
	if o == nil || IsNil(o.AllianceId) {
		var ret int64
		return ret
	}
	return *o.AllianceId
}

// GetAllianceIdOk returns a tuple with the AllianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersAffiliationPostInner) GetAllianceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AllianceId) {
		return nil, false
	}
	return o.AllianceId, true
}

// HasAllianceId returns a boolean if a field has been set.
func (o *CharactersAffiliationPostInner) HasAllianceId() bool {
	if o != nil && !IsNil(o.AllianceId) {
		return true
	}

	return false
}

// SetAllianceId gets a reference to the given int64 and assigns it to the AllianceId field.
func (o *CharactersAffiliationPostInner) SetAllianceId(v int64) {
	o.AllianceId = &v
}

// GetCharacterId returns the CharacterId field value
func (o *CharactersAffiliationPostInner) GetCharacterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CharacterId
}

// GetCharacterIdOk returns a tuple with the CharacterId field value
// and a boolean to check if the value has been set.
func (o *CharactersAffiliationPostInner) GetCharacterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CharacterId, true
}

// SetCharacterId sets field value
func (o *CharactersAffiliationPostInner) SetCharacterId(v int64) {
	o.CharacterId = v
}

// GetCorporationId returns the CorporationId field value
func (o *CharactersAffiliationPostInner) GetCorporationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CorporationId
}

// GetCorporationIdOk returns a tuple with the CorporationId field value
// and a boolean to check if the value has been set.
func (o *CharactersAffiliationPostInner) GetCorporationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CorporationId, true
}

// SetCorporationId sets field value
func (o *CharactersAffiliationPostInner) SetCorporationId(v int64) {
	o.CorporationId = v
}

// GetFactionId returns the FactionId field value if set, zero value otherwise.
func (o *CharactersAffiliationPostInner) GetFactionId() int64 {
	if o == nil || IsNil(o.FactionId) {
		var ret int64
		return ret
	}
	return *o.FactionId
}

// GetFactionIdOk returns a tuple with the FactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersAffiliationPostInner) GetFactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FactionId) {
		return nil, false
	}
	return o.FactionId, true
}

// HasFactionId returns a boolean if a field has been set.
func (o *CharactersAffiliationPostInner) HasFactionId() bool {
	if o != nil && !IsNil(o.FactionId) {
		return true
	}

	return false
}

// SetFactionId gets a reference to the given int64 and assigns it to the FactionId field.
func (o *CharactersAffiliationPostInner) SetFactionId(v int64) {
	o.FactionId = &v
}

func (o CharactersAffiliationPostInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersAffiliationPostInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllianceId) {
		toSerialize["alliance_id"] = o.AllianceId
	}
	toSerialize["character_id"] = o.CharacterId
	toSerialize["corporation_id"] = o.CorporationId
	if !IsNil(o.FactionId) {
		toSerialize["faction_id"] = o.FactionId
	}
	return toSerialize, nil
}

func (o *CharactersAffiliationPostInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"character_id",
		"corporation_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCharactersAffiliationPostInner := _CharactersAffiliationPostInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCharactersAffiliationPostInner)

	if err != nil {
		return err
	}

	*o = CharactersAffiliationPostInner(varCharactersAffiliationPostInner)

	return err
}

type NullableCharactersAffiliationPostInner struct {
	value *CharactersAffiliationPostInner
	isSet bool
}

func (v NullableCharactersAffiliationPostInner) Get() *CharactersAffiliationPostInner {
	return v.value
}

func (v *NullableCharactersAffiliationPostInner) Set(val *CharactersAffiliationPostInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersAffiliationPostInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersAffiliationPostInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersAffiliationPostInner(val *CharactersAffiliationPostInner) *NullableCharactersAffiliationPostInner {
	return &NullableCharactersAffiliationPostInner{value: val, isSet: true}
}

func (v NullableCharactersAffiliationPostInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersAffiliationPostInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


