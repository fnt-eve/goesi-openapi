/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the CorporationsProjectsDetailConfigurationearnloyaltypoints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailConfigurationearnloyaltypoints{}

// CorporationsProjectsDetailConfigurationearnloyaltypoints struct for CorporationsProjectsDetailConfigurationearnloyaltypoints
type CorporationsProjectsDetailConfigurationearnloyaltypoints struct {
	// Corporation issuing loyalty points
	Corporations []CorporationsProjectsDetailConfigurationmatchercorporation `json:"corporations,omitempty"`
}

// NewCorporationsProjectsDetailConfigurationearnloyaltypoints instantiates a new CorporationsProjectsDetailConfigurationearnloyaltypoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailConfigurationearnloyaltypoints() *CorporationsProjectsDetailConfigurationearnloyaltypoints {
	this := CorporationsProjectsDetailConfigurationearnloyaltypoints{}
	return &this
}

// NewCorporationsProjectsDetailConfigurationearnloyaltypointsWithDefaults instantiates a new CorporationsProjectsDetailConfigurationearnloyaltypoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailConfigurationearnloyaltypointsWithDefaults() *CorporationsProjectsDetailConfigurationearnloyaltypoints {
	this := CorporationsProjectsDetailConfigurationearnloyaltypoints{}
	return &this
}

// GetCorporations returns the Corporations field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailConfigurationearnloyaltypoints) GetCorporations() []CorporationsProjectsDetailConfigurationmatchercorporation {
	if o == nil || IsNil(o.Corporations) {
		var ret []CorporationsProjectsDetailConfigurationmatchercorporation
		return ret
	}
	return o.Corporations
}

// GetCorporationsOk returns a tuple with the Corporations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationearnloyaltypoints) GetCorporationsOk() ([]CorporationsProjectsDetailConfigurationmatchercorporation, bool) {
	if o == nil || IsNil(o.Corporations) {
		return nil, false
	}
	return o.Corporations, true
}

// HasCorporations returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailConfigurationearnloyaltypoints) HasCorporations() bool {
	if o != nil && !IsNil(o.Corporations) {
		return true
	}

	return false
}

// SetCorporations gets a reference to the given []CorporationsProjectsDetailConfigurationmatchercorporation and assigns it to the Corporations field.
func (o *CorporationsProjectsDetailConfigurationearnloyaltypoints) SetCorporations(v []CorporationsProjectsDetailConfigurationmatchercorporation) {
	o.Corporations = v
}

func (o CorporationsProjectsDetailConfigurationearnloyaltypoints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailConfigurationearnloyaltypoints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Corporations) {
		toSerialize["corporations"] = o.Corporations
	}
	return toSerialize, nil
}

type NullableCorporationsProjectsDetailConfigurationearnloyaltypoints struct {
	value *CorporationsProjectsDetailConfigurationearnloyaltypoints
	isSet bool
}

func (v NullableCorporationsProjectsDetailConfigurationearnloyaltypoints) Get() *CorporationsProjectsDetailConfigurationearnloyaltypoints {
	return v.value
}

func (v *NullableCorporationsProjectsDetailConfigurationearnloyaltypoints) Set(val *CorporationsProjectsDetailConfigurationearnloyaltypoints) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailConfigurationearnloyaltypoints) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailConfigurationearnloyaltypoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailConfigurationearnloyaltypoints(val *CorporationsProjectsDetailConfigurationearnloyaltypoints) *NullableCorporationsProjectsDetailConfigurationearnloyaltypoints {
	return &NullableCorporationsProjectsDetailConfigurationearnloyaltypoints{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailConfigurationearnloyaltypoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailConfigurationearnloyaltypoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


