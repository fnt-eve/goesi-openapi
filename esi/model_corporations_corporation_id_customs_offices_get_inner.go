/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdCustomsOfficesGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdCustomsOfficesGetInner{}

// CorporationsCorporationIdCustomsOfficesGetInner struct for CorporationsCorporationIdCustomsOfficesGetInner
type CorporationsCorporationIdCustomsOfficesGetInner struct {
	// Only present if alliance access is allowed
	AllianceTaxRate *float64 `json:"alliance_tax_rate,omitempty"`
	// standing_level and any standing related tax rate only present when this is true
	AllowAccessWithStandings bool `json:"allow_access_with_standings"`
	AllowAllianceAccess bool `json:"allow_alliance_access"`
	BadStandingTaxRate *float64 `json:"bad_standing_tax_rate,omitempty"`
	CorporationTaxRate *float64 `json:"corporation_tax_rate,omitempty"`
	// Tax rate for entities with excellent level of standing, only present if this level is allowed, same for all other standing related tax rates
	ExcellentStandingTaxRate *float64 `json:"excellent_standing_tax_rate,omitempty"`
	GoodStandingTaxRate *float64 `json:"good_standing_tax_rate,omitempty"`
	NeutralStandingTaxRate *float64 `json:"neutral_standing_tax_rate,omitempty"`
	// unique ID of this customs office
	OfficeId int64 `json:"office_id"`
	ReinforceExitEnd int64 `json:"reinforce_exit_end"`
	// Together with reinforce_exit_end, marks a 2-hour period where this customs office could exit reinforcement mode during the day after initial attack
	ReinforceExitStart int64 `json:"reinforce_exit_start"`
	// Access is allowed only for entities with this level of standing or better
	StandingLevel *string `json:"standing_level,omitempty"`
	// ID of the solar system this customs office is located in
	SystemId int64 `json:"system_id"`
	TerribleStandingTaxRate *float64 `json:"terrible_standing_tax_rate,omitempty"`
}

type _CorporationsCorporationIdCustomsOfficesGetInner CorporationsCorporationIdCustomsOfficesGetInner

// NewCorporationsCorporationIdCustomsOfficesGetInner instantiates a new CorporationsCorporationIdCustomsOfficesGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdCustomsOfficesGetInner(allowAccessWithStandings bool, allowAllianceAccess bool, officeId int64, reinforceExitEnd int64, reinforceExitStart int64, systemId int64) *CorporationsCorporationIdCustomsOfficesGetInner {
	this := CorporationsCorporationIdCustomsOfficesGetInner{}
	this.AllowAccessWithStandings = allowAccessWithStandings
	this.AllowAllianceAccess = allowAllianceAccess
	this.OfficeId = officeId
	this.ReinforceExitEnd = reinforceExitEnd
	this.ReinforceExitStart = reinforceExitStart
	this.SystemId = systemId
	return &this
}

// NewCorporationsCorporationIdCustomsOfficesGetInnerWithDefaults instantiates a new CorporationsCorporationIdCustomsOfficesGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdCustomsOfficesGetInnerWithDefaults() *CorporationsCorporationIdCustomsOfficesGetInner {
	this := CorporationsCorporationIdCustomsOfficesGetInner{}
	return &this
}

// GetAllianceTaxRate returns the AllianceTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetAllianceTaxRate() float64 {
	if o == nil || IsNil(o.AllianceTaxRate) {
		var ret float64
		return ret
	}
	return *o.AllianceTaxRate
}

// GetAllianceTaxRateOk returns a tuple with the AllianceTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetAllianceTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.AllianceTaxRate) {
		return nil, false
	}
	return o.AllianceTaxRate, true
}

// HasAllianceTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasAllianceTaxRate() bool {
	if o != nil && !IsNil(o.AllianceTaxRate) {
		return true
	}

	return false
}

// SetAllianceTaxRate gets a reference to the given float64 and assigns it to the AllianceTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetAllianceTaxRate(v float64) {
	o.AllianceTaxRate = &v
}

// GetAllowAccessWithStandings returns the AllowAccessWithStandings field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetAllowAccessWithStandings() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowAccessWithStandings
}

// GetAllowAccessWithStandingsOk returns a tuple with the AllowAccessWithStandings field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetAllowAccessWithStandingsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowAccessWithStandings, true
}

// SetAllowAccessWithStandings sets field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetAllowAccessWithStandings(v bool) {
	o.AllowAccessWithStandings = v
}

// GetAllowAllianceAccess returns the AllowAllianceAccess field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetAllowAllianceAccess() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowAllianceAccess
}

// GetAllowAllianceAccessOk returns a tuple with the AllowAllianceAccess field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetAllowAllianceAccessOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowAllianceAccess, true
}

// SetAllowAllianceAccess sets field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetAllowAllianceAccess(v bool) {
	o.AllowAllianceAccess = v
}

// GetBadStandingTaxRate returns the BadStandingTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetBadStandingTaxRate() float64 {
	if o == nil || IsNil(o.BadStandingTaxRate) {
		var ret float64
		return ret
	}
	return *o.BadStandingTaxRate
}

// GetBadStandingTaxRateOk returns a tuple with the BadStandingTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetBadStandingTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.BadStandingTaxRate) {
		return nil, false
	}
	return o.BadStandingTaxRate, true
}

// HasBadStandingTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasBadStandingTaxRate() bool {
	if o != nil && !IsNil(o.BadStandingTaxRate) {
		return true
	}

	return false
}

// SetBadStandingTaxRate gets a reference to the given float64 and assigns it to the BadStandingTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetBadStandingTaxRate(v float64) {
	o.BadStandingTaxRate = &v
}

// GetCorporationTaxRate returns the CorporationTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetCorporationTaxRate() float64 {
	if o == nil || IsNil(o.CorporationTaxRate) {
		var ret float64
		return ret
	}
	return *o.CorporationTaxRate
}

// GetCorporationTaxRateOk returns a tuple with the CorporationTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetCorporationTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.CorporationTaxRate) {
		return nil, false
	}
	return o.CorporationTaxRate, true
}

// HasCorporationTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasCorporationTaxRate() bool {
	if o != nil && !IsNil(o.CorporationTaxRate) {
		return true
	}

	return false
}

// SetCorporationTaxRate gets a reference to the given float64 and assigns it to the CorporationTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetCorporationTaxRate(v float64) {
	o.CorporationTaxRate = &v
}

// GetExcellentStandingTaxRate returns the ExcellentStandingTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetExcellentStandingTaxRate() float64 {
	if o == nil || IsNil(o.ExcellentStandingTaxRate) {
		var ret float64
		return ret
	}
	return *o.ExcellentStandingTaxRate
}

// GetExcellentStandingTaxRateOk returns a tuple with the ExcellentStandingTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetExcellentStandingTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.ExcellentStandingTaxRate) {
		return nil, false
	}
	return o.ExcellentStandingTaxRate, true
}

// HasExcellentStandingTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasExcellentStandingTaxRate() bool {
	if o != nil && !IsNil(o.ExcellentStandingTaxRate) {
		return true
	}

	return false
}

// SetExcellentStandingTaxRate gets a reference to the given float64 and assigns it to the ExcellentStandingTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetExcellentStandingTaxRate(v float64) {
	o.ExcellentStandingTaxRate = &v
}

// GetGoodStandingTaxRate returns the GoodStandingTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetGoodStandingTaxRate() float64 {
	if o == nil || IsNil(o.GoodStandingTaxRate) {
		var ret float64
		return ret
	}
	return *o.GoodStandingTaxRate
}

// GetGoodStandingTaxRateOk returns a tuple with the GoodStandingTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetGoodStandingTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.GoodStandingTaxRate) {
		return nil, false
	}
	return o.GoodStandingTaxRate, true
}

// HasGoodStandingTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasGoodStandingTaxRate() bool {
	if o != nil && !IsNil(o.GoodStandingTaxRate) {
		return true
	}

	return false
}

// SetGoodStandingTaxRate gets a reference to the given float64 and assigns it to the GoodStandingTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetGoodStandingTaxRate(v float64) {
	o.GoodStandingTaxRate = &v
}

// GetNeutralStandingTaxRate returns the NeutralStandingTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetNeutralStandingTaxRate() float64 {
	if o == nil || IsNil(o.NeutralStandingTaxRate) {
		var ret float64
		return ret
	}
	return *o.NeutralStandingTaxRate
}

// GetNeutralStandingTaxRateOk returns a tuple with the NeutralStandingTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetNeutralStandingTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.NeutralStandingTaxRate) {
		return nil, false
	}
	return o.NeutralStandingTaxRate, true
}

// HasNeutralStandingTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasNeutralStandingTaxRate() bool {
	if o != nil && !IsNil(o.NeutralStandingTaxRate) {
		return true
	}

	return false
}

// SetNeutralStandingTaxRate gets a reference to the given float64 and assigns it to the NeutralStandingTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetNeutralStandingTaxRate(v float64) {
	o.NeutralStandingTaxRate = &v
}

// GetOfficeId returns the OfficeId field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetOfficeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OfficeId
}

// GetOfficeIdOk returns a tuple with the OfficeId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetOfficeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OfficeId, true
}

// SetOfficeId sets field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetOfficeId(v int64) {
	o.OfficeId = v
}

// GetReinforceExitEnd returns the ReinforceExitEnd field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetReinforceExitEnd() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ReinforceExitEnd
}

// GetReinforceExitEndOk returns a tuple with the ReinforceExitEnd field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetReinforceExitEndOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReinforceExitEnd, true
}

// SetReinforceExitEnd sets field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetReinforceExitEnd(v int64) {
	o.ReinforceExitEnd = v
}

// GetReinforceExitStart returns the ReinforceExitStart field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetReinforceExitStart() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ReinforceExitStart
}

// GetReinforceExitStartOk returns a tuple with the ReinforceExitStart field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetReinforceExitStartOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReinforceExitStart, true
}

// SetReinforceExitStart sets field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetReinforceExitStart(v int64) {
	o.ReinforceExitStart = v
}

// GetStandingLevel returns the StandingLevel field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetStandingLevel() string {
	if o == nil || IsNil(o.StandingLevel) {
		var ret string
		return ret
	}
	return *o.StandingLevel
}

// GetStandingLevelOk returns a tuple with the StandingLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetStandingLevelOk() (*string, bool) {
	if o == nil || IsNil(o.StandingLevel) {
		return nil, false
	}
	return o.StandingLevel, true
}

// HasStandingLevel returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasStandingLevel() bool {
	if o != nil && !IsNil(o.StandingLevel) {
		return true
	}

	return false
}

// SetStandingLevel gets a reference to the given string and assigns it to the StandingLevel field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetStandingLevel(v string) {
	o.StandingLevel = &v
}

// GetSystemId returns the SystemId field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetSystemId(v int64) {
	o.SystemId = v
}

// GetTerribleStandingTaxRate returns the TerribleStandingTaxRate field value if set, zero value otherwise.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetTerribleStandingTaxRate() float64 {
	if o == nil || IsNil(o.TerribleStandingTaxRate) {
		var ret float64
		return ret
	}
	return *o.TerribleStandingTaxRate
}

// GetTerribleStandingTaxRateOk returns a tuple with the TerribleStandingTaxRate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) GetTerribleStandingTaxRateOk() (*float64, bool) {
	if o == nil || IsNil(o.TerribleStandingTaxRate) {
		return nil, false
	}
	return o.TerribleStandingTaxRate, true
}

// HasTerribleStandingTaxRate returns a boolean if a field has been set.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) HasTerribleStandingTaxRate() bool {
	if o != nil && !IsNil(o.TerribleStandingTaxRate) {
		return true
	}

	return false
}

// SetTerribleStandingTaxRate gets a reference to the given float64 and assigns it to the TerribleStandingTaxRate field.
func (o *CorporationsCorporationIdCustomsOfficesGetInner) SetTerribleStandingTaxRate(v float64) {
	o.TerribleStandingTaxRate = &v
}

func (o CorporationsCorporationIdCustomsOfficesGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdCustomsOfficesGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllianceTaxRate) {
		toSerialize["alliance_tax_rate"] = o.AllianceTaxRate
	}
	toSerialize["allow_access_with_standings"] = o.AllowAccessWithStandings
	toSerialize["allow_alliance_access"] = o.AllowAllianceAccess
	if !IsNil(o.BadStandingTaxRate) {
		toSerialize["bad_standing_tax_rate"] = o.BadStandingTaxRate
	}
	if !IsNil(o.CorporationTaxRate) {
		toSerialize["corporation_tax_rate"] = o.CorporationTaxRate
	}
	if !IsNil(o.ExcellentStandingTaxRate) {
		toSerialize["excellent_standing_tax_rate"] = o.ExcellentStandingTaxRate
	}
	if !IsNil(o.GoodStandingTaxRate) {
		toSerialize["good_standing_tax_rate"] = o.GoodStandingTaxRate
	}
	if !IsNil(o.NeutralStandingTaxRate) {
		toSerialize["neutral_standing_tax_rate"] = o.NeutralStandingTaxRate
	}
	toSerialize["office_id"] = o.OfficeId
	toSerialize["reinforce_exit_end"] = o.ReinforceExitEnd
	toSerialize["reinforce_exit_start"] = o.ReinforceExitStart
	if !IsNil(o.StandingLevel) {
		toSerialize["standing_level"] = o.StandingLevel
	}
	toSerialize["system_id"] = o.SystemId
	if !IsNil(o.TerribleStandingTaxRate) {
		toSerialize["terrible_standing_tax_rate"] = o.TerribleStandingTaxRate
	}
	return toSerialize, nil
}

func (o *CorporationsCorporationIdCustomsOfficesGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allow_access_with_standings",
		"allow_alliance_access",
		"office_id",
		"reinforce_exit_end",
		"reinforce_exit_start",
		"system_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdCustomsOfficesGetInner := _CorporationsCorporationIdCustomsOfficesGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdCustomsOfficesGetInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdCustomsOfficesGetInner(varCorporationsCorporationIdCustomsOfficesGetInner)

	return err
}

type NullableCorporationsCorporationIdCustomsOfficesGetInner struct {
	value *CorporationsCorporationIdCustomsOfficesGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdCustomsOfficesGetInner) Get() *CorporationsCorporationIdCustomsOfficesGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdCustomsOfficesGetInner) Set(val *CorporationsCorporationIdCustomsOfficesGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdCustomsOfficesGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdCustomsOfficesGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdCustomsOfficesGetInner(val *CorporationsCorporationIdCustomsOfficesGetInner) *NullableCorporationsCorporationIdCustomsOfficesGetInner {
	return &NullableCorporationsCorporationIdCustomsOfficesGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdCustomsOfficesGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdCustomsOfficesGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


