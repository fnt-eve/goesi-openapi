/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsDetail type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetail{}

// CorporationsProjectsDetail struct for CorporationsProjectsDetail
type CorporationsProjectsDetail struct {
	Configuration CorporationsProjectsDetailConfiguration `json:"configuration"`
	Contribution *CorporationsProjectsDetailContribution `json:"contribution,omitempty"`
	Creator CorporationsProjectsDetailCreator `json:"creator"`
	Details CorporationsProjectsDetailDetails `json:"details"`
	Id string `json:"id"`
	// Moment this project was last modified. Project contributions also count as a modification
	LastModified time.Time `json:"last_modified"`
	// Project's name
	Name string `json:"name"`
	Progress CorporationsProjectsDetailProgress `json:"progress"`
	Reward *CorporationsProjectsDetailReward `json:"reward,omitempty"`
	// Project's current state
	State string `json:"state"`
}

type _CorporationsProjectsDetail CorporationsProjectsDetail

// NewCorporationsProjectsDetail instantiates a new CorporationsProjectsDetail object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetail(configuration CorporationsProjectsDetailConfiguration, creator CorporationsProjectsDetailCreator, details CorporationsProjectsDetailDetails, id string, lastModified time.Time, name string, progress CorporationsProjectsDetailProgress, state string) *CorporationsProjectsDetail {
	this := CorporationsProjectsDetail{}
	this.Configuration = configuration
	this.Creator = creator
	this.Details = details
	this.Id = id
	this.LastModified = lastModified
	this.Name = name
	this.Progress = progress
	this.State = state
	return &this
}

// NewCorporationsProjectsDetailWithDefaults instantiates a new CorporationsProjectsDetail object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailWithDefaults() *CorporationsProjectsDetail {
	this := CorporationsProjectsDetail{}
	return &this
}

// GetConfiguration returns the Configuration field value
func (o *CorporationsProjectsDetail) GetConfiguration() CorporationsProjectsDetailConfiguration {
	if o == nil {
		var ret CorporationsProjectsDetailConfiguration
		return ret
	}

	return o.Configuration
}

// GetConfigurationOk returns a tuple with the Configuration field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetConfigurationOk() (*CorporationsProjectsDetailConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Configuration, true
}

// SetConfiguration sets field value
func (o *CorporationsProjectsDetail) SetConfiguration(v CorporationsProjectsDetailConfiguration) {
	o.Configuration = v
}

// GetContribution returns the Contribution field value if set, zero value otherwise.
func (o *CorporationsProjectsDetail) GetContribution() CorporationsProjectsDetailContribution {
	if o == nil || IsNil(o.Contribution) {
		var ret CorporationsProjectsDetailContribution
		return ret
	}
	return *o.Contribution
}

// GetContributionOk returns a tuple with the Contribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetContributionOk() (*CorporationsProjectsDetailContribution, bool) {
	if o == nil || IsNil(o.Contribution) {
		return nil, false
	}
	return o.Contribution, true
}

// HasContribution returns a boolean if a field has been set.
func (o *CorporationsProjectsDetail) HasContribution() bool {
	if o != nil && !IsNil(o.Contribution) {
		return true
	}

	return false
}

// SetContribution gets a reference to the given CorporationsProjectsDetailContribution and assigns it to the Contribution field.
func (o *CorporationsProjectsDetail) SetContribution(v CorporationsProjectsDetailContribution) {
	o.Contribution = &v
}

// GetCreator returns the Creator field value
func (o *CorporationsProjectsDetail) GetCreator() CorporationsProjectsDetailCreator {
	if o == nil {
		var ret CorporationsProjectsDetailCreator
		return ret
	}

	return o.Creator
}

// GetCreatorOk returns a tuple with the Creator field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetCreatorOk() (*CorporationsProjectsDetailCreator, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Creator, true
}

// SetCreator sets field value
func (o *CorporationsProjectsDetail) SetCreator(v CorporationsProjectsDetailCreator) {
	o.Creator = v
}

// GetDetails returns the Details field value
func (o *CorporationsProjectsDetail) GetDetails() CorporationsProjectsDetailDetails {
	if o == nil {
		var ret CorporationsProjectsDetailDetails
		return ret
	}

	return o.Details
}

// GetDetailsOk returns a tuple with the Details field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetDetailsOk() (*CorporationsProjectsDetailDetails, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Details, true
}

// SetDetails sets field value
func (o *CorporationsProjectsDetail) SetDetails(v CorporationsProjectsDetailDetails) {
	o.Details = v
}

// GetId returns the Id field value
func (o *CorporationsProjectsDetail) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CorporationsProjectsDetail) SetId(v string) {
	o.Id = v
}

// GetLastModified returns the LastModified field value
func (o *CorporationsProjectsDetail) GetLastModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModified, true
}

// SetLastModified sets field value
func (o *CorporationsProjectsDetail) SetLastModified(v time.Time) {
	o.LastModified = v
}

// GetName returns the Name field value
func (o *CorporationsProjectsDetail) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CorporationsProjectsDetail) SetName(v string) {
	o.Name = v
}

// GetProgress returns the Progress field value
func (o *CorporationsProjectsDetail) GetProgress() CorporationsProjectsDetailProgress {
	if o == nil {
		var ret CorporationsProjectsDetailProgress
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetProgressOk() (*CorporationsProjectsDetailProgress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *CorporationsProjectsDetail) SetProgress(v CorporationsProjectsDetailProgress) {
	o.Progress = v
}

// GetReward returns the Reward field value if set, zero value otherwise.
func (o *CorporationsProjectsDetail) GetReward() CorporationsProjectsDetailReward {
	if o == nil || IsNil(o.Reward) {
		var ret CorporationsProjectsDetailReward
		return ret
	}
	return *o.Reward
}

// GetRewardOk returns a tuple with the Reward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetRewardOk() (*CorporationsProjectsDetailReward, bool) {
	if o == nil || IsNil(o.Reward) {
		return nil, false
	}
	return o.Reward, true
}

// HasReward returns a boolean if a field has been set.
func (o *CorporationsProjectsDetail) HasReward() bool {
	if o != nil && !IsNil(o.Reward) {
		return true
	}

	return false
}

// SetReward gets a reference to the given CorporationsProjectsDetailReward and assigns it to the Reward field.
func (o *CorporationsProjectsDetail) SetReward(v CorporationsProjectsDetailReward) {
	o.Reward = &v
}

// GetState returns the State field value
func (o *CorporationsProjectsDetail) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetail) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CorporationsProjectsDetail) SetState(v string) {
	o.State = v
}

func (o CorporationsProjectsDetail) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetail) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["configuration"] = o.Configuration
	if !IsNil(o.Contribution) {
		toSerialize["contribution"] = o.Contribution
	}
	toSerialize["creator"] = o.Creator
	toSerialize["details"] = o.Details
	toSerialize["id"] = o.Id
	toSerialize["last_modified"] = o.LastModified
	toSerialize["name"] = o.Name
	toSerialize["progress"] = o.Progress
	if !IsNil(o.Reward) {
		toSerialize["reward"] = o.Reward
	}
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *CorporationsProjectsDetail) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"configuration",
		"creator",
		"details",
		"id",
		"last_modified",
		"name",
		"progress",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsDetail := _CorporationsProjectsDetail{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsDetail)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsDetail(varCorporationsProjectsDetail)

	return err
}

type NullableCorporationsProjectsDetail struct {
	value *CorporationsProjectsDetail
	isSet bool
}

func (v NullableCorporationsProjectsDetail) Get() *CorporationsProjectsDetail {
	return v.value
}

func (v *NullableCorporationsProjectsDetail) Set(val *CorporationsProjectsDetail) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetail) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetail) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetail(val *CorporationsProjectsDetail) *NullableCorporationsProjectsDetail {
	return &NullableCorporationsProjectsDetail{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetail) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetail) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


