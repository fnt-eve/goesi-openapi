/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseSystemsSystemIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseSystemsSystemIdGet{}

// UniverseSystemsSystemIdGet struct for UniverseSystemsSystemIdGet
type UniverseSystemsSystemIdGet struct {
	// The constellation this solar system is in
	ConstellationId int64 `json:"constellation_id"`
	Name string `json:"name"`
	Planets []UniverseSystemsSystemIdGetPlanetsInner `json:"planets,omitempty"`
	Position CharactersCharacterIdAssetsLocationsPostInnerPosition `json:"position"`
	SecurityClass *string `json:"security_class,omitempty"`
	SecurityStatus float64 `json:"security_status"`
	StarId *int64 `json:"star_id,omitempty"`
	Stargates []int64 `json:"stargates,omitempty"`
	Stations []int64 `json:"stations,omitempty"`
	SystemId int64 `json:"system_id"`
}

type _UniverseSystemsSystemIdGet UniverseSystemsSystemIdGet

// NewUniverseSystemsSystemIdGet instantiates a new UniverseSystemsSystemIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseSystemsSystemIdGet(constellationId int64, name string, position CharactersCharacterIdAssetsLocationsPostInnerPosition, securityStatus float64, systemId int64) *UniverseSystemsSystemIdGet {
	this := UniverseSystemsSystemIdGet{}
	this.ConstellationId = constellationId
	this.Name = name
	this.Position = position
	this.SecurityStatus = securityStatus
	this.SystemId = systemId
	return &this
}

// NewUniverseSystemsSystemIdGetWithDefaults instantiates a new UniverseSystemsSystemIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseSystemsSystemIdGetWithDefaults() *UniverseSystemsSystemIdGet {
	this := UniverseSystemsSystemIdGet{}
	return &this
}

// GetConstellationId returns the ConstellationId field value
func (o *UniverseSystemsSystemIdGet) GetConstellationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ConstellationId
}

// GetConstellationIdOk returns a tuple with the ConstellationId field value
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetConstellationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConstellationId, true
}

// SetConstellationId sets field value
func (o *UniverseSystemsSystemIdGet) SetConstellationId(v int64) {
	o.ConstellationId = v
}

// GetName returns the Name field value
func (o *UniverseSystemsSystemIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniverseSystemsSystemIdGet) SetName(v string) {
	o.Name = v
}

// GetPlanets returns the Planets field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGet) GetPlanets() []UniverseSystemsSystemIdGetPlanetsInner {
	if o == nil || IsNil(o.Planets) {
		var ret []UniverseSystemsSystemIdGetPlanetsInner
		return ret
	}
	return o.Planets
}

// GetPlanetsOk returns a tuple with the Planets field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetPlanetsOk() ([]UniverseSystemsSystemIdGetPlanetsInner, bool) {
	if o == nil || IsNil(o.Planets) {
		return nil, false
	}
	return o.Planets, true
}

// HasPlanets returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGet) HasPlanets() bool {
	if o != nil && !IsNil(o.Planets) {
		return true
	}

	return false
}

// SetPlanets gets a reference to the given []UniverseSystemsSystemIdGetPlanetsInner and assigns it to the Planets field.
func (o *UniverseSystemsSystemIdGet) SetPlanets(v []UniverseSystemsSystemIdGetPlanetsInner) {
	o.Planets = v
}

// GetPosition returns the Position field value
func (o *UniverseSystemsSystemIdGet) GetPosition() CharactersCharacterIdAssetsLocationsPostInnerPosition {
	if o == nil {
		var ret CharactersCharacterIdAssetsLocationsPostInnerPosition
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetPositionOk() (*CharactersCharacterIdAssetsLocationsPostInnerPosition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *UniverseSystemsSystemIdGet) SetPosition(v CharactersCharacterIdAssetsLocationsPostInnerPosition) {
	o.Position = v
}

// GetSecurityClass returns the SecurityClass field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGet) GetSecurityClass() string {
	if o == nil || IsNil(o.SecurityClass) {
		var ret string
		return ret
	}
	return *o.SecurityClass
}

// GetSecurityClassOk returns a tuple with the SecurityClass field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetSecurityClassOk() (*string, bool) {
	if o == nil || IsNil(o.SecurityClass) {
		return nil, false
	}
	return o.SecurityClass, true
}

// HasSecurityClass returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGet) HasSecurityClass() bool {
	if o != nil && !IsNil(o.SecurityClass) {
		return true
	}

	return false
}

// SetSecurityClass gets a reference to the given string and assigns it to the SecurityClass field.
func (o *UniverseSystemsSystemIdGet) SetSecurityClass(v string) {
	o.SecurityClass = &v
}

// GetSecurityStatus returns the SecurityStatus field value
func (o *UniverseSystemsSystemIdGet) GetSecurityStatus() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SecurityStatus
}

// GetSecurityStatusOk returns a tuple with the SecurityStatus field value
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetSecurityStatusOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SecurityStatus, true
}

// SetSecurityStatus sets field value
func (o *UniverseSystemsSystemIdGet) SetSecurityStatus(v float64) {
	o.SecurityStatus = v
}

// GetStarId returns the StarId field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGet) GetStarId() int64 {
	if o == nil || IsNil(o.StarId) {
		var ret int64
		return ret
	}
	return *o.StarId
}

// GetStarIdOk returns a tuple with the StarId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetStarIdOk() (*int64, bool) {
	if o == nil || IsNil(o.StarId) {
		return nil, false
	}
	return o.StarId, true
}

// HasStarId returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGet) HasStarId() bool {
	if o != nil && !IsNil(o.StarId) {
		return true
	}

	return false
}

// SetStarId gets a reference to the given int64 and assigns it to the StarId field.
func (o *UniverseSystemsSystemIdGet) SetStarId(v int64) {
	o.StarId = &v
}

// GetStargates returns the Stargates field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGet) GetStargates() []int64 {
	if o == nil || IsNil(o.Stargates) {
		var ret []int64
		return ret
	}
	return o.Stargates
}

// GetStargatesOk returns a tuple with the Stargates field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetStargatesOk() ([]int64, bool) {
	if o == nil || IsNil(o.Stargates) {
		return nil, false
	}
	return o.Stargates, true
}

// HasStargates returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGet) HasStargates() bool {
	if o != nil && !IsNil(o.Stargates) {
		return true
	}

	return false
}

// SetStargates gets a reference to the given []int64 and assigns it to the Stargates field.
func (o *UniverseSystemsSystemIdGet) SetStargates(v []int64) {
	o.Stargates = v
}

// GetStations returns the Stations field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGet) GetStations() []int64 {
	if o == nil || IsNil(o.Stations) {
		var ret []int64
		return ret
	}
	return o.Stations
}

// GetStationsOk returns a tuple with the Stations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetStationsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Stations) {
		return nil, false
	}
	return o.Stations, true
}

// HasStations returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGet) HasStations() bool {
	if o != nil && !IsNil(o.Stations) {
		return true
	}

	return false
}

// SetStations gets a reference to the given []int64 and assigns it to the Stations field.
func (o *UniverseSystemsSystemIdGet) SetStations(v []int64) {
	o.Stations = v
}

// GetSystemId returns the SystemId field value
func (o *UniverseSystemsSystemIdGet) GetSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGet) GetSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *UniverseSystemsSystemIdGet) SetSystemId(v int64) {
	o.SystemId = v
}

func (o UniverseSystemsSystemIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseSystemsSystemIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["constellation_id"] = o.ConstellationId
	toSerialize["name"] = o.Name
	if !IsNil(o.Planets) {
		toSerialize["planets"] = o.Planets
	}
	toSerialize["position"] = o.Position
	if !IsNil(o.SecurityClass) {
		toSerialize["security_class"] = o.SecurityClass
	}
	toSerialize["security_status"] = o.SecurityStatus
	if !IsNil(o.StarId) {
		toSerialize["star_id"] = o.StarId
	}
	if !IsNil(o.Stargates) {
		toSerialize["stargates"] = o.Stargates
	}
	if !IsNil(o.Stations) {
		toSerialize["stations"] = o.Stations
	}
	toSerialize["system_id"] = o.SystemId
	return toSerialize, nil
}

func (o *UniverseSystemsSystemIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"constellation_id",
		"name",
		"position",
		"security_status",
		"system_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseSystemsSystemIdGet := _UniverseSystemsSystemIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseSystemsSystemIdGet)

	if err != nil {
		return err
	}

	*o = UniverseSystemsSystemIdGet(varUniverseSystemsSystemIdGet)

	return err
}

type NullableUniverseSystemsSystemIdGet struct {
	value *UniverseSystemsSystemIdGet
	isSet bool
}

func (v NullableUniverseSystemsSystemIdGet) Get() *UniverseSystemsSystemIdGet {
	return v.value
}

func (v *NullableUniverseSystemsSystemIdGet) Set(val *UniverseSystemsSystemIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseSystemsSystemIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseSystemsSystemIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseSystemsSystemIdGet(val *UniverseSystemsSystemIdGet) *NullableUniverseSystemsSystemIdGet {
	return &NullableUniverseSystemsSystemIdGet{value: val, isSet: true}
}

func (v NullableUniverseSystemsSystemIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseSystemsSystemIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


