/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the SovereigntyStructuresGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &SovereigntyStructuresGetInner{}

// SovereigntyStructuresGetInner struct for SovereigntyStructuresGetInner
type SovereigntyStructuresGetInner struct {
	// The alliance that owns the structure. 
	AllianceId int64 `json:"alliance_id"`
	// Solar system in which the structure is located. 
	SolarSystemId int64 `json:"solar_system_id"`
	// Unique item ID for this structure.
	StructureId int64 `json:"structure_id"`
	// A reference to the type of structure this is. 
	StructureTypeId int64 `json:"structure_type_id"`
	// The occupancy level for the next or current vulnerability window. This takes into account all development indexes and capital system bonuses. Also known as Activity Defense Multiplier from in the client. It increases the time that attackers must spend using their entosis links on the structure. 
	VulnerabilityOccupancyLevel *float64 `json:"vulnerability_occupancy_level,omitempty"`
	// The time at which the next or current vulnerability window ends. At the end of a vulnerability window the next window is recalculated and locked in along with the vulnerabilityOccupancyLevel. If the structure is not in 100% entosis control of the defender, it will go in to 'overtime' and stay vulnerable for as long as that situation persists. Only once the defenders have 100% entosis control and has the vulnerableEndTime passed does the vulnerability interval expire and a new one is calculated. 
	VulnerableEndTime *time.Time `json:"vulnerable_end_time,omitempty"`
	// The next time at which the structure will become vulnerable. Or the start time of the current window if current time is between this and vulnerableEndTime. 
	VulnerableStartTime *time.Time `json:"vulnerable_start_time,omitempty"`
}

type _SovereigntyStructuresGetInner SovereigntyStructuresGetInner

// NewSovereigntyStructuresGetInner instantiates a new SovereigntyStructuresGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewSovereigntyStructuresGetInner(allianceId int64, solarSystemId int64, structureId int64, structureTypeId int64) *SovereigntyStructuresGetInner {
	this := SovereigntyStructuresGetInner{}
	this.AllianceId = allianceId
	this.SolarSystemId = solarSystemId
	this.StructureId = structureId
	this.StructureTypeId = structureTypeId
	return &this
}

// NewSovereigntyStructuresGetInnerWithDefaults instantiates a new SovereigntyStructuresGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewSovereigntyStructuresGetInnerWithDefaults() *SovereigntyStructuresGetInner {
	this := SovereigntyStructuresGetInner{}
	return &this
}

// GetAllianceId returns the AllianceId field value
func (o *SovereigntyStructuresGetInner) GetAllianceId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AllianceId
}

// GetAllianceIdOk returns a tuple with the AllianceId field value
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetAllianceIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllianceId, true
}

// SetAllianceId sets field value
func (o *SovereigntyStructuresGetInner) SetAllianceId(v int64) {
	o.AllianceId = v
}

// GetSolarSystemId returns the SolarSystemId field value
func (o *SovereigntyStructuresGetInner) GetSolarSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SolarSystemId
}

// GetSolarSystemIdOk returns a tuple with the SolarSystemId field value
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetSolarSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SolarSystemId, true
}

// SetSolarSystemId sets field value
func (o *SovereigntyStructuresGetInner) SetSolarSystemId(v int64) {
	o.SolarSystemId = v
}

// GetStructureId returns the StructureId field value
func (o *SovereigntyStructuresGetInner) GetStructureId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StructureId
}

// GetStructureIdOk returns a tuple with the StructureId field value
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetStructureIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StructureId, true
}

// SetStructureId sets field value
func (o *SovereigntyStructuresGetInner) SetStructureId(v int64) {
	o.StructureId = v
}

// GetStructureTypeId returns the StructureTypeId field value
func (o *SovereigntyStructuresGetInner) GetStructureTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StructureTypeId
}

// GetStructureTypeIdOk returns a tuple with the StructureTypeId field value
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetStructureTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StructureTypeId, true
}

// SetStructureTypeId sets field value
func (o *SovereigntyStructuresGetInner) SetStructureTypeId(v int64) {
	o.StructureTypeId = v
}

// GetVulnerabilityOccupancyLevel returns the VulnerabilityOccupancyLevel field value if set, zero value otherwise.
func (o *SovereigntyStructuresGetInner) GetVulnerabilityOccupancyLevel() float64 {
	if o == nil || IsNil(o.VulnerabilityOccupancyLevel) {
		var ret float64
		return ret
	}
	return *o.VulnerabilityOccupancyLevel
}

// GetVulnerabilityOccupancyLevelOk returns a tuple with the VulnerabilityOccupancyLevel field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetVulnerabilityOccupancyLevelOk() (*float64, bool) {
	if o == nil || IsNil(o.VulnerabilityOccupancyLevel) {
		return nil, false
	}
	return o.VulnerabilityOccupancyLevel, true
}

// HasVulnerabilityOccupancyLevel returns a boolean if a field has been set.
func (o *SovereigntyStructuresGetInner) HasVulnerabilityOccupancyLevel() bool {
	if o != nil && !IsNil(o.VulnerabilityOccupancyLevel) {
		return true
	}

	return false
}

// SetVulnerabilityOccupancyLevel gets a reference to the given float64 and assigns it to the VulnerabilityOccupancyLevel field.
func (o *SovereigntyStructuresGetInner) SetVulnerabilityOccupancyLevel(v float64) {
	o.VulnerabilityOccupancyLevel = &v
}

// GetVulnerableEndTime returns the VulnerableEndTime field value if set, zero value otherwise.
func (o *SovereigntyStructuresGetInner) GetVulnerableEndTime() time.Time {
	if o == nil || IsNil(o.VulnerableEndTime) {
		var ret time.Time
		return ret
	}
	return *o.VulnerableEndTime
}

// GetVulnerableEndTimeOk returns a tuple with the VulnerableEndTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetVulnerableEndTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.VulnerableEndTime) {
		return nil, false
	}
	return o.VulnerableEndTime, true
}

// HasVulnerableEndTime returns a boolean if a field has been set.
func (o *SovereigntyStructuresGetInner) HasVulnerableEndTime() bool {
	if o != nil && !IsNil(o.VulnerableEndTime) {
		return true
	}

	return false
}

// SetVulnerableEndTime gets a reference to the given time.Time and assigns it to the VulnerableEndTime field.
func (o *SovereigntyStructuresGetInner) SetVulnerableEndTime(v time.Time) {
	o.VulnerableEndTime = &v
}

// GetVulnerableStartTime returns the VulnerableStartTime field value if set, zero value otherwise.
func (o *SovereigntyStructuresGetInner) GetVulnerableStartTime() time.Time {
	if o == nil || IsNil(o.VulnerableStartTime) {
		var ret time.Time
		return ret
	}
	return *o.VulnerableStartTime
}

// GetVulnerableStartTimeOk returns a tuple with the VulnerableStartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *SovereigntyStructuresGetInner) GetVulnerableStartTimeOk() (*time.Time, bool) {
	if o == nil || IsNil(o.VulnerableStartTime) {
		return nil, false
	}
	return o.VulnerableStartTime, true
}

// HasVulnerableStartTime returns a boolean if a field has been set.
func (o *SovereigntyStructuresGetInner) HasVulnerableStartTime() bool {
	if o != nil && !IsNil(o.VulnerableStartTime) {
		return true
	}

	return false
}

// SetVulnerableStartTime gets a reference to the given time.Time and assigns it to the VulnerableStartTime field.
func (o *SovereigntyStructuresGetInner) SetVulnerableStartTime(v time.Time) {
	o.VulnerableStartTime = &v
}

func (o SovereigntyStructuresGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o SovereigntyStructuresGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["alliance_id"] = o.AllianceId
	toSerialize["solar_system_id"] = o.SolarSystemId
	toSerialize["structure_id"] = o.StructureId
	toSerialize["structure_type_id"] = o.StructureTypeId
	if !IsNil(o.VulnerabilityOccupancyLevel) {
		toSerialize["vulnerability_occupancy_level"] = o.VulnerabilityOccupancyLevel
	}
	if !IsNil(o.VulnerableEndTime) {
		toSerialize["vulnerable_end_time"] = o.VulnerableEndTime
	}
	if !IsNil(o.VulnerableStartTime) {
		toSerialize["vulnerable_start_time"] = o.VulnerableStartTime
	}
	return toSerialize, nil
}

func (o *SovereigntyStructuresGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"alliance_id",
		"solar_system_id",
		"structure_id",
		"structure_type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varSovereigntyStructuresGetInner := _SovereigntyStructuresGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varSovereigntyStructuresGetInner)

	if err != nil {
		return err
	}

	*o = SovereigntyStructuresGetInner(varSovereigntyStructuresGetInner)

	return err
}

type NullableSovereigntyStructuresGetInner struct {
	value *SovereigntyStructuresGetInner
	isSet bool
}

func (v NullableSovereigntyStructuresGetInner) Get() *SovereigntyStructuresGetInner {
	return v.value
}

func (v *NullableSovereigntyStructuresGetInner) Set(val *SovereigntyStructuresGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableSovereigntyStructuresGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableSovereigntyStructuresGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableSovereigntyStructuresGetInner(val *SovereigntyStructuresGetInner) *NullableSovereigntyStructuresGetInner {
	return &NullableSovereigntyStructuresGetInner{value: val, isSet: true}
}

func (v NullableSovereigntyStructuresGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableSovereigntyStructuresGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


