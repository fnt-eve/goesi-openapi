/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the CorporationsProjectsDetailContribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailContribution{}

// CorporationsProjectsDetailContribution struct for CorporationsProjectsDetailContribution
type CorporationsProjectsDetailContribution struct {
	// Limit on the contribution of the individual participant
	ParticipationLimit *int64 `json:"participation_limit,omitempty"`
	// ISK reward per contribution
	RewardPerContribution *float64 `json:"reward_per_contribution,omitempty"`
	// Limit on amount of contribution per submission
	SubmissionLimit *int64 `json:"submission_limit,omitempty"`
	// Multiplier towards progress per contribution
	SubmissionMultiplier *float64 `json:"submission_multiplier,omitempty"`
}

// NewCorporationsProjectsDetailContribution instantiates a new CorporationsProjectsDetailContribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailContribution() *CorporationsProjectsDetailContribution {
	this := CorporationsProjectsDetailContribution{}
	return &this
}

// NewCorporationsProjectsDetailContributionWithDefaults instantiates a new CorporationsProjectsDetailContribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailContributionWithDefaults() *CorporationsProjectsDetailContribution {
	this := CorporationsProjectsDetailContribution{}
	return &this
}

// GetParticipationLimit returns the ParticipationLimit field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailContribution) GetParticipationLimit() int64 {
	if o == nil || IsNil(o.ParticipationLimit) {
		var ret int64
		return ret
	}
	return *o.ParticipationLimit
}

// GetParticipationLimitOk returns a tuple with the ParticipationLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailContribution) GetParticipationLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.ParticipationLimit) {
		return nil, false
	}
	return o.ParticipationLimit, true
}

// HasParticipationLimit returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailContribution) HasParticipationLimit() bool {
	if o != nil && !IsNil(o.ParticipationLimit) {
		return true
	}

	return false
}

// SetParticipationLimit gets a reference to the given int64 and assigns it to the ParticipationLimit field.
func (o *CorporationsProjectsDetailContribution) SetParticipationLimit(v int64) {
	o.ParticipationLimit = &v
}

// GetRewardPerContribution returns the RewardPerContribution field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailContribution) GetRewardPerContribution() float64 {
	if o == nil || IsNil(o.RewardPerContribution) {
		var ret float64
		return ret
	}
	return *o.RewardPerContribution
}

// GetRewardPerContributionOk returns a tuple with the RewardPerContribution field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailContribution) GetRewardPerContributionOk() (*float64, bool) {
	if o == nil || IsNil(o.RewardPerContribution) {
		return nil, false
	}
	return o.RewardPerContribution, true
}

// HasRewardPerContribution returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailContribution) HasRewardPerContribution() bool {
	if o != nil && !IsNil(o.RewardPerContribution) {
		return true
	}

	return false
}

// SetRewardPerContribution gets a reference to the given float64 and assigns it to the RewardPerContribution field.
func (o *CorporationsProjectsDetailContribution) SetRewardPerContribution(v float64) {
	o.RewardPerContribution = &v
}

// GetSubmissionLimit returns the SubmissionLimit field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailContribution) GetSubmissionLimit() int64 {
	if o == nil || IsNil(o.SubmissionLimit) {
		var ret int64
		return ret
	}
	return *o.SubmissionLimit
}

// GetSubmissionLimitOk returns a tuple with the SubmissionLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailContribution) GetSubmissionLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.SubmissionLimit) {
		return nil, false
	}
	return o.SubmissionLimit, true
}

// HasSubmissionLimit returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailContribution) HasSubmissionLimit() bool {
	if o != nil && !IsNil(o.SubmissionLimit) {
		return true
	}

	return false
}

// SetSubmissionLimit gets a reference to the given int64 and assigns it to the SubmissionLimit field.
func (o *CorporationsProjectsDetailContribution) SetSubmissionLimit(v int64) {
	o.SubmissionLimit = &v
}

// GetSubmissionMultiplier returns the SubmissionMultiplier field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailContribution) GetSubmissionMultiplier() float64 {
	if o == nil || IsNil(o.SubmissionMultiplier) {
		var ret float64
		return ret
	}
	return *o.SubmissionMultiplier
}

// GetSubmissionMultiplierOk returns a tuple with the SubmissionMultiplier field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailContribution) GetSubmissionMultiplierOk() (*float64, bool) {
	if o == nil || IsNil(o.SubmissionMultiplier) {
		return nil, false
	}
	return o.SubmissionMultiplier, true
}

// HasSubmissionMultiplier returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailContribution) HasSubmissionMultiplier() bool {
	if o != nil && !IsNil(o.SubmissionMultiplier) {
		return true
	}

	return false
}

// SetSubmissionMultiplier gets a reference to the given float64 and assigns it to the SubmissionMultiplier field.
func (o *CorporationsProjectsDetailContribution) SetSubmissionMultiplier(v float64) {
	o.SubmissionMultiplier = &v
}

func (o CorporationsProjectsDetailContribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailContribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ParticipationLimit) {
		toSerialize["participation_limit"] = o.ParticipationLimit
	}
	if !IsNil(o.RewardPerContribution) {
		toSerialize["reward_per_contribution"] = o.RewardPerContribution
	}
	if !IsNil(o.SubmissionLimit) {
		toSerialize["submission_limit"] = o.SubmissionLimit
	}
	if !IsNil(o.SubmissionMultiplier) {
		toSerialize["submission_multiplier"] = o.SubmissionMultiplier
	}
	return toSerialize, nil
}

type NullableCorporationsProjectsDetailContribution struct {
	value *CorporationsProjectsDetailContribution
	isSet bool
}

func (v NullableCorporationsProjectsDetailContribution) Get() *CorporationsProjectsDetailContribution {
	return v.value
}

func (v *NullableCorporationsProjectsDetailContribution) Set(val *CorporationsProjectsDetailContribution) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailContribution) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailContribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailContribution(val *CorporationsProjectsDetailContribution) *NullableCorporationsProjectsDetailContribution {
	return &NullableCorporationsProjectsDetailContribution{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailContribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailContribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


