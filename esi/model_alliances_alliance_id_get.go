/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the AlliancesAllianceIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AlliancesAllianceIdGet{}

// AlliancesAllianceIdGet struct for AlliancesAllianceIdGet
type AlliancesAllianceIdGet struct {
	// ID of the corporation that created the alliance
	CreatorCorporationId int64 `json:"creator_corporation_id"`
	// ID of the character that created the alliance
	CreatorId int64 `json:"creator_id"`
	DateFounded time.Time `json:"date_founded"`
	// the executor corporation ID, if this alliance is not closed
	ExecutorCorporationId *int64 `json:"executor_corporation_id,omitempty"`
	// Faction ID this alliance is fighting for, if this alliance is enlisted in factional warfare
	FactionId *int64 `json:"faction_id,omitempty"`
	// the full name of the alliance
	Name string `json:"name"`
	// the short name of the alliance
	Ticker string `json:"ticker"`
}

type _AlliancesAllianceIdGet AlliancesAllianceIdGet

// NewAlliancesAllianceIdGet instantiates a new AlliancesAllianceIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAlliancesAllianceIdGet(creatorCorporationId int64, creatorId int64, dateFounded time.Time, name string, ticker string) *AlliancesAllianceIdGet {
	this := AlliancesAllianceIdGet{}
	this.CreatorCorporationId = creatorCorporationId
	this.CreatorId = creatorId
	this.DateFounded = dateFounded
	this.Name = name
	this.Ticker = ticker
	return &this
}

// NewAlliancesAllianceIdGetWithDefaults instantiates a new AlliancesAllianceIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAlliancesAllianceIdGetWithDefaults() *AlliancesAllianceIdGet {
	this := AlliancesAllianceIdGet{}
	return &this
}

// GetCreatorCorporationId returns the CreatorCorporationId field value
func (o *AlliancesAllianceIdGet) GetCreatorCorporationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatorCorporationId
}

// GetCreatorCorporationIdOk returns a tuple with the CreatorCorporationId field value
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetCreatorCorporationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorCorporationId, true
}

// SetCreatorCorporationId sets field value
func (o *AlliancesAllianceIdGet) SetCreatorCorporationId(v int64) {
	o.CreatorCorporationId = v
}

// GetCreatorId returns the CreatorId field value
func (o *AlliancesAllianceIdGet) GetCreatorId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetCreatorIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *AlliancesAllianceIdGet) SetCreatorId(v int64) {
	o.CreatorId = v
}

// GetDateFounded returns the DateFounded field value
func (o *AlliancesAllianceIdGet) GetDateFounded() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateFounded
}

// GetDateFoundedOk returns a tuple with the DateFounded field value
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetDateFoundedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateFounded, true
}

// SetDateFounded sets field value
func (o *AlliancesAllianceIdGet) SetDateFounded(v time.Time) {
	o.DateFounded = v
}

// GetExecutorCorporationId returns the ExecutorCorporationId field value if set, zero value otherwise.
func (o *AlliancesAllianceIdGet) GetExecutorCorporationId() int64 {
	if o == nil || IsNil(o.ExecutorCorporationId) {
		var ret int64
		return ret
	}
	return *o.ExecutorCorporationId
}

// GetExecutorCorporationIdOk returns a tuple with the ExecutorCorporationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetExecutorCorporationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ExecutorCorporationId) {
		return nil, false
	}
	return o.ExecutorCorporationId, true
}

// HasExecutorCorporationId returns a boolean if a field has been set.
func (o *AlliancesAllianceIdGet) HasExecutorCorporationId() bool {
	if o != nil && !IsNil(o.ExecutorCorporationId) {
		return true
	}

	return false
}

// SetExecutorCorporationId gets a reference to the given int64 and assigns it to the ExecutorCorporationId field.
func (o *AlliancesAllianceIdGet) SetExecutorCorporationId(v int64) {
	o.ExecutorCorporationId = &v
}

// GetFactionId returns the FactionId field value if set, zero value otherwise.
func (o *AlliancesAllianceIdGet) GetFactionId() int64 {
	if o == nil || IsNil(o.FactionId) {
		var ret int64
		return ret
	}
	return *o.FactionId
}

// GetFactionIdOk returns a tuple with the FactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetFactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FactionId) {
		return nil, false
	}
	return o.FactionId, true
}

// HasFactionId returns a boolean if a field has been set.
func (o *AlliancesAllianceIdGet) HasFactionId() bool {
	if o != nil && !IsNil(o.FactionId) {
		return true
	}

	return false
}

// SetFactionId gets a reference to the given int64 and assigns it to the FactionId field.
func (o *AlliancesAllianceIdGet) SetFactionId(v int64) {
	o.FactionId = &v
}

// GetName returns the Name field value
func (o *AlliancesAllianceIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *AlliancesAllianceIdGet) SetName(v string) {
	o.Name = v
}

// GetTicker returns the Ticker field value
func (o *AlliancesAllianceIdGet) GetTicker() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value
// and a boolean to check if the value has been set.
func (o *AlliancesAllianceIdGet) GetTickerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ticker, true
}

// SetTicker sets field value
func (o *AlliancesAllianceIdGet) SetTicker(v string) {
	o.Ticker = v
}

func (o AlliancesAllianceIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AlliancesAllianceIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["creator_corporation_id"] = o.CreatorCorporationId
	toSerialize["creator_id"] = o.CreatorId
	toSerialize["date_founded"] = o.DateFounded
	if !IsNil(o.ExecutorCorporationId) {
		toSerialize["executor_corporation_id"] = o.ExecutorCorporationId
	}
	if !IsNil(o.FactionId) {
		toSerialize["faction_id"] = o.FactionId
	}
	toSerialize["name"] = o.Name
	toSerialize["ticker"] = o.Ticker
	return toSerialize, nil
}

func (o *AlliancesAllianceIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"creator_corporation_id",
		"creator_id",
		"date_founded",
		"name",
		"ticker",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varAlliancesAllianceIdGet := _AlliancesAllianceIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varAlliancesAllianceIdGet)

	if err != nil {
		return err
	}

	*o = AlliancesAllianceIdGet(varAlliancesAllianceIdGet)

	return err
}

type NullableAlliancesAllianceIdGet struct {
	value *AlliancesAllianceIdGet
	isSet bool
}

func (v NullableAlliancesAllianceIdGet) Get() *AlliancesAllianceIdGet {
	return v.value
}

func (v *NullableAlliancesAllianceIdGet) Set(val *AlliancesAllianceIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableAlliancesAllianceIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableAlliancesAllianceIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAlliancesAllianceIdGet(val *AlliancesAllianceIdGet) *NullableAlliancesAllianceIdGet {
	return &NullableAlliancesAllianceIdGet{value: val, isSet: true}
}

func (v NullableAlliancesAllianceIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAlliancesAllianceIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


