/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseRegionsRegionIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseRegionsRegionIdGet{}

// UniverseRegionsRegionIdGet struct for UniverseRegionsRegionIdGet
type UniverseRegionsRegionIdGet struct {
	Constellations []int64 `json:"constellations"`
	Description *string `json:"description,omitempty"`
	Name string `json:"name"`
	RegionId int64 `json:"region_id"`
}

type _UniverseRegionsRegionIdGet UniverseRegionsRegionIdGet

// NewUniverseRegionsRegionIdGet instantiates a new UniverseRegionsRegionIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseRegionsRegionIdGet(constellations []int64, name string, regionId int64) *UniverseRegionsRegionIdGet {
	this := UniverseRegionsRegionIdGet{}
	this.Constellations = constellations
	this.Name = name
	this.RegionId = regionId
	return &this
}

// NewUniverseRegionsRegionIdGetWithDefaults instantiates a new UniverseRegionsRegionIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseRegionsRegionIdGetWithDefaults() *UniverseRegionsRegionIdGet {
	this := UniverseRegionsRegionIdGet{}
	return &this
}

// GetConstellations returns the Constellations field value
func (o *UniverseRegionsRegionIdGet) GetConstellations() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.Constellations
}

// GetConstellationsOk returns a tuple with the Constellations field value
// and a boolean to check if the value has been set.
func (o *UniverseRegionsRegionIdGet) GetConstellationsOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Constellations, true
}

// SetConstellations sets field value
func (o *UniverseRegionsRegionIdGet) SetConstellations(v []int64) {
	o.Constellations = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *UniverseRegionsRegionIdGet) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseRegionsRegionIdGet) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *UniverseRegionsRegionIdGet) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *UniverseRegionsRegionIdGet) SetDescription(v string) {
	o.Description = &v
}

// GetName returns the Name field value
func (o *UniverseRegionsRegionIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniverseRegionsRegionIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniverseRegionsRegionIdGet) SetName(v string) {
	o.Name = v
}

// GetRegionId returns the RegionId field value
func (o *UniverseRegionsRegionIdGet) GetRegionId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value
// and a boolean to check if the value has been set.
func (o *UniverseRegionsRegionIdGet) GetRegionIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RegionId, true
}

// SetRegionId sets field value
func (o *UniverseRegionsRegionIdGet) SetRegionId(v int64) {
	o.RegionId = v
}

func (o UniverseRegionsRegionIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseRegionsRegionIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["constellations"] = o.Constellations
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	toSerialize["name"] = o.Name
	toSerialize["region_id"] = o.RegionId
	return toSerialize, nil
}

func (o *UniverseRegionsRegionIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"constellations",
		"name",
		"region_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseRegionsRegionIdGet := _UniverseRegionsRegionIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseRegionsRegionIdGet)

	if err != nil {
		return err
	}

	*o = UniverseRegionsRegionIdGet(varUniverseRegionsRegionIdGet)

	return err
}

type NullableUniverseRegionsRegionIdGet struct {
	value *UniverseRegionsRegionIdGet
	isSet bool
}

func (v NullableUniverseRegionsRegionIdGet) Get() *UniverseRegionsRegionIdGet {
	return v.value
}

func (v *NullableUniverseRegionsRegionIdGet) Set(val *UniverseRegionsRegionIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseRegionsRegionIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseRegionsRegionIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseRegionsRegionIdGet(val *UniverseRegionsRegionIdGet) *NullableUniverseRegionsRegionIdGet {
	return &NullableUniverseRegionsRegionIdGet{value: val, isSet: true}
}

func (v NullableUniverseRegionsRegionIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseRegionsRegionIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


