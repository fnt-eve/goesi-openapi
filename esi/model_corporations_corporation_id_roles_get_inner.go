/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdRolesGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdRolesGetInner{}

// CorporationsCorporationIdRolesGetInner struct for CorporationsCorporationIdRolesGetInner
type CorporationsCorporationIdRolesGetInner struct {
	CharacterId int64 `json:"character_id"`
	GrantableRoles []string `json:"grantable_roles,omitempty"`
	GrantableRolesAtBase []string `json:"grantable_roles_at_base,omitempty"`
	GrantableRolesAtHq []string `json:"grantable_roles_at_hq,omitempty"`
	GrantableRolesAtOther []string `json:"grantable_roles_at_other,omitempty"`
	Roles []string `json:"roles,omitempty"`
	RolesAtBase []string `json:"roles_at_base,omitempty"`
	RolesAtHq []string `json:"roles_at_hq,omitempty"`
	RolesAtOther []string `json:"roles_at_other,omitempty"`
}

type _CorporationsCorporationIdRolesGetInner CorporationsCorporationIdRolesGetInner

// NewCorporationsCorporationIdRolesGetInner instantiates a new CorporationsCorporationIdRolesGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdRolesGetInner(characterId int64) *CorporationsCorporationIdRolesGetInner {
	this := CorporationsCorporationIdRolesGetInner{}
	this.CharacterId = characterId
	return &this
}

// NewCorporationsCorporationIdRolesGetInnerWithDefaults instantiates a new CorporationsCorporationIdRolesGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdRolesGetInnerWithDefaults() *CorporationsCorporationIdRolesGetInner {
	this := CorporationsCorporationIdRolesGetInner{}
	return &this
}

// GetCharacterId returns the CharacterId field value
func (o *CorporationsCorporationIdRolesGetInner) GetCharacterId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CharacterId
}

// GetCharacterIdOk returns a tuple with the CharacterId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetCharacterIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CharacterId, true
}

// SetCharacterId sets field value
func (o *CorporationsCorporationIdRolesGetInner) SetCharacterId(v int64) {
	o.CharacterId = v
}

// GetGrantableRoles returns the GrantableRoles field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRoles() []string {
	if o == nil || IsNil(o.GrantableRoles) {
		var ret []string
		return ret
	}
	return o.GrantableRoles
}

// GetGrantableRolesOk returns a tuple with the GrantableRoles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRoles) {
		return nil, false
	}
	return o.GrantableRoles, true
}

// HasGrantableRoles returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasGrantableRoles() bool {
	if o != nil && !IsNil(o.GrantableRoles) {
		return true
	}

	return false
}

// SetGrantableRoles gets a reference to the given []string and assigns it to the GrantableRoles field.
func (o *CorporationsCorporationIdRolesGetInner) SetGrantableRoles(v []string) {
	o.GrantableRoles = v
}

// GetGrantableRolesAtBase returns the GrantableRolesAtBase field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesAtBase() []string {
	if o == nil || IsNil(o.GrantableRolesAtBase) {
		var ret []string
		return ret
	}
	return o.GrantableRolesAtBase
}

// GetGrantableRolesAtBaseOk returns a tuple with the GrantableRolesAtBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesAtBaseOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRolesAtBase) {
		return nil, false
	}
	return o.GrantableRolesAtBase, true
}

// HasGrantableRolesAtBase returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasGrantableRolesAtBase() bool {
	if o != nil && !IsNil(o.GrantableRolesAtBase) {
		return true
	}

	return false
}

// SetGrantableRolesAtBase gets a reference to the given []string and assigns it to the GrantableRolesAtBase field.
func (o *CorporationsCorporationIdRolesGetInner) SetGrantableRolesAtBase(v []string) {
	o.GrantableRolesAtBase = v
}

// GetGrantableRolesAtHq returns the GrantableRolesAtHq field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesAtHq() []string {
	if o == nil || IsNil(o.GrantableRolesAtHq) {
		var ret []string
		return ret
	}
	return o.GrantableRolesAtHq
}

// GetGrantableRolesAtHqOk returns a tuple with the GrantableRolesAtHq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesAtHqOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRolesAtHq) {
		return nil, false
	}
	return o.GrantableRolesAtHq, true
}

// HasGrantableRolesAtHq returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasGrantableRolesAtHq() bool {
	if o != nil && !IsNil(o.GrantableRolesAtHq) {
		return true
	}

	return false
}

// SetGrantableRolesAtHq gets a reference to the given []string and assigns it to the GrantableRolesAtHq field.
func (o *CorporationsCorporationIdRolesGetInner) SetGrantableRolesAtHq(v []string) {
	o.GrantableRolesAtHq = v
}

// GetGrantableRolesAtOther returns the GrantableRolesAtOther field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesAtOther() []string {
	if o == nil || IsNil(o.GrantableRolesAtOther) {
		var ret []string
		return ret
	}
	return o.GrantableRolesAtOther
}

// GetGrantableRolesAtOtherOk returns a tuple with the GrantableRolesAtOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetGrantableRolesAtOtherOk() ([]string, bool) {
	if o == nil || IsNil(o.GrantableRolesAtOther) {
		return nil, false
	}
	return o.GrantableRolesAtOther, true
}

// HasGrantableRolesAtOther returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasGrantableRolesAtOther() bool {
	if o != nil && !IsNil(o.GrantableRolesAtOther) {
		return true
	}

	return false
}

// SetGrantableRolesAtOther gets a reference to the given []string and assigns it to the GrantableRolesAtOther field.
func (o *CorporationsCorporationIdRolesGetInner) SetGrantableRolesAtOther(v []string) {
	o.GrantableRolesAtOther = v
}

// GetRoles returns the Roles field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetRoles() []string {
	if o == nil || IsNil(o.Roles) {
		var ret []string
		return ret
	}
	return o.Roles
}

// GetRolesOk returns a tuple with the Roles field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesOk() ([]string, bool) {
	if o == nil || IsNil(o.Roles) {
		return nil, false
	}
	return o.Roles, true
}

// HasRoles returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasRoles() bool {
	if o != nil && !IsNil(o.Roles) {
		return true
	}

	return false
}

// SetRoles gets a reference to the given []string and assigns it to the Roles field.
func (o *CorporationsCorporationIdRolesGetInner) SetRoles(v []string) {
	o.Roles = v
}

// GetRolesAtBase returns the RolesAtBase field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesAtBase() []string {
	if o == nil || IsNil(o.RolesAtBase) {
		var ret []string
		return ret
	}
	return o.RolesAtBase
}

// GetRolesAtBaseOk returns a tuple with the RolesAtBase field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesAtBaseOk() ([]string, bool) {
	if o == nil || IsNil(o.RolesAtBase) {
		return nil, false
	}
	return o.RolesAtBase, true
}

// HasRolesAtBase returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasRolesAtBase() bool {
	if o != nil && !IsNil(o.RolesAtBase) {
		return true
	}

	return false
}

// SetRolesAtBase gets a reference to the given []string and assigns it to the RolesAtBase field.
func (o *CorporationsCorporationIdRolesGetInner) SetRolesAtBase(v []string) {
	o.RolesAtBase = v
}

// GetRolesAtHq returns the RolesAtHq field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesAtHq() []string {
	if o == nil || IsNil(o.RolesAtHq) {
		var ret []string
		return ret
	}
	return o.RolesAtHq
}

// GetRolesAtHqOk returns a tuple with the RolesAtHq field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesAtHqOk() ([]string, bool) {
	if o == nil || IsNil(o.RolesAtHq) {
		return nil, false
	}
	return o.RolesAtHq, true
}

// HasRolesAtHq returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasRolesAtHq() bool {
	if o != nil && !IsNil(o.RolesAtHq) {
		return true
	}

	return false
}

// SetRolesAtHq gets a reference to the given []string and assigns it to the RolesAtHq field.
func (o *CorporationsCorporationIdRolesGetInner) SetRolesAtHq(v []string) {
	o.RolesAtHq = v
}

// GetRolesAtOther returns the RolesAtOther field value if set, zero value otherwise.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesAtOther() []string {
	if o == nil || IsNil(o.RolesAtOther) {
		var ret []string
		return ret
	}
	return o.RolesAtOther
}

// GetRolesAtOtherOk returns a tuple with the RolesAtOther field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdRolesGetInner) GetRolesAtOtherOk() ([]string, bool) {
	if o == nil || IsNil(o.RolesAtOther) {
		return nil, false
	}
	return o.RolesAtOther, true
}

// HasRolesAtOther returns a boolean if a field has been set.
func (o *CorporationsCorporationIdRolesGetInner) HasRolesAtOther() bool {
	if o != nil && !IsNil(o.RolesAtOther) {
		return true
	}

	return false
}

// SetRolesAtOther gets a reference to the given []string and assigns it to the RolesAtOther field.
func (o *CorporationsCorporationIdRolesGetInner) SetRolesAtOther(v []string) {
	o.RolesAtOther = v
}

func (o CorporationsCorporationIdRolesGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdRolesGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["character_id"] = o.CharacterId
	if !IsNil(o.GrantableRoles) {
		toSerialize["grantable_roles"] = o.GrantableRoles
	}
	if !IsNil(o.GrantableRolesAtBase) {
		toSerialize["grantable_roles_at_base"] = o.GrantableRolesAtBase
	}
	if !IsNil(o.GrantableRolesAtHq) {
		toSerialize["grantable_roles_at_hq"] = o.GrantableRolesAtHq
	}
	if !IsNil(o.GrantableRolesAtOther) {
		toSerialize["grantable_roles_at_other"] = o.GrantableRolesAtOther
	}
	if !IsNil(o.Roles) {
		toSerialize["roles"] = o.Roles
	}
	if !IsNil(o.RolesAtBase) {
		toSerialize["roles_at_base"] = o.RolesAtBase
	}
	if !IsNil(o.RolesAtHq) {
		toSerialize["roles_at_hq"] = o.RolesAtHq
	}
	if !IsNil(o.RolesAtOther) {
		toSerialize["roles_at_other"] = o.RolesAtOther
	}
	return toSerialize, nil
}

func (o *CorporationsCorporationIdRolesGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"character_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdRolesGetInner := _CorporationsCorporationIdRolesGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdRolesGetInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdRolesGetInner(varCorporationsCorporationIdRolesGetInner)

	return err
}

type NullableCorporationsCorporationIdRolesGetInner struct {
	value *CorporationsCorporationIdRolesGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdRolesGetInner) Get() *CorporationsCorporationIdRolesGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdRolesGetInner) Set(val *CorporationsCorporationIdRolesGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdRolesGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdRolesGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdRolesGetInner(val *CorporationsCorporationIdRolesGetInner) *NullableCorporationsCorporationIdRolesGetInner {
	return &NullableCorporationsCorporationIdRolesGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdRolesGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdRolesGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


