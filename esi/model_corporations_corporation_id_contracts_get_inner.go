/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdContractsGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdContractsGetInner{}

// CorporationsCorporationIdContractsGetInner struct for CorporationsCorporationIdContractsGetInner
type CorporationsCorporationIdContractsGetInner struct {
	// Who will accept the contract
	AcceptorId int64 `json:"acceptor_id"`
	// ID to whom the contract is assigned, can be corporation or character ID
	AssigneeId int64 `json:"assignee_id"`
	// To whom the contract is available
	Availability string `json:"availability"`
	// Buyout price (for Auctions only)
	Buyout *float64 `json:"buyout,omitempty"`
	// Collateral price (for Couriers only)
	Collateral *float64 `json:"collateral,omitempty"`
	ContractId int64 `json:"contract_id"`
	// Date of confirmation of contract
	DateAccepted *time.Time `json:"date_accepted,omitempty"`
	// Date of completed of contract
	DateCompleted *time.Time `json:"date_completed,omitempty"`
	// Expiration date of the contract
	DateExpired time.Time `json:"date_expired"`
	// Ð¡reation date of the contract
	DateIssued time.Time `json:"date_issued"`
	// Number of days to perform the contract
	DaysToComplete *int64 `json:"days_to_complete,omitempty"`
	// End location ID (for Couriers contract)
	EndLocationId *int64 `json:"end_location_id,omitempty"`
	// true if the contract was issued on behalf of the issuer's corporation
	ForCorporation bool `json:"for_corporation"`
	// Character's corporation ID for the issuer
	IssuerCorporationId int64 `json:"issuer_corporation_id"`
	// Character ID for the issuer
	IssuerId int64 `json:"issuer_id"`
	// Price of contract (for ItemsExchange and Auctions)
	Price *float64 `json:"price,omitempty"`
	// Remuneration for contract (for Couriers only)
	Reward *float64 `json:"reward,omitempty"`
	// Start location ID (for Couriers contract)
	StartLocationId *int64 `json:"start_location_id,omitempty"`
	// Status of the the contract
	Status string `json:"status"`
	// Title of the contract
	Title *string `json:"title,omitempty"`
	// Type of the contract
	Type string `json:"type"`
	// Volume of items in the contract
	Volume *float64 `json:"volume,omitempty"`
}

type _CorporationsCorporationIdContractsGetInner CorporationsCorporationIdContractsGetInner

// NewCorporationsCorporationIdContractsGetInner instantiates a new CorporationsCorporationIdContractsGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdContractsGetInner(acceptorId int64, assigneeId int64, availability string, contractId int64, dateExpired time.Time, dateIssued time.Time, forCorporation bool, issuerCorporationId int64, issuerId int64, status string, type_ string) *CorporationsCorporationIdContractsGetInner {
	this := CorporationsCorporationIdContractsGetInner{}
	this.AcceptorId = acceptorId
	this.AssigneeId = assigneeId
	this.Availability = availability
	this.ContractId = contractId
	this.DateExpired = dateExpired
	this.DateIssued = dateIssued
	this.ForCorporation = forCorporation
	this.IssuerCorporationId = issuerCorporationId
	this.IssuerId = issuerId
	this.Status = status
	this.Type = type_
	return &this
}

// NewCorporationsCorporationIdContractsGetInnerWithDefaults instantiates a new CorporationsCorporationIdContractsGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdContractsGetInnerWithDefaults() *CorporationsCorporationIdContractsGetInner {
	this := CorporationsCorporationIdContractsGetInner{}
	return &this
}

// GetAcceptorId returns the AcceptorId field value
func (o *CorporationsCorporationIdContractsGetInner) GetAcceptorId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AcceptorId
}

// GetAcceptorIdOk returns a tuple with the AcceptorId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetAcceptorIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AcceptorId, true
}

// SetAcceptorId sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetAcceptorId(v int64) {
	o.AcceptorId = v
}

// GetAssigneeId returns the AssigneeId field value
func (o *CorporationsCorporationIdContractsGetInner) GetAssigneeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.AssigneeId
}

// GetAssigneeIdOk returns a tuple with the AssigneeId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetAssigneeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AssigneeId, true
}

// SetAssigneeId sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetAssigneeId(v int64) {
	o.AssigneeId = v
}

// GetAvailability returns the Availability field value
func (o *CorporationsCorporationIdContractsGetInner) GetAvailability() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Availability
}

// GetAvailabilityOk returns a tuple with the Availability field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetAvailabilityOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Availability, true
}

// SetAvailability sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetAvailability(v string) {
	o.Availability = v
}

// GetBuyout returns the Buyout field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetBuyout() float64 {
	if o == nil || IsNil(o.Buyout) {
		var ret float64
		return ret
	}
	return *o.Buyout
}

// GetBuyoutOk returns a tuple with the Buyout field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetBuyoutOk() (*float64, bool) {
	if o == nil || IsNil(o.Buyout) {
		return nil, false
	}
	return o.Buyout, true
}

// HasBuyout returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasBuyout() bool {
	if o != nil && !IsNil(o.Buyout) {
		return true
	}

	return false
}

// SetBuyout gets a reference to the given float64 and assigns it to the Buyout field.
func (o *CorporationsCorporationIdContractsGetInner) SetBuyout(v float64) {
	o.Buyout = &v
}

// GetCollateral returns the Collateral field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetCollateral() float64 {
	if o == nil || IsNil(o.Collateral) {
		var ret float64
		return ret
	}
	return *o.Collateral
}

// GetCollateralOk returns a tuple with the Collateral field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetCollateralOk() (*float64, bool) {
	if o == nil || IsNil(o.Collateral) {
		return nil, false
	}
	return o.Collateral, true
}

// HasCollateral returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasCollateral() bool {
	if o != nil && !IsNil(o.Collateral) {
		return true
	}

	return false
}

// SetCollateral gets a reference to the given float64 and assigns it to the Collateral field.
func (o *CorporationsCorporationIdContractsGetInner) SetCollateral(v float64) {
	o.Collateral = &v
}

// GetContractId returns the ContractId field value
func (o *CorporationsCorporationIdContractsGetInner) GetContractId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ContractId
}

// GetContractIdOk returns a tuple with the ContractId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetContractIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContractId, true
}

// SetContractId sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetContractId(v int64) {
	o.ContractId = v
}

// GetDateAccepted returns the DateAccepted field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetDateAccepted() time.Time {
	if o == nil || IsNil(o.DateAccepted) {
		var ret time.Time
		return ret
	}
	return *o.DateAccepted
}

// GetDateAcceptedOk returns a tuple with the DateAccepted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetDateAcceptedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateAccepted) {
		return nil, false
	}
	return o.DateAccepted, true
}

// HasDateAccepted returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasDateAccepted() bool {
	if o != nil && !IsNil(o.DateAccepted) {
		return true
	}

	return false
}

// SetDateAccepted gets a reference to the given time.Time and assigns it to the DateAccepted field.
func (o *CorporationsCorporationIdContractsGetInner) SetDateAccepted(v time.Time) {
	o.DateAccepted = &v
}

// GetDateCompleted returns the DateCompleted field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetDateCompleted() time.Time {
	if o == nil || IsNil(o.DateCompleted) {
		var ret time.Time
		return ret
	}
	return *o.DateCompleted
}

// GetDateCompletedOk returns a tuple with the DateCompleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetDateCompletedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateCompleted) {
		return nil, false
	}
	return o.DateCompleted, true
}

// HasDateCompleted returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasDateCompleted() bool {
	if o != nil && !IsNil(o.DateCompleted) {
		return true
	}

	return false
}

// SetDateCompleted gets a reference to the given time.Time and assigns it to the DateCompleted field.
func (o *CorporationsCorporationIdContractsGetInner) SetDateCompleted(v time.Time) {
	o.DateCompleted = &v
}

// GetDateExpired returns the DateExpired field value
func (o *CorporationsCorporationIdContractsGetInner) GetDateExpired() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateExpired
}

// GetDateExpiredOk returns a tuple with the DateExpired field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetDateExpiredOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateExpired, true
}

// SetDateExpired sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetDateExpired(v time.Time) {
	o.DateExpired = v
}

// GetDateIssued returns the DateIssued field value
func (o *CorporationsCorporationIdContractsGetInner) GetDateIssued() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.DateIssued
}

// GetDateIssuedOk returns a tuple with the DateIssued field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetDateIssuedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DateIssued, true
}

// SetDateIssued sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetDateIssued(v time.Time) {
	o.DateIssued = v
}

// GetDaysToComplete returns the DaysToComplete field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetDaysToComplete() int64 {
	if o == nil || IsNil(o.DaysToComplete) {
		var ret int64
		return ret
	}
	return *o.DaysToComplete
}

// GetDaysToCompleteOk returns a tuple with the DaysToComplete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetDaysToCompleteOk() (*int64, bool) {
	if o == nil || IsNil(o.DaysToComplete) {
		return nil, false
	}
	return o.DaysToComplete, true
}

// HasDaysToComplete returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasDaysToComplete() bool {
	if o != nil && !IsNil(o.DaysToComplete) {
		return true
	}

	return false
}

// SetDaysToComplete gets a reference to the given int64 and assigns it to the DaysToComplete field.
func (o *CorporationsCorporationIdContractsGetInner) SetDaysToComplete(v int64) {
	o.DaysToComplete = &v
}

// GetEndLocationId returns the EndLocationId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetEndLocationId() int64 {
	if o == nil || IsNil(o.EndLocationId) {
		var ret int64
		return ret
	}
	return *o.EndLocationId
}

// GetEndLocationIdOk returns a tuple with the EndLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetEndLocationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EndLocationId) {
		return nil, false
	}
	return o.EndLocationId, true
}

// HasEndLocationId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasEndLocationId() bool {
	if o != nil && !IsNil(o.EndLocationId) {
		return true
	}

	return false
}

// SetEndLocationId gets a reference to the given int64 and assigns it to the EndLocationId field.
func (o *CorporationsCorporationIdContractsGetInner) SetEndLocationId(v int64) {
	o.EndLocationId = &v
}

// GetForCorporation returns the ForCorporation field value
func (o *CorporationsCorporationIdContractsGetInner) GetForCorporation() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ForCorporation
}

// GetForCorporationOk returns a tuple with the ForCorporation field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetForCorporationOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ForCorporation, true
}

// SetForCorporation sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetForCorporation(v bool) {
	o.ForCorporation = v
}

// GetIssuerCorporationId returns the IssuerCorporationId field value
func (o *CorporationsCorporationIdContractsGetInner) GetIssuerCorporationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IssuerCorporationId
}

// GetIssuerCorporationIdOk returns a tuple with the IssuerCorporationId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetIssuerCorporationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuerCorporationId, true
}

// SetIssuerCorporationId sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetIssuerCorporationId(v int64) {
	o.IssuerCorporationId = v
}

// GetIssuerId returns the IssuerId field value
func (o *CorporationsCorporationIdContractsGetInner) GetIssuerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.IssuerId
}

// GetIssuerIdOk returns a tuple with the IssuerId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetIssuerIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IssuerId, true
}

// SetIssuerId sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetIssuerId(v int64) {
	o.IssuerId = v
}

// GetPrice returns the Price field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetPrice() float64 {
	if o == nil || IsNil(o.Price) {
		var ret float64
		return ret
	}
	return *o.Price
}

// GetPriceOk returns a tuple with the Price field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetPriceOk() (*float64, bool) {
	if o == nil || IsNil(o.Price) {
		return nil, false
	}
	return o.Price, true
}

// HasPrice returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasPrice() bool {
	if o != nil && !IsNil(o.Price) {
		return true
	}

	return false
}

// SetPrice gets a reference to the given float64 and assigns it to the Price field.
func (o *CorporationsCorporationIdContractsGetInner) SetPrice(v float64) {
	o.Price = &v
}

// GetReward returns the Reward field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetReward() float64 {
	if o == nil || IsNil(o.Reward) {
		var ret float64
		return ret
	}
	return *o.Reward
}

// GetRewardOk returns a tuple with the Reward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetRewardOk() (*float64, bool) {
	if o == nil || IsNil(o.Reward) {
		return nil, false
	}
	return o.Reward, true
}

// HasReward returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasReward() bool {
	if o != nil && !IsNil(o.Reward) {
		return true
	}

	return false
}

// SetReward gets a reference to the given float64 and assigns it to the Reward field.
func (o *CorporationsCorporationIdContractsGetInner) SetReward(v float64) {
	o.Reward = &v
}

// GetStartLocationId returns the StartLocationId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetStartLocationId() int64 {
	if o == nil || IsNil(o.StartLocationId) {
		var ret int64
		return ret
	}
	return *o.StartLocationId
}

// GetStartLocationIdOk returns a tuple with the StartLocationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetStartLocationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.StartLocationId) {
		return nil, false
	}
	return o.StartLocationId, true
}

// HasStartLocationId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasStartLocationId() bool {
	if o != nil && !IsNil(o.StartLocationId) {
		return true
	}

	return false
}

// SetStartLocationId gets a reference to the given int64 and assigns it to the StartLocationId field.
func (o *CorporationsCorporationIdContractsGetInner) SetStartLocationId(v int64) {
	o.StartLocationId = &v
}

// GetStatus returns the Status field value
func (o *CorporationsCorporationIdContractsGetInner) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetStatus(v string) {
	o.Status = v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CorporationsCorporationIdContractsGetInner) SetTitle(v string) {
	o.Title = &v
}

// GetType returns the Type field value
func (o *CorporationsCorporationIdContractsGetInner) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CorporationsCorporationIdContractsGetInner) SetType(v string) {
	o.Type = v
}

// GetVolume returns the Volume field value if set, zero value otherwise.
func (o *CorporationsCorporationIdContractsGetInner) GetVolume() float64 {
	if o == nil || IsNil(o.Volume) {
		var ret float64
		return ret
	}
	return *o.Volume
}

// GetVolumeOk returns a tuple with the Volume field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdContractsGetInner) GetVolumeOk() (*float64, bool) {
	if o == nil || IsNil(o.Volume) {
		return nil, false
	}
	return o.Volume, true
}

// HasVolume returns a boolean if a field has been set.
func (o *CorporationsCorporationIdContractsGetInner) HasVolume() bool {
	if o != nil && !IsNil(o.Volume) {
		return true
	}

	return false
}

// SetVolume gets a reference to the given float64 and assigns it to the Volume field.
func (o *CorporationsCorporationIdContractsGetInner) SetVolume(v float64) {
	o.Volume = &v
}

func (o CorporationsCorporationIdContractsGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdContractsGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["acceptor_id"] = o.AcceptorId
	toSerialize["assignee_id"] = o.AssigneeId
	toSerialize["availability"] = o.Availability
	if !IsNil(o.Buyout) {
		toSerialize["buyout"] = o.Buyout
	}
	if !IsNil(o.Collateral) {
		toSerialize["collateral"] = o.Collateral
	}
	toSerialize["contract_id"] = o.ContractId
	if !IsNil(o.DateAccepted) {
		toSerialize["date_accepted"] = o.DateAccepted
	}
	if !IsNil(o.DateCompleted) {
		toSerialize["date_completed"] = o.DateCompleted
	}
	toSerialize["date_expired"] = o.DateExpired
	toSerialize["date_issued"] = o.DateIssued
	if !IsNil(o.DaysToComplete) {
		toSerialize["days_to_complete"] = o.DaysToComplete
	}
	if !IsNil(o.EndLocationId) {
		toSerialize["end_location_id"] = o.EndLocationId
	}
	toSerialize["for_corporation"] = o.ForCorporation
	toSerialize["issuer_corporation_id"] = o.IssuerCorporationId
	toSerialize["issuer_id"] = o.IssuerId
	if !IsNil(o.Price) {
		toSerialize["price"] = o.Price
	}
	if !IsNil(o.Reward) {
		toSerialize["reward"] = o.Reward
	}
	if !IsNil(o.StartLocationId) {
		toSerialize["start_location_id"] = o.StartLocationId
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	toSerialize["type"] = o.Type
	if !IsNil(o.Volume) {
		toSerialize["volume"] = o.Volume
	}
	return toSerialize, nil
}

func (o *CorporationsCorporationIdContractsGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"acceptor_id",
		"assignee_id",
		"availability",
		"contract_id",
		"date_expired",
		"date_issued",
		"for_corporation",
		"issuer_corporation_id",
		"issuer_id",
		"status",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdContractsGetInner := _CorporationsCorporationIdContractsGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdContractsGetInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdContractsGetInner(varCorporationsCorporationIdContractsGetInner)

	return err
}

type NullableCorporationsCorporationIdContractsGetInner struct {
	value *CorporationsCorporationIdContractsGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdContractsGetInner) Get() *CorporationsCorporationIdContractsGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdContractsGetInner) Set(val *CorporationsCorporationIdContractsGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdContractsGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdContractsGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdContractsGetInner(val *CorporationsCorporationIdContractsGetInner) *NullableCorporationsCorporationIdContractsGetInner {
	return &NullableCorporationsCorporationIdContractsGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdContractsGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdContractsGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


