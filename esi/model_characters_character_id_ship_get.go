/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CharactersCharacterIdShipGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdShipGet{}

// CharactersCharacterIdShipGet struct for CharactersCharacterIdShipGet
type CharactersCharacterIdShipGet struct {
	// Item id's are unique to a ship and persist until it is repackaged. This value can be used to track repeated uses of a ship, or detect when a pilot changes into a different instance of the same ship type.
	ShipItemId int64 `json:"ship_item_id"`
	ShipName string `json:"ship_name"`
	ShipTypeId int64 `json:"ship_type_id"`
}

type _CharactersCharacterIdShipGet CharactersCharacterIdShipGet

// NewCharactersCharacterIdShipGet instantiates a new CharactersCharacterIdShipGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdShipGet(shipItemId int64, shipName string, shipTypeId int64) *CharactersCharacterIdShipGet {
	this := CharactersCharacterIdShipGet{}
	this.ShipItemId = shipItemId
	this.ShipName = shipName
	this.ShipTypeId = shipTypeId
	return &this
}

// NewCharactersCharacterIdShipGetWithDefaults instantiates a new CharactersCharacterIdShipGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdShipGetWithDefaults() *CharactersCharacterIdShipGet {
	this := CharactersCharacterIdShipGet{}
	return &this
}

// GetShipItemId returns the ShipItemId field value
func (o *CharactersCharacterIdShipGet) GetShipItemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShipItemId
}

// GetShipItemIdOk returns a tuple with the ShipItemId field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdShipGet) GetShipItemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipItemId, true
}

// SetShipItemId sets field value
func (o *CharactersCharacterIdShipGet) SetShipItemId(v int64) {
	o.ShipItemId = v
}

// GetShipName returns the ShipName field value
func (o *CharactersCharacterIdShipGet) GetShipName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ShipName
}

// GetShipNameOk returns a tuple with the ShipName field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdShipGet) GetShipNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipName, true
}

// SetShipName sets field value
func (o *CharactersCharacterIdShipGet) SetShipName(v string) {
	o.ShipName = v
}

// GetShipTypeId returns the ShipTypeId field value
func (o *CharactersCharacterIdShipGet) GetShipTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ShipTypeId
}

// GetShipTypeIdOk returns a tuple with the ShipTypeId field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdShipGet) GetShipTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ShipTypeId, true
}

// SetShipTypeId sets field value
func (o *CharactersCharacterIdShipGet) SetShipTypeId(v int64) {
	o.ShipTypeId = v
}

func (o CharactersCharacterIdShipGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdShipGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ship_item_id"] = o.ShipItemId
	toSerialize["ship_name"] = o.ShipName
	toSerialize["ship_type_id"] = o.ShipTypeId
	return toSerialize, nil
}

func (o *CharactersCharacterIdShipGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ship_item_id",
		"ship_name",
		"ship_type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCharactersCharacterIdShipGet := _CharactersCharacterIdShipGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCharactersCharacterIdShipGet)

	if err != nil {
		return err
	}

	*o = CharactersCharacterIdShipGet(varCharactersCharacterIdShipGet)

	return err
}

type NullableCharactersCharacterIdShipGet struct {
	value *CharactersCharacterIdShipGet
	isSet bool
}

func (v NullableCharactersCharacterIdShipGet) Get() *CharactersCharacterIdShipGet {
	return v.value
}

func (v *NullableCharactersCharacterIdShipGet) Set(val *CharactersCharacterIdShipGet) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdShipGet) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdShipGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdShipGet(val *CharactersCharacterIdShipGet) *NullableCharactersCharacterIdShipGet {
	return &NullableCharactersCharacterIdShipGet{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdShipGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdShipGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


