/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
)

// checks if the CharactersCharacterIdFatigueGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdFatigueGet{}

// CharactersCharacterIdFatigueGet struct for CharactersCharacterIdFatigueGet
type CharactersCharacterIdFatigueGet struct {
	// Character's jump fatigue expiry
	JumpFatigueExpireDate *time.Time `json:"jump_fatigue_expire_date,omitempty"`
	// Character's last jump activation
	LastJumpDate *time.Time `json:"last_jump_date,omitempty"`
	// Character's last jump update
	LastUpdateDate *time.Time `json:"last_update_date,omitempty"`
}

// NewCharactersCharacterIdFatigueGet instantiates a new CharactersCharacterIdFatigueGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdFatigueGet() *CharactersCharacterIdFatigueGet {
	this := CharactersCharacterIdFatigueGet{}
	return &this
}

// NewCharactersCharacterIdFatigueGetWithDefaults instantiates a new CharactersCharacterIdFatigueGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdFatigueGetWithDefaults() *CharactersCharacterIdFatigueGet {
	this := CharactersCharacterIdFatigueGet{}
	return &this
}

// GetJumpFatigueExpireDate returns the JumpFatigueExpireDate field value if set, zero value otherwise.
func (o *CharactersCharacterIdFatigueGet) GetJumpFatigueExpireDate() time.Time {
	if o == nil || IsNil(o.JumpFatigueExpireDate) {
		var ret time.Time
		return ret
	}
	return *o.JumpFatigueExpireDate
}

// GetJumpFatigueExpireDateOk returns a tuple with the JumpFatigueExpireDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdFatigueGet) GetJumpFatigueExpireDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.JumpFatigueExpireDate) {
		return nil, false
	}
	return o.JumpFatigueExpireDate, true
}

// HasJumpFatigueExpireDate returns a boolean if a field has been set.
func (o *CharactersCharacterIdFatigueGet) HasJumpFatigueExpireDate() bool {
	if o != nil && !IsNil(o.JumpFatigueExpireDate) {
		return true
	}

	return false
}

// SetJumpFatigueExpireDate gets a reference to the given time.Time and assigns it to the JumpFatigueExpireDate field.
func (o *CharactersCharacterIdFatigueGet) SetJumpFatigueExpireDate(v time.Time) {
	o.JumpFatigueExpireDate = &v
}

// GetLastJumpDate returns the LastJumpDate field value if set, zero value otherwise.
func (o *CharactersCharacterIdFatigueGet) GetLastJumpDate() time.Time {
	if o == nil || IsNil(o.LastJumpDate) {
		var ret time.Time
		return ret
	}
	return *o.LastJumpDate
}

// GetLastJumpDateOk returns a tuple with the LastJumpDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdFatigueGet) GetLastJumpDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastJumpDate) {
		return nil, false
	}
	return o.LastJumpDate, true
}

// HasLastJumpDate returns a boolean if a field has been set.
func (o *CharactersCharacterIdFatigueGet) HasLastJumpDate() bool {
	if o != nil && !IsNil(o.LastJumpDate) {
		return true
	}

	return false
}

// SetLastJumpDate gets a reference to the given time.Time and assigns it to the LastJumpDate field.
func (o *CharactersCharacterIdFatigueGet) SetLastJumpDate(v time.Time) {
	o.LastJumpDate = &v
}

// GetLastUpdateDate returns the LastUpdateDate field value if set, zero value otherwise.
func (o *CharactersCharacterIdFatigueGet) GetLastUpdateDate() time.Time {
	if o == nil || IsNil(o.LastUpdateDate) {
		var ret time.Time
		return ret
	}
	return *o.LastUpdateDate
}

// GetLastUpdateDateOk returns a tuple with the LastUpdateDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdFatigueGet) GetLastUpdateDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastUpdateDate) {
		return nil, false
	}
	return o.LastUpdateDate, true
}

// HasLastUpdateDate returns a boolean if a field has been set.
func (o *CharactersCharacterIdFatigueGet) HasLastUpdateDate() bool {
	if o != nil && !IsNil(o.LastUpdateDate) {
		return true
	}

	return false
}

// SetLastUpdateDate gets a reference to the given time.Time and assigns it to the LastUpdateDate field.
func (o *CharactersCharacterIdFatigueGet) SetLastUpdateDate(v time.Time) {
	o.LastUpdateDate = &v
}

func (o CharactersCharacterIdFatigueGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdFatigueGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.JumpFatigueExpireDate) {
		toSerialize["jump_fatigue_expire_date"] = o.JumpFatigueExpireDate
	}
	if !IsNil(o.LastJumpDate) {
		toSerialize["last_jump_date"] = o.LastJumpDate
	}
	if !IsNil(o.LastUpdateDate) {
		toSerialize["last_update_date"] = o.LastUpdateDate
	}
	return toSerialize, nil
}

type NullableCharactersCharacterIdFatigueGet struct {
	value *CharactersCharacterIdFatigueGet
	isSet bool
}

func (v NullableCharactersCharacterIdFatigueGet) Get() *CharactersCharacterIdFatigueGet {
	return v.value
}

func (v *NullableCharactersCharacterIdFatigueGet) Set(val *CharactersCharacterIdFatigueGet) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdFatigueGet) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdFatigueGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdFatigueGet(val *CharactersCharacterIdFatigueGet) *NullableCharactersCharacterIdFatigueGet {
	return &NullableCharactersCharacterIdFatigueGet{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdFatigueGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdFatigueGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


