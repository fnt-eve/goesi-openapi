/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsDetailDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailDetails{}

// CorporationsProjectsDetailDetails struct for CorporationsProjectsDetailDetails
type CorporationsProjectsDetailDetails struct {
	// Assigned career path
	Career string `json:"career"`
	// Moment this project was created
	Created time.Time `json:"created"`
	// Description
	Description string `json:"description"`
	// Moment this project expires
	Expires *time.Time `json:"expires,omitempty"`
	// Moment this project transitioned to a non-active state.
	Finished *time.Time `json:"finished,omitempty"`
}

type _CorporationsProjectsDetailDetails CorporationsProjectsDetailDetails

// NewCorporationsProjectsDetailDetails instantiates a new CorporationsProjectsDetailDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailDetails(career string, created time.Time, description string) *CorporationsProjectsDetailDetails {
	this := CorporationsProjectsDetailDetails{}
	this.Career = career
	this.Created = created
	this.Description = description
	return &this
}

// NewCorporationsProjectsDetailDetailsWithDefaults instantiates a new CorporationsProjectsDetailDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailDetailsWithDefaults() *CorporationsProjectsDetailDetails {
	this := CorporationsProjectsDetailDetails{}
	return &this
}

// GetCareer returns the Career field value
func (o *CorporationsProjectsDetailDetails) GetCareer() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Career
}

// GetCareerOk returns a tuple with the Career field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailDetails) GetCareerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Career, true
}

// SetCareer sets field value
func (o *CorporationsProjectsDetailDetails) SetCareer(v string) {
	o.Career = v
}

// GetCreated returns the Created field value
func (o *CorporationsProjectsDetailDetails) GetCreated() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailDetails) GetCreatedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *CorporationsProjectsDetailDetails) SetCreated(v time.Time) {
	o.Created = v
}

// GetDescription returns the Description field value
func (o *CorporationsProjectsDetailDetails) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailDetails) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *CorporationsProjectsDetailDetails) SetDescription(v string) {
	o.Description = v
}

// GetExpires returns the Expires field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailDetails) GetExpires() time.Time {
	if o == nil || IsNil(o.Expires) {
		var ret time.Time
		return ret
	}
	return *o.Expires
}

// GetExpiresOk returns a tuple with the Expires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailDetails) GetExpiresOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Expires) {
		return nil, false
	}
	return o.Expires, true
}

// HasExpires returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailDetails) HasExpires() bool {
	if o != nil && !IsNil(o.Expires) {
		return true
	}

	return false
}

// SetExpires gets a reference to the given time.Time and assigns it to the Expires field.
func (o *CorporationsProjectsDetailDetails) SetExpires(v time.Time) {
	o.Expires = &v
}

// GetFinished returns the Finished field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailDetails) GetFinished() time.Time {
	if o == nil || IsNil(o.Finished) {
		var ret time.Time
		return ret
	}
	return *o.Finished
}

// GetFinishedOk returns a tuple with the Finished field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailDetails) GetFinishedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Finished) {
		return nil, false
	}
	return o.Finished, true
}

// HasFinished returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailDetails) HasFinished() bool {
	if o != nil && !IsNil(o.Finished) {
		return true
	}

	return false
}

// SetFinished gets a reference to the given time.Time and assigns it to the Finished field.
func (o *CorporationsProjectsDetailDetails) SetFinished(v time.Time) {
	o.Finished = &v
}

func (o CorporationsProjectsDetailDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["career"] = o.Career
	toSerialize["created"] = o.Created
	toSerialize["description"] = o.Description
	if !IsNil(o.Expires) {
		toSerialize["expires"] = o.Expires
	}
	if !IsNil(o.Finished) {
		toSerialize["finished"] = o.Finished
	}
	return toSerialize, nil
}

func (o *CorporationsProjectsDetailDetails) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"career",
		"created",
		"description",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsDetailDetails := _CorporationsProjectsDetailDetails{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsDetailDetails)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsDetailDetails(varCorporationsProjectsDetailDetails)

	return err
}

type NullableCorporationsProjectsDetailDetails struct {
	value *CorporationsProjectsDetailDetails
	isSet bool
}

func (v NullableCorporationsProjectsDetailDetails) Get() *CorporationsProjectsDetailDetails {
	return v.value
}

func (v *NullableCorporationsProjectsDetailDetails) Set(val *CorporationsProjectsDetailDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailDetails(val *CorporationsProjectsDetailDetails) *NullableCorporationsProjectsDetailDetails {
	return &NullableCorporationsProjectsDetailDetails{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


