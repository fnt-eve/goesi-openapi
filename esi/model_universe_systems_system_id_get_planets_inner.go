/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseSystemsSystemIdGetPlanetsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseSystemsSystemIdGetPlanetsInner{}

// UniverseSystemsSystemIdGetPlanetsInner planet object
type UniverseSystemsSystemIdGetPlanetsInner struct {
	AsteroidBelts []int64 `json:"asteroid_belts,omitempty"`
	Moons []int64 `json:"moons,omitempty"`
	PlanetId int64 `json:"planet_id"`
}

type _UniverseSystemsSystemIdGetPlanetsInner UniverseSystemsSystemIdGetPlanetsInner

// NewUniverseSystemsSystemIdGetPlanetsInner instantiates a new UniverseSystemsSystemIdGetPlanetsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseSystemsSystemIdGetPlanetsInner(planetId int64) *UniverseSystemsSystemIdGetPlanetsInner {
	this := UniverseSystemsSystemIdGetPlanetsInner{}
	this.PlanetId = planetId
	return &this
}

// NewUniverseSystemsSystemIdGetPlanetsInnerWithDefaults instantiates a new UniverseSystemsSystemIdGetPlanetsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseSystemsSystemIdGetPlanetsInnerWithDefaults() *UniverseSystemsSystemIdGetPlanetsInner {
	this := UniverseSystemsSystemIdGetPlanetsInner{}
	return &this
}

// GetAsteroidBelts returns the AsteroidBelts field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGetPlanetsInner) GetAsteroidBelts() []int64 {
	if o == nil || IsNil(o.AsteroidBelts) {
		var ret []int64
		return ret
	}
	return o.AsteroidBelts
}

// GetAsteroidBeltsOk returns a tuple with the AsteroidBelts field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGetPlanetsInner) GetAsteroidBeltsOk() ([]int64, bool) {
	if o == nil || IsNil(o.AsteroidBelts) {
		return nil, false
	}
	return o.AsteroidBelts, true
}

// HasAsteroidBelts returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGetPlanetsInner) HasAsteroidBelts() bool {
	if o != nil && !IsNil(o.AsteroidBelts) {
		return true
	}

	return false
}

// SetAsteroidBelts gets a reference to the given []int64 and assigns it to the AsteroidBelts field.
func (o *UniverseSystemsSystemIdGetPlanetsInner) SetAsteroidBelts(v []int64) {
	o.AsteroidBelts = v
}

// GetMoons returns the Moons field value if set, zero value otherwise.
func (o *UniverseSystemsSystemIdGetPlanetsInner) GetMoons() []int64 {
	if o == nil || IsNil(o.Moons) {
		var ret []int64
		return ret
	}
	return o.Moons
}

// GetMoonsOk returns a tuple with the Moons field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGetPlanetsInner) GetMoonsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Moons) {
		return nil, false
	}
	return o.Moons, true
}

// HasMoons returns a boolean if a field has been set.
func (o *UniverseSystemsSystemIdGetPlanetsInner) HasMoons() bool {
	if o != nil && !IsNil(o.Moons) {
		return true
	}

	return false
}

// SetMoons gets a reference to the given []int64 and assigns it to the Moons field.
func (o *UniverseSystemsSystemIdGetPlanetsInner) SetMoons(v []int64) {
	o.Moons = v
}

// GetPlanetId returns the PlanetId field value
func (o *UniverseSystemsSystemIdGetPlanetsInner) GetPlanetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PlanetId
}

// GetPlanetIdOk returns a tuple with the PlanetId field value
// and a boolean to check if the value has been set.
func (o *UniverseSystemsSystemIdGetPlanetsInner) GetPlanetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanetId, true
}

// SetPlanetId sets field value
func (o *UniverseSystemsSystemIdGetPlanetsInner) SetPlanetId(v int64) {
	o.PlanetId = v
}

func (o UniverseSystemsSystemIdGetPlanetsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseSystemsSystemIdGetPlanetsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AsteroidBelts) {
		toSerialize["asteroid_belts"] = o.AsteroidBelts
	}
	if !IsNil(o.Moons) {
		toSerialize["moons"] = o.Moons
	}
	toSerialize["planet_id"] = o.PlanetId
	return toSerialize, nil
}

func (o *UniverseSystemsSystemIdGetPlanetsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"planet_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseSystemsSystemIdGetPlanetsInner := _UniverseSystemsSystemIdGetPlanetsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseSystemsSystemIdGetPlanetsInner)

	if err != nil {
		return err
	}

	*o = UniverseSystemsSystemIdGetPlanetsInner(varUniverseSystemsSystemIdGetPlanetsInner)

	return err
}

type NullableUniverseSystemsSystemIdGetPlanetsInner struct {
	value *UniverseSystemsSystemIdGetPlanetsInner
	isSet bool
}

func (v NullableUniverseSystemsSystemIdGetPlanetsInner) Get() *UniverseSystemsSystemIdGetPlanetsInner {
	return v.value
}

func (v *NullableUniverseSystemsSystemIdGetPlanetsInner) Set(val *UniverseSystemsSystemIdGetPlanetsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseSystemsSystemIdGetPlanetsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseSystemsSystemIdGetPlanetsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseSystemsSystemIdGetPlanetsInner(val *UniverseSystemsSystemIdGetPlanetsInner) *NullableUniverseSystemsSystemIdGetPlanetsInner {
	return &NullableUniverseSystemsSystemIdGetPlanetsInner{value: val, isSet: true}
}

func (v NullableUniverseSystemsSystemIdGetPlanetsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseSystemsSystemIdGetPlanetsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


