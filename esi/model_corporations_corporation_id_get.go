/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdGet{}

// CorporationsCorporationIdGet struct for CorporationsCorporationIdGet
type CorporationsCorporationIdGet struct {
	// ID of the alliance that corporation is a member of, if any
	AllianceId *int64 `json:"alliance_id,omitempty"`
	CeoId int64 `json:"ceo_id"`
	CreatorId int64 `json:"creator_id"`
	DateFounded *time.Time `json:"date_founded,omitempty"`
	Description *string `json:"description,omitempty"`
	FactionId *int64 `json:"faction_id,omitempty"`
	HomeStationId *int64 `json:"home_station_id,omitempty"`
	MemberCount int64 `json:"member_count"`
	// the full name of the corporation
	Name string `json:"name"`
	Shares *int64 `json:"shares,omitempty"`
	TaxRate float64 `json:"tax_rate"`
	// the short name of the corporation
	Ticker string `json:"ticker"`
	Url *string `json:"url,omitempty"`
	WarEligible *bool `json:"war_eligible,omitempty"`
}

type _CorporationsCorporationIdGet CorporationsCorporationIdGet

// NewCorporationsCorporationIdGet instantiates a new CorporationsCorporationIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdGet(ceoId int64, creatorId int64, memberCount int64, name string, taxRate float64, ticker string) *CorporationsCorporationIdGet {
	this := CorporationsCorporationIdGet{}
	this.CeoId = ceoId
	this.CreatorId = creatorId
	this.MemberCount = memberCount
	this.Name = name
	this.TaxRate = taxRate
	this.Ticker = ticker
	return &this
}

// NewCorporationsCorporationIdGetWithDefaults instantiates a new CorporationsCorporationIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdGetWithDefaults() *CorporationsCorporationIdGet {
	this := CorporationsCorporationIdGet{}
	return &this
}

// GetAllianceId returns the AllianceId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetAllianceId() int64 {
	if o == nil || IsNil(o.AllianceId) {
		var ret int64
		return ret
	}
	return *o.AllianceId
}

// GetAllianceIdOk returns a tuple with the AllianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetAllianceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AllianceId) {
		return nil, false
	}
	return o.AllianceId, true
}

// HasAllianceId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasAllianceId() bool {
	if o != nil && !IsNil(o.AllianceId) {
		return true
	}

	return false
}

// SetAllianceId gets a reference to the given int64 and assigns it to the AllianceId field.
func (o *CorporationsCorporationIdGet) SetAllianceId(v int64) {
	o.AllianceId = &v
}

// GetCeoId returns the CeoId field value
func (o *CorporationsCorporationIdGet) GetCeoId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CeoId
}

// GetCeoIdOk returns a tuple with the CeoId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetCeoIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CeoId, true
}

// SetCeoId sets field value
func (o *CorporationsCorporationIdGet) SetCeoId(v int64) {
	o.CeoId = v
}

// GetCreatorId returns the CreatorId field value
func (o *CorporationsCorporationIdGet) GetCreatorId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CreatorId
}

// GetCreatorIdOk returns a tuple with the CreatorId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetCreatorIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CreatorId, true
}

// SetCreatorId sets field value
func (o *CorporationsCorporationIdGet) SetCreatorId(v int64) {
	o.CreatorId = v
}

// GetDateFounded returns the DateFounded field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetDateFounded() time.Time {
	if o == nil || IsNil(o.DateFounded) {
		var ret time.Time
		return ret
	}
	return *o.DateFounded
}

// GetDateFoundedOk returns a tuple with the DateFounded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetDateFoundedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.DateFounded) {
		return nil, false
	}
	return o.DateFounded, true
}

// HasDateFounded returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasDateFounded() bool {
	if o != nil && !IsNil(o.DateFounded) {
		return true
	}

	return false
}

// SetDateFounded gets a reference to the given time.Time and assigns it to the DateFounded field.
func (o *CorporationsCorporationIdGet) SetDateFounded(v time.Time) {
	o.DateFounded = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *CorporationsCorporationIdGet) SetDescription(v string) {
	o.Description = &v
}

// GetFactionId returns the FactionId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetFactionId() int64 {
	if o == nil || IsNil(o.FactionId) {
		var ret int64
		return ret
	}
	return *o.FactionId
}

// GetFactionIdOk returns a tuple with the FactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetFactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FactionId) {
		return nil, false
	}
	return o.FactionId, true
}

// HasFactionId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasFactionId() bool {
	if o != nil && !IsNil(o.FactionId) {
		return true
	}

	return false
}

// SetFactionId gets a reference to the given int64 and assigns it to the FactionId field.
func (o *CorporationsCorporationIdGet) SetFactionId(v int64) {
	o.FactionId = &v
}

// GetHomeStationId returns the HomeStationId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetHomeStationId() int64 {
	if o == nil || IsNil(o.HomeStationId) {
		var ret int64
		return ret
	}
	return *o.HomeStationId
}

// GetHomeStationIdOk returns a tuple with the HomeStationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetHomeStationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.HomeStationId) {
		return nil, false
	}
	return o.HomeStationId, true
}

// HasHomeStationId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasHomeStationId() bool {
	if o != nil && !IsNil(o.HomeStationId) {
		return true
	}

	return false
}

// SetHomeStationId gets a reference to the given int64 and assigns it to the HomeStationId field.
func (o *CorporationsCorporationIdGet) SetHomeStationId(v int64) {
	o.HomeStationId = &v
}

// GetMemberCount returns the MemberCount field value
func (o *CorporationsCorporationIdGet) GetMemberCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MemberCount
}

// GetMemberCountOk returns a tuple with the MemberCount field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetMemberCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MemberCount, true
}

// SetMemberCount sets field value
func (o *CorporationsCorporationIdGet) SetMemberCount(v int64) {
	o.MemberCount = v
}

// GetName returns the Name field value
func (o *CorporationsCorporationIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CorporationsCorporationIdGet) SetName(v string) {
	o.Name = v
}

// GetShares returns the Shares field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetShares() int64 {
	if o == nil || IsNil(o.Shares) {
		var ret int64
		return ret
	}
	return *o.Shares
}

// GetSharesOk returns a tuple with the Shares field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetSharesOk() (*int64, bool) {
	if o == nil || IsNil(o.Shares) {
		return nil, false
	}
	return o.Shares, true
}

// HasShares returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasShares() bool {
	if o != nil && !IsNil(o.Shares) {
		return true
	}

	return false
}

// SetShares gets a reference to the given int64 and assigns it to the Shares field.
func (o *CorporationsCorporationIdGet) SetShares(v int64) {
	o.Shares = &v
}

// GetTaxRate returns the TaxRate field value
func (o *CorporationsCorporationIdGet) GetTaxRate() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.TaxRate
}

// GetTaxRateOk returns a tuple with the TaxRate field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetTaxRateOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TaxRate, true
}

// SetTaxRate sets field value
func (o *CorporationsCorporationIdGet) SetTaxRate(v float64) {
	o.TaxRate = v
}

// GetTicker returns the Ticker field value
func (o *CorporationsCorporationIdGet) GetTicker() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Ticker
}

// GetTickerOk returns a tuple with the Ticker field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetTickerOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ticker, true
}

// SetTicker sets field value
func (o *CorporationsCorporationIdGet) SetTicker(v string) {
	o.Ticker = v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *CorporationsCorporationIdGet) SetUrl(v string) {
	o.Url = &v
}

// GetWarEligible returns the WarEligible field value if set, zero value otherwise.
func (o *CorporationsCorporationIdGet) GetWarEligible() bool {
	if o == nil || IsNil(o.WarEligible) {
		var ret bool
		return ret
	}
	return *o.WarEligible
}

// GetWarEligibleOk returns a tuple with the WarEligible field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdGet) GetWarEligibleOk() (*bool, bool) {
	if o == nil || IsNil(o.WarEligible) {
		return nil, false
	}
	return o.WarEligible, true
}

// HasWarEligible returns a boolean if a field has been set.
func (o *CorporationsCorporationIdGet) HasWarEligible() bool {
	if o != nil && !IsNil(o.WarEligible) {
		return true
	}

	return false
}

// SetWarEligible gets a reference to the given bool and assigns it to the WarEligible field.
func (o *CorporationsCorporationIdGet) SetWarEligible(v bool) {
	o.WarEligible = &v
}

func (o CorporationsCorporationIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllianceId) {
		toSerialize["alliance_id"] = o.AllianceId
	}
	toSerialize["ceo_id"] = o.CeoId
	toSerialize["creator_id"] = o.CreatorId
	if !IsNil(o.DateFounded) {
		toSerialize["date_founded"] = o.DateFounded
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FactionId) {
		toSerialize["faction_id"] = o.FactionId
	}
	if !IsNil(o.HomeStationId) {
		toSerialize["home_station_id"] = o.HomeStationId
	}
	toSerialize["member_count"] = o.MemberCount
	toSerialize["name"] = o.Name
	if !IsNil(o.Shares) {
		toSerialize["shares"] = o.Shares
	}
	toSerialize["tax_rate"] = o.TaxRate
	toSerialize["ticker"] = o.Ticker
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	if !IsNil(o.WarEligible) {
		toSerialize["war_eligible"] = o.WarEligible
	}
	return toSerialize, nil
}

func (o *CorporationsCorporationIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"ceo_id",
		"creator_id",
		"member_count",
		"name",
		"tax_rate",
		"ticker",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdGet := _CorporationsCorporationIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdGet)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdGet(varCorporationsCorporationIdGet)

	return err
}

type NullableCorporationsCorporationIdGet struct {
	value *CorporationsCorporationIdGet
	isSet bool
}

func (v NullableCorporationsCorporationIdGet) Get() *CorporationsCorporationIdGet {
	return v.value
}

func (v *NullableCorporationsCorporationIdGet) Set(val *CorporationsCorporationIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdGet(val *CorporationsCorporationIdGet) *NullableCorporationsCorporationIdGet {
	return &NullableCorporationsCorporationIdGet{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


