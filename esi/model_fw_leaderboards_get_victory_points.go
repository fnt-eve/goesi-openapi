/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FwLeaderboardsGetVictoryPoints type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FwLeaderboardsGetVictoryPoints{}

// FwLeaderboardsGetVictoryPoints Top 4 rankings of factions by victory points from yesterday, last week and in total
type FwLeaderboardsGetVictoryPoints struct {
	// Top 4 ranking of factions active in faction warfare by total victory points. A faction is considered \"active\" if they have participated in faction warfare in the past 14 days
	ActiveTotal []FwLeaderboardsGetVictoryPointsActiveTotalInner `json:"active_total"`
	// Top 4 ranking of factions by victory points in the past week
	LastWeek []FwLeaderboardsGetVictoryPointsLastWeekInner `json:"last_week"`
	// Top 4 ranking of factions by victory points in the past day
	Yesterday []FwLeaderboardsGetVictoryPointsYesterdayInner `json:"yesterday"`
}

type _FwLeaderboardsGetVictoryPoints FwLeaderboardsGetVictoryPoints

// NewFwLeaderboardsGetVictoryPoints instantiates a new FwLeaderboardsGetVictoryPoints object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFwLeaderboardsGetVictoryPoints(activeTotal []FwLeaderboardsGetVictoryPointsActiveTotalInner, lastWeek []FwLeaderboardsGetVictoryPointsLastWeekInner, yesterday []FwLeaderboardsGetVictoryPointsYesterdayInner) *FwLeaderboardsGetVictoryPoints {
	this := FwLeaderboardsGetVictoryPoints{}
	this.ActiveTotal = activeTotal
	this.LastWeek = lastWeek
	this.Yesterday = yesterday
	return &this
}

// NewFwLeaderboardsGetVictoryPointsWithDefaults instantiates a new FwLeaderboardsGetVictoryPoints object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFwLeaderboardsGetVictoryPointsWithDefaults() *FwLeaderboardsGetVictoryPoints {
	this := FwLeaderboardsGetVictoryPoints{}
	return &this
}

// GetActiveTotal returns the ActiveTotal field value
func (o *FwLeaderboardsGetVictoryPoints) GetActiveTotal() []FwLeaderboardsGetVictoryPointsActiveTotalInner {
	if o == nil {
		var ret []FwLeaderboardsGetVictoryPointsActiveTotalInner
		return ret
	}

	return o.ActiveTotal
}

// GetActiveTotalOk returns a tuple with the ActiveTotal field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsGetVictoryPoints) GetActiveTotalOk() ([]FwLeaderboardsGetVictoryPointsActiveTotalInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.ActiveTotal, true
}

// SetActiveTotal sets field value
func (o *FwLeaderboardsGetVictoryPoints) SetActiveTotal(v []FwLeaderboardsGetVictoryPointsActiveTotalInner) {
	o.ActiveTotal = v
}

// GetLastWeek returns the LastWeek field value
func (o *FwLeaderboardsGetVictoryPoints) GetLastWeek() []FwLeaderboardsGetVictoryPointsLastWeekInner {
	if o == nil {
		var ret []FwLeaderboardsGetVictoryPointsLastWeekInner
		return ret
	}

	return o.LastWeek
}

// GetLastWeekOk returns a tuple with the LastWeek field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsGetVictoryPoints) GetLastWeekOk() ([]FwLeaderboardsGetVictoryPointsLastWeekInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.LastWeek, true
}

// SetLastWeek sets field value
func (o *FwLeaderboardsGetVictoryPoints) SetLastWeek(v []FwLeaderboardsGetVictoryPointsLastWeekInner) {
	o.LastWeek = v
}

// GetYesterday returns the Yesterday field value
func (o *FwLeaderboardsGetVictoryPoints) GetYesterday() []FwLeaderboardsGetVictoryPointsYesterdayInner {
	if o == nil {
		var ret []FwLeaderboardsGetVictoryPointsYesterdayInner
		return ret
	}

	return o.Yesterday
}

// GetYesterdayOk returns a tuple with the Yesterday field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsGetVictoryPoints) GetYesterdayOk() ([]FwLeaderboardsGetVictoryPointsYesterdayInner, bool) {
	if o == nil {
		return nil, false
	}
	return o.Yesterday, true
}

// SetYesterday sets field value
func (o *FwLeaderboardsGetVictoryPoints) SetYesterday(v []FwLeaderboardsGetVictoryPointsYesterdayInner) {
	o.Yesterday = v
}

func (o FwLeaderboardsGetVictoryPoints) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FwLeaderboardsGetVictoryPoints) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["active_total"] = o.ActiveTotal
	toSerialize["last_week"] = o.LastWeek
	toSerialize["yesterday"] = o.Yesterday
	return toSerialize, nil
}

func (o *FwLeaderboardsGetVictoryPoints) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"active_total",
		"last_week",
		"yesterday",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFwLeaderboardsGetVictoryPoints := _FwLeaderboardsGetVictoryPoints{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFwLeaderboardsGetVictoryPoints)

	if err != nil {
		return err
	}

	*o = FwLeaderboardsGetVictoryPoints(varFwLeaderboardsGetVictoryPoints)

	return err
}

type NullableFwLeaderboardsGetVictoryPoints struct {
	value *FwLeaderboardsGetVictoryPoints
	isSet bool
}

func (v NullableFwLeaderboardsGetVictoryPoints) Get() *FwLeaderboardsGetVictoryPoints {
	return v.value
}

func (v *NullableFwLeaderboardsGetVictoryPoints) Set(val *FwLeaderboardsGetVictoryPoints) {
	v.value = val
	v.isSet = true
}

func (v NullableFwLeaderboardsGetVictoryPoints) IsSet() bool {
	return v.isSet
}

func (v *NullableFwLeaderboardsGetVictoryPoints) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFwLeaderboardsGetVictoryPoints(val *FwLeaderboardsGetVictoryPoints) *NullableFwLeaderboardsGetVictoryPoints {
	return &NullableFwLeaderboardsGetVictoryPoints{value: val, isSet: true}
}

func (v NullableFwLeaderboardsGetVictoryPoints) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFwLeaderboardsGetVictoryPoints) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


