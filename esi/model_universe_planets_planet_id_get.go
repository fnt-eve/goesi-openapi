/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniversePlanetsPlanetIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniversePlanetsPlanetIdGet{}

// UniversePlanetsPlanetIdGet struct for UniversePlanetsPlanetIdGet
type UniversePlanetsPlanetIdGet struct {
	Name string `json:"name"`
	PlanetId int64 `json:"planet_id"`
	Position CharactersCharacterIdAssetsLocationsPostInnerPosition `json:"position"`
	// The solar system this planet is in
	SystemId int64 `json:"system_id"`
	TypeId int64 `json:"type_id"`
}

type _UniversePlanetsPlanetIdGet UniversePlanetsPlanetIdGet

// NewUniversePlanetsPlanetIdGet instantiates a new UniversePlanetsPlanetIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniversePlanetsPlanetIdGet(name string, planetId int64, position CharactersCharacterIdAssetsLocationsPostInnerPosition, systemId int64, typeId int64) *UniversePlanetsPlanetIdGet {
	this := UniversePlanetsPlanetIdGet{}
	this.Name = name
	this.PlanetId = planetId
	this.Position = position
	this.SystemId = systemId
	this.TypeId = typeId
	return &this
}

// NewUniversePlanetsPlanetIdGetWithDefaults instantiates a new UniversePlanetsPlanetIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniversePlanetsPlanetIdGetWithDefaults() *UniversePlanetsPlanetIdGet {
	this := UniversePlanetsPlanetIdGet{}
	return &this
}

// GetName returns the Name field value
func (o *UniversePlanetsPlanetIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniversePlanetsPlanetIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniversePlanetsPlanetIdGet) SetName(v string) {
	o.Name = v
}

// GetPlanetId returns the PlanetId field value
func (o *UniversePlanetsPlanetIdGet) GetPlanetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.PlanetId
}

// GetPlanetIdOk returns a tuple with the PlanetId field value
// and a boolean to check if the value has been set.
func (o *UniversePlanetsPlanetIdGet) GetPlanetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.PlanetId, true
}

// SetPlanetId sets field value
func (o *UniversePlanetsPlanetIdGet) SetPlanetId(v int64) {
	o.PlanetId = v
}

// GetPosition returns the Position field value
func (o *UniversePlanetsPlanetIdGet) GetPosition() CharactersCharacterIdAssetsLocationsPostInnerPosition {
	if o == nil {
		var ret CharactersCharacterIdAssetsLocationsPostInnerPosition
		return ret
	}

	return o.Position
}

// GetPositionOk returns a tuple with the Position field value
// and a boolean to check if the value has been set.
func (o *UniversePlanetsPlanetIdGet) GetPositionOk() (*CharactersCharacterIdAssetsLocationsPostInnerPosition, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Position, true
}

// SetPosition sets field value
func (o *UniversePlanetsPlanetIdGet) SetPosition(v CharactersCharacterIdAssetsLocationsPostInnerPosition) {
	o.Position = v
}

// GetSystemId returns the SystemId field value
func (o *UniversePlanetsPlanetIdGet) GetSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *UniversePlanetsPlanetIdGet) GetSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *UniversePlanetsPlanetIdGet) SetSystemId(v int64) {
	o.SystemId = v
}

// GetTypeId returns the TypeId field value
func (o *UniversePlanetsPlanetIdGet) GetTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *UniversePlanetsPlanetIdGet) GetTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *UniversePlanetsPlanetIdGet) SetTypeId(v int64) {
	o.TypeId = v
}

func (o UniversePlanetsPlanetIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniversePlanetsPlanetIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["planet_id"] = o.PlanetId
	toSerialize["position"] = o.Position
	toSerialize["system_id"] = o.SystemId
	toSerialize["type_id"] = o.TypeId
	return toSerialize, nil
}

func (o *UniversePlanetsPlanetIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"planet_id",
		"position",
		"system_id",
		"type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniversePlanetsPlanetIdGet := _UniversePlanetsPlanetIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniversePlanetsPlanetIdGet)

	if err != nil {
		return err
	}

	*o = UniversePlanetsPlanetIdGet(varUniversePlanetsPlanetIdGet)

	return err
}

type NullableUniversePlanetsPlanetIdGet struct {
	value *UniversePlanetsPlanetIdGet
	isSet bool
}

func (v NullableUniversePlanetsPlanetIdGet) Get() *UniversePlanetsPlanetIdGet {
	return v.value
}

func (v *NullableUniversePlanetsPlanetIdGet) Set(val *UniversePlanetsPlanetIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableUniversePlanetsPlanetIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableUniversePlanetsPlanetIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniversePlanetsPlanetIdGet(val *UniversePlanetsPlanetIdGet) *NullableUniversePlanetsPlanetIdGet {
	return &NullableUniversePlanetsPlanetIdGet{value: val, isSet: true}
}

func (v NullableUniversePlanetsPlanetIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniversePlanetsPlanetIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


