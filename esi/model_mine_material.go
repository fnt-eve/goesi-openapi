/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the MineMaterial type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MineMaterial{}

// MineMaterial struct for MineMaterial
type MineMaterial struct {
	MineMaterial *CorporationsProjectsDetailConfigurationminematerial `json:"mine_material,omitempty"`
}

// NewMineMaterial instantiates a new MineMaterial object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMineMaterial() *MineMaterial {
	this := MineMaterial{}
	return &this
}

// NewMineMaterialWithDefaults instantiates a new MineMaterial object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMineMaterialWithDefaults() *MineMaterial {
	this := MineMaterial{}
	return &this
}

// GetMineMaterial returns the MineMaterial field value if set, zero value otherwise.
func (o *MineMaterial) GetMineMaterial() CorporationsProjectsDetailConfigurationminematerial {
	if o == nil || IsNil(o.MineMaterial) {
		var ret CorporationsProjectsDetailConfigurationminematerial
		return ret
	}
	return *o.MineMaterial
}

// GetMineMaterialOk returns a tuple with the MineMaterial field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MineMaterial) GetMineMaterialOk() (*CorporationsProjectsDetailConfigurationminematerial, bool) {
	if o == nil || IsNil(o.MineMaterial) {
		return nil, false
	}
	return o.MineMaterial, true
}

// HasMineMaterial returns a boolean if a field has been set.
func (o *MineMaterial) HasMineMaterial() bool {
	if o != nil && !IsNil(o.MineMaterial) {
		return true
	}

	return false
}

// SetMineMaterial gets a reference to the given CorporationsProjectsDetailConfigurationminematerial and assigns it to the MineMaterial field.
func (o *MineMaterial) SetMineMaterial(v CorporationsProjectsDetailConfigurationminematerial) {
	o.MineMaterial = &v
}

func (o MineMaterial) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MineMaterial) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MineMaterial) {
		toSerialize["mine_material"] = o.MineMaterial
	}
	return toSerialize, nil
}

type NullableMineMaterial struct {
	value *MineMaterial
	isSet bool
}

func (v NullableMineMaterial) Get() *MineMaterial {
	return v.value
}

func (v *NullableMineMaterial) Set(val *MineMaterial) {
	v.value = val
	v.isSet = true
}

func (v NullableMineMaterial) IsSet() bool {
	return v.isSet
}

func (v *NullableMineMaterial) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMineMaterial(val *MineMaterial) *NullableMineMaterial {
	return &NullableMineMaterial{value: val, isSet: true}
}

func (v NullableMineMaterial) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMineMaterial) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


