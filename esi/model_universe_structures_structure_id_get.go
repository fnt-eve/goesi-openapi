/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseStructuresStructureIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseStructuresStructureIdGet{}

// UniverseStructuresStructureIdGet struct for UniverseStructuresStructureIdGet
type UniverseStructuresStructureIdGet struct {
	// The full name of the structure
	Name string `json:"name"`
	// The ID of the corporation who owns this particular structure
	OwnerId int64 `json:"owner_id"`
	Position *UniverseStructuresStructureIdGetPosition `json:"position,omitempty"`
	SolarSystemId int64 `json:"solar_system_id"`
	TypeId *int64 `json:"type_id,omitempty"`
}

type _UniverseStructuresStructureIdGet UniverseStructuresStructureIdGet

// NewUniverseStructuresStructureIdGet instantiates a new UniverseStructuresStructureIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseStructuresStructureIdGet(name string, ownerId int64, solarSystemId int64) *UniverseStructuresStructureIdGet {
	this := UniverseStructuresStructureIdGet{}
	this.Name = name
	this.OwnerId = ownerId
	this.SolarSystemId = solarSystemId
	return &this
}

// NewUniverseStructuresStructureIdGetWithDefaults instantiates a new UniverseStructuresStructureIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseStructuresStructureIdGetWithDefaults() *UniverseStructuresStructureIdGet {
	this := UniverseStructuresStructureIdGet{}
	return &this
}

// GetName returns the Name field value
func (o *UniverseStructuresStructureIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniverseStructuresStructureIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniverseStructuresStructureIdGet) SetName(v string) {
	o.Name = v
}

// GetOwnerId returns the OwnerId field value
func (o *UniverseStructuresStructureIdGet) GetOwnerId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.OwnerId
}

// GetOwnerIdOk returns a tuple with the OwnerId field value
// and a boolean to check if the value has been set.
func (o *UniverseStructuresStructureIdGet) GetOwnerIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OwnerId, true
}

// SetOwnerId sets field value
func (o *UniverseStructuresStructureIdGet) SetOwnerId(v int64) {
	o.OwnerId = v
}

// GetPosition returns the Position field value if set, zero value otherwise.
func (o *UniverseStructuresStructureIdGet) GetPosition() UniverseStructuresStructureIdGetPosition {
	if o == nil || IsNil(o.Position) {
		var ret UniverseStructuresStructureIdGetPosition
		return ret
	}
	return *o.Position
}

// GetPositionOk returns a tuple with the Position field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseStructuresStructureIdGet) GetPositionOk() (*UniverseStructuresStructureIdGetPosition, bool) {
	if o == nil || IsNil(o.Position) {
		return nil, false
	}
	return o.Position, true
}

// HasPosition returns a boolean if a field has been set.
func (o *UniverseStructuresStructureIdGet) HasPosition() bool {
	if o != nil && !IsNil(o.Position) {
		return true
	}

	return false
}

// SetPosition gets a reference to the given UniverseStructuresStructureIdGetPosition and assigns it to the Position field.
func (o *UniverseStructuresStructureIdGet) SetPosition(v UniverseStructuresStructureIdGetPosition) {
	o.Position = &v
}

// GetSolarSystemId returns the SolarSystemId field value
func (o *UniverseStructuresStructureIdGet) GetSolarSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SolarSystemId
}

// GetSolarSystemIdOk returns a tuple with the SolarSystemId field value
// and a boolean to check if the value has been set.
func (o *UniverseStructuresStructureIdGet) GetSolarSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SolarSystemId, true
}

// SetSolarSystemId sets field value
func (o *UniverseStructuresStructureIdGet) SetSolarSystemId(v int64) {
	o.SolarSystemId = v
}

// GetTypeId returns the TypeId field value if set, zero value otherwise.
func (o *UniverseStructuresStructureIdGet) GetTypeId() int64 {
	if o == nil || IsNil(o.TypeId) {
		var ret int64
		return ret
	}
	return *o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseStructuresStructureIdGet) GetTypeIdOk() (*int64, bool) {
	if o == nil || IsNil(o.TypeId) {
		return nil, false
	}
	return o.TypeId, true
}

// HasTypeId returns a boolean if a field has been set.
func (o *UniverseStructuresStructureIdGet) HasTypeId() bool {
	if o != nil && !IsNil(o.TypeId) {
		return true
	}

	return false
}

// SetTypeId gets a reference to the given int64 and assigns it to the TypeId field.
func (o *UniverseStructuresStructureIdGet) SetTypeId(v int64) {
	o.TypeId = &v
}

func (o UniverseStructuresStructureIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseStructuresStructureIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	toSerialize["owner_id"] = o.OwnerId
	if !IsNil(o.Position) {
		toSerialize["position"] = o.Position
	}
	toSerialize["solar_system_id"] = o.SolarSystemId
	if !IsNil(o.TypeId) {
		toSerialize["type_id"] = o.TypeId
	}
	return toSerialize, nil
}

func (o *UniverseStructuresStructureIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"name",
		"owner_id",
		"solar_system_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseStructuresStructureIdGet := _UniverseStructuresStructureIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseStructuresStructureIdGet)

	if err != nil {
		return err
	}

	*o = UniverseStructuresStructureIdGet(varUniverseStructuresStructureIdGet)

	return err
}

type NullableUniverseStructuresStructureIdGet struct {
	value *UniverseStructuresStructureIdGet
	isSet bool
}

func (v NullableUniverseStructuresStructureIdGet) Get() *UniverseStructuresStructureIdGet {
	return v.value
}

func (v *NullableUniverseStructuresStructureIdGet) Set(val *UniverseStructuresStructureIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseStructuresStructureIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseStructuresStructureIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseStructuresStructureIdGet(val *UniverseStructuresStructureIdGet) *NullableUniverseStructuresStructureIdGet {
	return &NullableUniverseStructuresStructureIdGet{value: val, isSet: true}
}

func (v NullableUniverseStructuresStructureIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseStructuresStructureIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


