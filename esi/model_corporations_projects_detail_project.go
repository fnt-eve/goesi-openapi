/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsDetailProject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailProject{}

// CorporationsProjectsDetailProject struct for CorporationsProjectsDetailProject
type CorporationsProjectsDetailProject struct {
	Id string `json:"id"`
	// Moment this project was last modified. Project contributions also count as a modification
	LastModified time.Time `json:"last_modified"`
	// Project's name
	Name string `json:"name"`
	Progress CorporationsProjectsDetailProgress `json:"progress"`
	Reward *CorporationsProjectsDetailReward `json:"reward,omitempty"`
	// Project's current state
	State string `json:"state"`
}

type _CorporationsProjectsDetailProject CorporationsProjectsDetailProject

// NewCorporationsProjectsDetailProject instantiates a new CorporationsProjectsDetailProject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailProject(id string, lastModified time.Time, name string, progress CorporationsProjectsDetailProgress, state string) *CorporationsProjectsDetailProject {
	this := CorporationsProjectsDetailProject{}
	this.Id = id
	this.LastModified = lastModified
	this.Name = name
	this.Progress = progress
	this.State = state
	return &this
}

// NewCorporationsProjectsDetailProjectWithDefaults instantiates a new CorporationsProjectsDetailProject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailProjectWithDefaults() *CorporationsProjectsDetailProject {
	this := CorporationsProjectsDetailProject{}
	return &this
}

// GetId returns the Id field value
func (o *CorporationsProjectsDetailProject) GetId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailProject) GetIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CorporationsProjectsDetailProject) SetId(v string) {
	o.Id = v
}

// GetLastModified returns the LastModified field value
func (o *CorporationsProjectsDetailProject) GetLastModified() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailProject) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastModified, true
}

// SetLastModified sets field value
func (o *CorporationsProjectsDetailProject) SetLastModified(v time.Time) {
	o.LastModified = v
}

// GetName returns the Name field value
func (o *CorporationsProjectsDetailProject) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailProject) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CorporationsProjectsDetailProject) SetName(v string) {
	o.Name = v
}

// GetProgress returns the Progress field value
func (o *CorporationsProjectsDetailProject) GetProgress() CorporationsProjectsDetailProgress {
	if o == nil {
		var ret CorporationsProjectsDetailProgress
		return ret
	}

	return o.Progress
}

// GetProgressOk returns a tuple with the Progress field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailProject) GetProgressOk() (*CorporationsProjectsDetailProgress, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Progress, true
}

// SetProgress sets field value
func (o *CorporationsProjectsDetailProject) SetProgress(v CorporationsProjectsDetailProgress) {
	o.Progress = v
}

// GetReward returns the Reward field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailProject) GetReward() CorporationsProjectsDetailReward {
	if o == nil || IsNil(o.Reward) {
		var ret CorporationsProjectsDetailReward
		return ret
	}
	return *o.Reward
}

// GetRewardOk returns a tuple with the Reward field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailProject) GetRewardOk() (*CorporationsProjectsDetailReward, bool) {
	if o == nil || IsNil(o.Reward) {
		return nil, false
	}
	return o.Reward, true
}

// HasReward returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailProject) HasReward() bool {
	if o != nil && !IsNil(o.Reward) {
		return true
	}

	return false
}

// SetReward gets a reference to the given CorporationsProjectsDetailReward and assigns it to the Reward field.
func (o *CorporationsProjectsDetailProject) SetReward(v CorporationsProjectsDetailReward) {
	o.Reward = &v
}

// GetState returns the State field value
func (o *CorporationsProjectsDetailProject) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailProject) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CorporationsProjectsDetailProject) SetState(v string) {
	o.State = v
}

func (o CorporationsProjectsDetailProject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailProject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["id"] = o.Id
	toSerialize["last_modified"] = o.LastModified
	toSerialize["name"] = o.Name
	toSerialize["progress"] = o.Progress
	if !IsNil(o.Reward) {
		toSerialize["reward"] = o.Reward
	}
	toSerialize["state"] = o.State
	return toSerialize, nil
}

func (o *CorporationsProjectsDetailProject) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"id",
		"last_modified",
		"name",
		"progress",
		"state",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsDetailProject := _CorporationsProjectsDetailProject{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsDetailProject)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsDetailProject(varCorporationsProjectsDetailProject)

	return err
}

type NullableCorporationsProjectsDetailProject struct {
	value *CorporationsProjectsDetailProject
	isSet bool
}

func (v NullableCorporationsProjectsDetailProject) Get() *CorporationsProjectsDetailProject {
	return v.value
}

func (v *NullableCorporationsProjectsDetailProject) Set(val *CorporationsProjectsDetailProject) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailProject) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailProject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailProject(val *CorporationsProjectsDetailProject) *NullableCorporationsProjectsDetailProject {
	return &NullableCorporationsProjectsDetailProject{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailProject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailProject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


