/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseStargatesStargateIdGetDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseStargatesStargateIdGetDestination{}

// UniverseStargatesStargateIdGetDestination struct for UniverseStargatesStargateIdGetDestination
type UniverseStargatesStargateIdGetDestination struct {
	// The stargate this stargate connects to
	StargateId int64 `json:"stargate_id"`
	// The solar system this stargate connects to
	SystemId int64 `json:"system_id"`
}

type _UniverseStargatesStargateIdGetDestination UniverseStargatesStargateIdGetDestination

// NewUniverseStargatesStargateIdGetDestination instantiates a new UniverseStargatesStargateIdGetDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseStargatesStargateIdGetDestination(stargateId int64, systemId int64) *UniverseStargatesStargateIdGetDestination {
	this := UniverseStargatesStargateIdGetDestination{}
	this.StargateId = stargateId
	this.SystemId = systemId
	return &this
}

// NewUniverseStargatesStargateIdGetDestinationWithDefaults instantiates a new UniverseStargatesStargateIdGetDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseStargatesStargateIdGetDestinationWithDefaults() *UniverseStargatesStargateIdGetDestination {
	this := UniverseStargatesStargateIdGetDestination{}
	return &this
}

// GetStargateId returns the StargateId field value
func (o *UniverseStargatesStargateIdGetDestination) GetStargateId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StargateId
}

// GetStargateIdOk returns a tuple with the StargateId field value
// and a boolean to check if the value has been set.
func (o *UniverseStargatesStargateIdGetDestination) GetStargateIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StargateId, true
}

// SetStargateId sets field value
func (o *UniverseStargatesStargateIdGetDestination) SetStargateId(v int64) {
	o.StargateId = v
}

// GetSystemId returns the SystemId field value
func (o *UniverseStargatesStargateIdGetDestination) GetSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *UniverseStargatesStargateIdGetDestination) GetSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *UniverseStargatesStargateIdGetDestination) SetSystemId(v int64) {
	o.SystemId = v
}

func (o UniverseStargatesStargateIdGetDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseStargatesStargateIdGetDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["stargate_id"] = o.StargateId
	toSerialize["system_id"] = o.SystemId
	return toSerialize, nil
}

func (o *UniverseStargatesStargateIdGetDestination) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"stargate_id",
		"system_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseStargatesStargateIdGetDestination := _UniverseStargatesStargateIdGetDestination{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseStargatesStargateIdGetDestination)

	if err != nil {
		return err
	}

	*o = UniverseStargatesStargateIdGetDestination(varUniverseStargatesStargateIdGetDestination)

	return err
}

type NullableUniverseStargatesStargateIdGetDestination struct {
	value *UniverseStargatesStargateIdGetDestination
	isSet bool
}

func (v NullableUniverseStargatesStargateIdGetDestination) Get() *UniverseStargatesStargateIdGetDestination {
	return v.value
}

func (v *NullableUniverseStargatesStargateIdGetDestination) Set(val *UniverseStargatesStargateIdGetDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseStargatesStargateIdGetDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseStargatesStargateIdGetDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseStargatesStargateIdGetDestination(val *UniverseStargatesStargateIdGetDestination) *NullableUniverseStargatesStargateIdGetDestination {
	return &NullableUniverseStargatesStargateIdGetDestination{value: val, isSet: true}
}

func (v NullableUniverseStargatesStargateIdGetDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseStargatesStargateIdGetDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


