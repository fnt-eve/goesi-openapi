/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the CorporationsProjectsDetailConfigurationsalvagewreck type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailConfigurationsalvagewreck{}

// CorporationsProjectsDetailConfigurationsalvagewreck struct for CorporationsProjectsDetailConfigurationsalvagewreck
type CorporationsProjectsDetailConfigurationsalvagewreck struct {
	// Location of wreck
	Locations []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner `json:"locations,omitempty"`
}

// NewCorporationsProjectsDetailConfigurationsalvagewreck instantiates a new CorporationsProjectsDetailConfigurationsalvagewreck object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailConfigurationsalvagewreck() *CorporationsProjectsDetailConfigurationsalvagewreck {
	this := CorporationsProjectsDetailConfigurationsalvagewreck{}
	return &this
}

// NewCorporationsProjectsDetailConfigurationsalvagewreckWithDefaults instantiates a new CorporationsProjectsDetailConfigurationsalvagewreck object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailConfigurationsalvagewreckWithDefaults() *CorporationsProjectsDetailConfigurationsalvagewreck {
	this := CorporationsProjectsDetailConfigurationsalvagewreck{}
	return &this
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailConfigurationsalvagewreck) GetLocations() []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner {
	if o == nil || IsNil(o.Locations) {
		var ret []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationsalvagewreck) GetLocationsOk() ([]CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailConfigurationsalvagewreck) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner and assigns it to the Locations field.
func (o *CorporationsProjectsDetailConfigurationsalvagewreck) SetLocations(v []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner) {
	o.Locations = v
}

func (o CorporationsProjectsDetailConfigurationsalvagewreck) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailConfigurationsalvagewreck) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	return toSerialize, nil
}

type NullableCorporationsProjectsDetailConfigurationsalvagewreck struct {
	value *CorporationsProjectsDetailConfigurationsalvagewreck
	isSet bool
}

func (v NullableCorporationsProjectsDetailConfigurationsalvagewreck) Get() *CorporationsProjectsDetailConfigurationsalvagewreck {
	return v.value
}

func (v *NullableCorporationsProjectsDetailConfigurationsalvagewreck) Set(val *CorporationsProjectsDetailConfigurationsalvagewreck) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailConfigurationsalvagewreck) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailConfigurationsalvagewreck) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailConfigurationsalvagewreck(val *CorporationsProjectsDetailConfigurationsalvagewreck) *NullableCorporationsProjectsDetailConfigurationsalvagewreck {
	return &NullableCorporationsProjectsDetailConfigurationsalvagewreck{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailConfigurationsalvagewreck) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailConfigurationsalvagewreck) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


