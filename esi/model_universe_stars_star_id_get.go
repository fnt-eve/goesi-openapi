/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseStarsStarIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseStarsStarIdGet{}

// UniverseStarsStarIdGet struct for UniverseStarsStarIdGet
type UniverseStarsStarIdGet struct {
	// Age of star in years
	Age int64 `json:"age"`
	Luminosity float64 `json:"luminosity"`
	Name string `json:"name"`
	Radius int64 `json:"radius"`
	SolarSystemId int64 `json:"solar_system_id"`
	SpectralClass string `json:"spectral_class"`
	Temperature int64 `json:"temperature"`
	TypeId int64 `json:"type_id"`
}

type _UniverseStarsStarIdGet UniverseStarsStarIdGet

// NewUniverseStarsStarIdGet instantiates a new UniverseStarsStarIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseStarsStarIdGet(age int64, luminosity float64, name string, radius int64, solarSystemId int64, spectralClass string, temperature int64, typeId int64) *UniverseStarsStarIdGet {
	this := UniverseStarsStarIdGet{}
	this.Age = age
	this.Luminosity = luminosity
	this.Name = name
	this.Radius = radius
	this.SolarSystemId = solarSystemId
	this.SpectralClass = spectralClass
	this.Temperature = temperature
	this.TypeId = typeId
	return &this
}

// NewUniverseStarsStarIdGetWithDefaults instantiates a new UniverseStarsStarIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseStarsStarIdGetWithDefaults() *UniverseStarsStarIdGet {
	this := UniverseStarsStarIdGet{}
	return &this
}

// GetAge returns the Age field value
func (o *UniverseStarsStarIdGet) GetAge() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Age
}

// GetAgeOk returns a tuple with the Age field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetAgeOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Age, true
}

// SetAge sets field value
func (o *UniverseStarsStarIdGet) SetAge(v int64) {
	o.Age = v
}

// GetLuminosity returns the Luminosity field value
func (o *UniverseStarsStarIdGet) GetLuminosity() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Luminosity
}

// GetLuminosityOk returns a tuple with the Luminosity field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetLuminosityOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Luminosity, true
}

// SetLuminosity sets field value
func (o *UniverseStarsStarIdGet) SetLuminosity(v float64) {
	o.Luminosity = v
}

// GetName returns the Name field value
func (o *UniverseStarsStarIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniverseStarsStarIdGet) SetName(v string) {
	o.Name = v
}

// GetRadius returns the Radius field value
func (o *UniverseStarsStarIdGet) GetRadius() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Radius
}

// GetRadiusOk returns a tuple with the Radius field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetRadiusOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Radius, true
}

// SetRadius sets field value
func (o *UniverseStarsStarIdGet) SetRadius(v int64) {
	o.Radius = v
}

// GetSolarSystemId returns the SolarSystemId field value
func (o *UniverseStarsStarIdGet) GetSolarSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SolarSystemId
}

// GetSolarSystemIdOk returns a tuple with the SolarSystemId field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetSolarSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SolarSystemId, true
}

// SetSolarSystemId sets field value
func (o *UniverseStarsStarIdGet) SetSolarSystemId(v int64) {
	o.SolarSystemId = v
}

// GetSpectralClass returns the SpectralClass field value
func (o *UniverseStarsStarIdGet) GetSpectralClass() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.SpectralClass
}

// GetSpectralClassOk returns a tuple with the SpectralClass field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetSpectralClassOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SpectralClass, true
}

// SetSpectralClass sets field value
func (o *UniverseStarsStarIdGet) SetSpectralClass(v string) {
	o.SpectralClass = v
}

// GetTemperature returns the Temperature field value
func (o *UniverseStarsStarIdGet) GetTemperature() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Temperature
}

// GetTemperatureOk returns a tuple with the Temperature field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetTemperatureOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Temperature, true
}

// SetTemperature sets field value
func (o *UniverseStarsStarIdGet) SetTemperature(v int64) {
	o.Temperature = v
}

// GetTypeId returns the TypeId field value
func (o *UniverseStarsStarIdGet) GetTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *UniverseStarsStarIdGet) GetTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *UniverseStarsStarIdGet) SetTypeId(v int64) {
	o.TypeId = v
}

func (o UniverseStarsStarIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseStarsStarIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["age"] = o.Age
	toSerialize["luminosity"] = o.Luminosity
	toSerialize["name"] = o.Name
	toSerialize["radius"] = o.Radius
	toSerialize["solar_system_id"] = o.SolarSystemId
	toSerialize["spectral_class"] = o.SpectralClass
	toSerialize["temperature"] = o.Temperature
	toSerialize["type_id"] = o.TypeId
	return toSerialize, nil
}

func (o *UniverseStarsStarIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"age",
		"luminosity",
		"name",
		"radius",
		"solar_system_id",
		"spectral_class",
		"temperature",
		"type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseStarsStarIdGet := _UniverseStarsStarIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseStarsStarIdGet)

	if err != nil {
		return err
	}

	*o = UniverseStarsStarIdGet(varUniverseStarsStarIdGet)

	return err
}

type NullableUniverseStarsStarIdGet struct {
	value *UniverseStarsStarIdGet
	isSet bool
}

func (v NullableUniverseStarsStarIdGet) Get() *UniverseStarsStarIdGet {
	return v.value
}

func (v *NullableUniverseStarsStarIdGet) Set(val *UniverseStarsStarIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseStarsStarIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseStarsStarIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseStarsStarIdGet(val *UniverseStarsStarIdGet) *NullableUniverseStarsStarIdGet {
	return &NullableUniverseStarsStarIdGet{value: val, isSet: true}
}

func (v NullableUniverseStarsStarIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseStarsStarIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


