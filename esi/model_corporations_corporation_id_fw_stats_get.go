/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdFwStatsGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdFwStatsGet{}

// CorporationsCorporationIdFwStatsGet struct for CorporationsCorporationIdFwStatsGet
type CorporationsCorporationIdFwStatsGet struct {
	// The enlistment date of the given corporation into faction warfare. Will not be included if corporation is not enlisted in faction warfare
	EnlistedOn *time.Time `json:"enlisted_on,omitempty"`
	// The faction the given corporation is enlisted to fight for. Will not be included if corporation is not enlisted in faction warfare
	FactionId *int64 `json:"faction_id,omitempty"`
	Kills CorporationsCorporationIdFwStatsGetKills `json:"kills"`
	// How many pilots the enlisted corporation has. Will not be included if corporation is not enlisted in faction warfare
	Pilots *int64 `json:"pilots,omitempty"`
	VictoryPoints CorporationsCorporationIdFwStatsGetVictoryPoints `json:"victory_points"`
}

type _CorporationsCorporationIdFwStatsGet CorporationsCorporationIdFwStatsGet

// NewCorporationsCorporationIdFwStatsGet instantiates a new CorporationsCorporationIdFwStatsGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdFwStatsGet(kills CorporationsCorporationIdFwStatsGetKills, victoryPoints CorporationsCorporationIdFwStatsGetVictoryPoints) *CorporationsCorporationIdFwStatsGet {
	this := CorporationsCorporationIdFwStatsGet{}
	this.Kills = kills
	this.VictoryPoints = victoryPoints
	return &this
}

// NewCorporationsCorporationIdFwStatsGetWithDefaults instantiates a new CorporationsCorporationIdFwStatsGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdFwStatsGetWithDefaults() *CorporationsCorporationIdFwStatsGet {
	this := CorporationsCorporationIdFwStatsGet{}
	return &this
}

// GetEnlistedOn returns the EnlistedOn field value if set, zero value otherwise.
func (o *CorporationsCorporationIdFwStatsGet) GetEnlistedOn() time.Time {
	if o == nil || IsNil(o.EnlistedOn) {
		var ret time.Time
		return ret
	}
	return *o.EnlistedOn
}

// GetEnlistedOnOk returns a tuple with the EnlistedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdFwStatsGet) GetEnlistedOnOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EnlistedOn) {
		return nil, false
	}
	return o.EnlistedOn, true
}

// HasEnlistedOn returns a boolean if a field has been set.
func (o *CorporationsCorporationIdFwStatsGet) HasEnlistedOn() bool {
	if o != nil && !IsNil(o.EnlistedOn) {
		return true
	}

	return false
}

// SetEnlistedOn gets a reference to the given time.Time and assigns it to the EnlistedOn field.
func (o *CorporationsCorporationIdFwStatsGet) SetEnlistedOn(v time.Time) {
	o.EnlistedOn = &v
}

// GetFactionId returns the FactionId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdFwStatsGet) GetFactionId() int64 {
	if o == nil || IsNil(o.FactionId) {
		var ret int64
		return ret
	}
	return *o.FactionId
}

// GetFactionIdOk returns a tuple with the FactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdFwStatsGet) GetFactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FactionId) {
		return nil, false
	}
	return o.FactionId, true
}

// HasFactionId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdFwStatsGet) HasFactionId() bool {
	if o != nil && !IsNil(o.FactionId) {
		return true
	}

	return false
}

// SetFactionId gets a reference to the given int64 and assigns it to the FactionId field.
func (o *CorporationsCorporationIdFwStatsGet) SetFactionId(v int64) {
	o.FactionId = &v
}

// GetKills returns the Kills field value
func (o *CorporationsCorporationIdFwStatsGet) GetKills() CorporationsCorporationIdFwStatsGetKills {
	if o == nil {
		var ret CorporationsCorporationIdFwStatsGetKills
		return ret
	}

	return o.Kills
}

// GetKillsOk returns a tuple with the Kills field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdFwStatsGet) GetKillsOk() (*CorporationsCorporationIdFwStatsGetKills, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kills, true
}

// SetKills sets field value
func (o *CorporationsCorporationIdFwStatsGet) SetKills(v CorporationsCorporationIdFwStatsGetKills) {
	o.Kills = v
}

// GetPilots returns the Pilots field value if set, zero value otherwise.
func (o *CorporationsCorporationIdFwStatsGet) GetPilots() int64 {
	if o == nil || IsNil(o.Pilots) {
		var ret int64
		return ret
	}
	return *o.Pilots
}

// GetPilotsOk returns a tuple with the Pilots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdFwStatsGet) GetPilotsOk() (*int64, bool) {
	if o == nil || IsNil(o.Pilots) {
		return nil, false
	}
	return o.Pilots, true
}

// HasPilots returns a boolean if a field has been set.
func (o *CorporationsCorporationIdFwStatsGet) HasPilots() bool {
	if o != nil && !IsNil(o.Pilots) {
		return true
	}

	return false
}

// SetPilots gets a reference to the given int64 and assigns it to the Pilots field.
func (o *CorporationsCorporationIdFwStatsGet) SetPilots(v int64) {
	o.Pilots = &v
}

// GetVictoryPoints returns the VictoryPoints field value
func (o *CorporationsCorporationIdFwStatsGet) GetVictoryPoints() CorporationsCorporationIdFwStatsGetVictoryPoints {
	if o == nil {
		var ret CorporationsCorporationIdFwStatsGetVictoryPoints
		return ret
	}

	return o.VictoryPoints
}

// GetVictoryPointsOk returns a tuple with the VictoryPoints field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdFwStatsGet) GetVictoryPointsOk() (*CorporationsCorporationIdFwStatsGetVictoryPoints, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictoryPoints, true
}

// SetVictoryPoints sets field value
func (o *CorporationsCorporationIdFwStatsGet) SetVictoryPoints(v CorporationsCorporationIdFwStatsGetVictoryPoints) {
	o.VictoryPoints = v
}

func (o CorporationsCorporationIdFwStatsGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdFwStatsGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EnlistedOn) {
		toSerialize["enlisted_on"] = o.EnlistedOn
	}
	if !IsNil(o.FactionId) {
		toSerialize["faction_id"] = o.FactionId
	}
	toSerialize["kills"] = o.Kills
	if !IsNil(o.Pilots) {
		toSerialize["pilots"] = o.Pilots
	}
	toSerialize["victory_points"] = o.VictoryPoints
	return toSerialize, nil
}

func (o *CorporationsCorporationIdFwStatsGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kills",
		"victory_points",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdFwStatsGet := _CorporationsCorporationIdFwStatsGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdFwStatsGet)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdFwStatsGet(varCorporationsCorporationIdFwStatsGet)

	return err
}

type NullableCorporationsCorporationIdFwStatsGet struct {
	value *CorporationsCorporationIdFwStatsGet
	isSet bool
}

func (v NullableCorporationsCorporationIdFwStatsGet) Get() *CorporationsCorporationIdFwStatsGet {
	return v.value
}

func (v *NullableCorporationsCorporationIdFwStatsGet) Set(val *CorporationsCorporationIdFwStatsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdFwStatsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdFwStatsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdFwStatsGet(val *CorporationsCorporationIdFwStatsGet) *NullableCorporationsCorporationIdFwStatsGet {
	return &NullableCorporationsCorporationIdFwStatsGet{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdFwStatsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdFwStatsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


