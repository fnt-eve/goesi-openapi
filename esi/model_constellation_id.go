/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the ConstellationId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ConstellationId{}

// ConstellationId struct for ConstellationId
type ConstellationId struct {
	ConstellationId *int64 `json:"constellation_id,omitempty"`
}

// NewConstellationId instantiates a new ConstellationId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewConstellationId() *ConstellationId {
	this := ConstellationId{}
	return &this
}

// NewConstellationIdWithDefaults instantiates a new ConstellationId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewConstellationIdWithDefaults() *ConstellationId {
	this := ConstellationId{}
	return &this
}

// GetConstellationId returns the ConstellationId field value if set, zero value otherwise.
func (o *ConstellationId) GetConstellationId() int64 {
	if o == nil || IsNil(o.ConstellationId) {
		var ret int64
		return ret
	}
	return *o.ConstellationId
}

// GetConstellationIdOk returns a tuple with the ConstellationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ConstellationId) GetConstellationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ConstellationId) {
		return nil, false
	}
	return o.ConstellationId, true
}

// HasConstellationId returns a boolean if a field has been set.
func (o *ConstellationId) HasConstellationId() bool {
	if o != nil && !IsNil(o.ConstellationId) {
		return true
	}

	return false
}

// SetConstellationId gets a reference to the given int64 and assigns it to the ConstellationId field.
func (o *ConstellationId) SetConstellationId(v int64) {
	o.ConstellationId = &v
}

func (o ConstellationId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ConstellationId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ConstellationId) {
		toSerialize["constellation_id"] = o.ConstellationId
	}
	return toSerialize, nil
}

type NullableConstellationId struct {
	value *ConstellationId
	isSet bool
}

func (v NullableConstellationId) Get() *ConstellationId {
	return v.value
}

func (v *NullableConstellationId) Set(val *ConstellationId) {
	v.value = val
	v.isSet = true
}

func (v NullableConstellationId) IsSet() bool {
	return v.isSet
}

func (v *NullableConstellationId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableConstellationId(val *ConstellationId) *NullableConstellationId {
	return &NullableConstellationId{value: val, isSet: true}
}

func (v NullableConstellationId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableConstellationId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


