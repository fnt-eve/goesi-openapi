/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the InsurancePricesGetInnerLevelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InsurancePricesGetInnerLevelsInner{}

// InsurancePricesGetInnerLevelsInner level object
type InsurancePricesGetInnerLevelsInner struct {
	Cost float64 `json:"cost"`
	// Localized insurance level
	Name string `json:"name"`
	Payout float64 `json:"payout"`
}

type _InsurancePricesGetInnerLevelsInner InsurancePricesGetInnerLevelsInner

// NewInsurancePricesGetInnerLevelsInner instantiates a new InsurancePricesGetInnerLevelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInsurancePricesGetInnerLevelsInner(cost float64, name string, payout float64) *InsurancePricesGetInnerLevelsInner {
	this := InsurancePricesGetInnerLevelsInner{}
	this.Cost = cost
	this.Name = name
	this.Payout = payout
	return &this
}

// NewInsurancePricesGetInnerLevelsInnerWithDefaults instantiates a new InsurancePricesGetInnerLevelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInsurancePricesGetInnerLevelsInnerWithDefaults() *InsurancePricesGetInnerLevelsInner {
	this := InsurancePricesGetInnerLevelsInner{}
	return &this
}

// GetCost returns the Cost field value
func (o *InsurancePricesGetInnerLevelsInner) GetCost() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Cost
}

// GetCostOk returns a tuple with the Cost field value
// and a boolean to check if the value has been set.
func (o *InsurancePricesGetInnerLevelsInner) GetCostOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cost, true
}

// SetCost sets field value
func (o *InsurancePricesGetInnerLevelsInner) SetCost(v float64) {
	o.Cost = v
}

// GetName returns the Name field value
func (o *InsurancePricesGetInnerLevelsInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *InsurancePricesGetInnerLevelsInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *InsurancePricesGetInnerLevelsInner) SetName(v string) {
	o.Name = v
}

// GetPayout returns the Payout field value
func (o *InsurancePricesGetInnerLevelsInner) GetPayout() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Payout
}

// GetPayoutOk returns a tuple with the Payout field value
// and a boolean to check if the value has been set.
func (o *InsurancePricesGetInnerLevelsInner) GetPayoutOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Payout, true
}

// SetPayout sets field value
func (o *InsurancePricesGetInnerLevelsInner) SetPayout(v float64) {
	o.Payout = v
}

func (o InsurancePricesGetInnerLevelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InsurancePricesGetInnerLevelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cost"] = o.Cost
	toSerialize["name"] = o.Name
	toSerialize["payout"] = o.Payout
	return toSerialize, nil
}

func (o *InsurancePricesGetInnerLevelsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"cost",
		"name",
		"payout",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varInsurancePricesGetInnerLevelsInner := _InsurancePricesGetInnerLevelsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varInsurancePricesGetInnerLevelsInner)

	if err != nil {
		return err
	}

	*o = InsurancePricesGetInnerLevelsInner(varInsurancePricesGetInnerLevelsInner)

	return err
}

type NullableInsurancePricesGetInnerLevelsInner struct {
	value *InsurancePricesGetInnerLevelsInner
	isSet bool
}

func (v NullableInsurancePricesGetInnerLevelsInner) Get() *InsurancePricesGetInnerLevelsInner {
	return v.value
}

func (v *NullableInsurancePricesGetInnerLevelsInner) Set(val *InsurancePricesGetInnerLevelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableInsurancePricesGetInnerLevelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableInsurancePricesGetInnerLevelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInsurancePricesGetInnerLevelsInner(val *InsurancePricesGetInnerLevelsInner) *NullableInsurancePricesGetInnerLevelsInner {
	return &NullableInsurancePricesGetInnerLevelsInner{value: val, isSet: true}
}

func (v NullableInsurancePricesGetInnerLevelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInsurancePricesGetInnerLevelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


