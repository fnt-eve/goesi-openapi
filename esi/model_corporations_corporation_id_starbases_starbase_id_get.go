/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdStarbasesStarbaseIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdStarbasesStarbaseIdGet{}

// CorporationsCorporationIdStarbasesStarbaseIdGet struct for CorporationsCorporationIdStarbasesStarbaseIdGet
type CorporationsCorporationIdStarbasesStarbaseIdGet struct {
	AllowAllianceMembers bool `json:"allow_alliance_members"`
	AllowCorporationMembers bool `json:"allow_corporation_members"`
	// Who can anchor starbase (POS) and its structures
	Anchor string `json:"anchor"`
	AttackIfAtWar bool `json:"attack_if_at_war"`
	AttackIfOtherSecurityStatusDropping bool `json:"attack_if_other_security_status_dropping"`
	// Starbase (POS) will attack if target's security standing is lower than this value
	AttackSecurityStatusThreshold *float64 `json:"attack_security_status_threshold,omitempty"`
	// Starbase (POS) will attack if target's standing is lower than this value
	AttackStandingThreshold *float64 `json:"attack_standing_threshold,omitempty"`
	// Who can take fuel blocks out of the starbase (POS)'s fuel bay
	FuelBayTake string `json:"fuel_bay_take"`
	// Who can view the starbase (POS)'s fule bay. Characters either need to have required role or belong to the starbase (POS) owner's corporation or alliance, as described by the enum, all other access settings follows the same scheme
	FuelBayView string `json:"fuel_bay_view"`
	// Fuel blocks and other things that will be consumed when operating a starbase (POS)
	Fuels []CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner `json:"fuels,omitempty"`
	// Who can offline starbase (POS) and its structures
	Offline string `json:"offline"`
	// Who can online starbase (POS) and its structures
	Online string `json:"online"`
	// Who can unanchor starbase (POS) and its structures
	Unanchor string `json:"unanchor"`
	// True if the starbase (POS) is using alliance standings, otherwise using corporation's
	UseAllianceStandings bool `json:"use_alliance_standings"`
}

type _CorporationsCorporationIdStarbasesStarbaseIdGet CorporationsCorporationIdStarbasesStarbaseIdGet

// NewCorporationsCorporationIdStarbasesStarbaseIdGet instantiates a new CorporationsCorporationIdStarbasesStarbaseIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdStarbasesStarbaseIdGet(allowAllianceMembers bool, allowCorporationMembers bool, anchor string, attackIfAtWar bool, attackIfOtherSecurityStatusDropping bool, fuelBayTake string, fuelBayView string, offline string, online string, unanchor string, useAllianceStandings bool) *CorporationsCorporationIdStarbasesStarbaseIdGet {
	this := CorporationsCorporationIdStarbasesStarbaseIdGet{}
	this.AllowAllianceMembers = allowAllianceMembers
	this.AllowCorporationMembers = allowCorporationMembers
	this.Anchor = anchor
	this.AttackIfAtWar = attackIfAtWar
	this.AttackIfOtherSecurityStatusDropping = attackIfOtherSecurityStatusDropping
	this.FuelBayTake = fuelBayTake
	this.FuelBayView = fuelBayView
	this.Offline = offline
	this.Online = online
	this.Unanchor = unanchor
	this.UseAllianceStandings = useAllianceStandings
	return &this
}

// NewCorporationsCorporationIdStarbasesStarbaseIdGetWithDefaults instantiates a new CorporationsCorporationIdStarbasesStarbaseIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdStarbasesStarbaseIdGetWithDefaults() *CorporationsCorporationIdStarbasesStarbaseIdGet {
	this := CorporationsCorporationIdStarbasesStarbaseIdGet{}
	return &this
}

// GetAllowAllianceMembers returns the AllowAllianceMembers field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAllowAllianceMembers() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowAllianceMembers
}

// GetAllowAllianceMembersOk returns a tuple with the AllowAllianceMembers field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAllowAllianceMembersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowAllianceMembers, true
}

// SetAllowAllianceMembers sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAllowAllianceMembers(v bool) {
	o.AllowAllianceMembers = v
}

// GetAllowCorporationMembers returns the AllowCorporationMembers field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAllowCorporationMembers() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AllowCorporationMembers
}

// GetAllowCorporationMembersOk returns a tuple with the AllowCorporationMembers field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAllowCorporationMembersOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AllowCorporationMembers, true
}

// SetAllowCorporationMembers sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAllowCorporationMembers(v bool) {
	o.AllowCorporationMembers = v
}

// GetAnchor returns the Anchor field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAnchor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Anchor
}

// GetAnchorOk returns a tuple with the Anchor field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAnchorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Anchor, true
}

// SetAnchor sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAnchor(v string) {
	o.Anchor = v
}

// GetAttackIfAtWar returns the AttackIfAtWar field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackIfAtWar() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AttackIfAtWar
}

// GetAttackIfAtWarOk returns a tuple with the AttackIfAtWar field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackIfAtWarOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttackIfAtWar, true
}

// SetAttackIfAtWar sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAttackIfAtWar(v bool) {
	o.AttackIfAtWar = v
}

// GetAttackIfOtherSecurityStatusDropping returns the AttackIfOtherSecurityStatusDropping field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackIfOtherSecurityStatusDropping() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.AttackIfOtherSecurityStatusDropping
}

// GetAttackIfOtherSecurityStatusDroppingOk returns a tuple with the AttackIfOtherSecurityStatusDropping field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackIfOtherSecurityStatusDroppingOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AttackIfOtherSecurityStatusDropping, true
}

// SetAttackIfOtherSecurityStatusDropping sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAttackIfOtherSecurityStatusDropping(v bool) {
	o.AttackIfOtherSecurityStatusDropping = v
}

// GetAttackSecurityStatusThreshold returns the AttackSecurityStatusThreshold field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackSecurityStatusThreshold() float64 {
	if o == nil || IsNil(o.AttackSecurityStatusThreshold) {
		var ret float64
		return ret
	}
	return *o.AttackSecurityStatusThreshold
}

// GetAttackSecurityStatusThresholdOk returns a tuple with the AttackSecurityStatusThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackSecurityStatusThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.AttackSecurityStatusThreshold) {
		return nil, false
	}
	return o.AttackSecurityStatusThreshold, true
}

// HasAttackSecurityStatusThreshold returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) HasAttackSecurityStatusThreshold() bool {
	if o != nil && !IsNil(o.AttackSecurityStatusThreshold) {
		return true
	}

	return false
}

// SetAttackSecurityStatusThreshold gets a reference to the given float64 and assigns it to the AttackSecurityStatusThreshold field.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAttackSecurityStatusThreshold(v float64) {
	o.AttackSecurityStatusThreshold = &v
}

// GetAttackStandingThreshold returns the AttackStandingThreshold field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackStandingThreshold() float64 {
	if o == nil || IsNil(o.AttackStandingThreshold) {
		var ret float64
		return ret
	}
	return *o.AttackStandingThreshold
}

// GetAttackStandingThresholdOk returns a tuple with the AttackStandingThreshold field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetAttackStandingThresholdOk() (*float64, bool) {
	if o == nil || IsNil(o.AttackStandingThreshold) {
		return nil, false
	}
	return o.AttackStandingThreshold, true
}

// HasAttackStandingThreshold returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) HasAttackStandingThreshold() bool {
	if o != nil && !IsNil(o.AttackStandingThreshold) {
		return true
	}

	return false
}

// SetAttackStandingThreshold gets a reference to the given float64 and assigns it to the AttackStandingThreshold field.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetAttackStandingThreshold(v float64) {
	o.AttackStandingThreshold = &v
}

// GetFuelBayTake returns the FuelBayTake field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetFuelBayTake() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FuelBayTake
}

// GetFuelBayTakeOk returns a tuple with the FuelBayTake field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetFuelBayTakeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FuelBayTake, true
}

// SetFuelBayTake sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetFuelBayTake(v string) {
	o.FuelBayTake = v
}

// GetFuelBayView returns the FuelBayView field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetFuelBayView() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FuelBayView
}

// GetFuelBayViewOk returns a tuple with the FuelBayView field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetFuelBayViewOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FuelBayView, true
}

// SetFuelBayView sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetFuelBayView(v string) {
	o.FuelBayView = v
}

// GetFuels returns the Fuels field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetFuels() []CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner {
	if o == nil || IsNil(o.Fuels) {
		var ret []CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner
		return ret
	}
	return o.Fuels
}

// GetFuelsOk returns a tuple with the Fuels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetFuelsOk() ([]CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner, bool) {
	if o == nil || IsNil(o.Fuels) {
		return nil, false
	}
	return o.Fuels, true
}

// HasFuels returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) HasFuels() bool {
	if o != nil && !IsNil(o.Fuels) {
		return true
	}

	return false
}

// SetFuels gets a reference to the given []CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner and assigns it to the Fuels field.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetFuels(v []CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) {
	o.Fuels = v
}

// GetOffline returns the Offline field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetOffline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Offline
}

// GetOfflineOk returns a tuple with the Offline field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetOfflineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Offline, true
}

// SetOffline sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetOffline(v string) {
	o.Offline = v
}

// GetOnline returns the Online field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetOnline() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Online
}

// GetOnlineOk returns a tuple with the Online field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetOnlineOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Online, true
}

// SetOnline sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetOnline(v string) {
	o.Online = v
}

// GetUnanchor returns the Unanchor field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetUnanchor() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Unanchor
}

// GetUnanchorOk returns a tuple with the Unanchor field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetUnanchorOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Unanchor, true
}

// SetUnanchor sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetUnanchor(v string) {
	o.Unanchor = v
}

// GetUseAllianceStandings returns the UseAllianceStandings field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetUseAllianceStandings() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.UseAllianceStandings
}

// GetUseAllianceStandingsOk returns a tuple with the UseAllianceStandings field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) GetUseAllianceStandingsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UseAllianceStandings, true
}

// SetUseAllianceStandings sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) SetUseAllianceStandings(v bool) {
	o.UseAllianceStandings = v
}

func (o CorporationsCorporationIdStarbasesStarbaseIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdStarbasesStarbaseIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["allow_alliance_members"] = o.AllowAllianceMembers
	toSerialize["allow_corporation_members"] = o.AllowCorporationMembers
	toSerialize["anchor"] = o.Anchor
	toSerialize["attack_if_at_war"] = o.AttackIfAtWar
	toSerialize["attack_if_other_security_status_dropping"] = o.AttackIfOtherSecurityStatusDropping
	if !IsNil(o.AttackSecurityStatusThreshold) {
		toSerialize["attack_security_status_threshold"] = o.AttackSecurityStatusThreshold
	}
	if !IsNil(o.AttackStandingThreshold) {
		toSerialize["attack_standing_threshold"] = o.AttackStandingThreshold
	}
	toSerialize["fuel_bay_take"] = o.FuelBayTake
	toSerialize["fuel_bay_view"] = o.FuelBayView
	if !IsNil(o.Fuels) {
		toSerialize["fuels"] = o.Fuels
	}
	toSerialize["offline"] = o.Offline
	toSerialize["online"] = o.Online
	toSerialize["unanchor"] = o.Unanchor
	toSerialize["use_alliance_standings"] = o.UseAllianceStandings
	return toSerialize, nil
}

func (o *CorporationsCorporationIdStarbasesStarbaseIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"allow_alliance_members",
		"allow_corporation_members",
		"anchor",
		"attack_if_at_war",
		"attack_if_other_security_status_dropping",
		"fuel_bay_take",
		"fuel_bay_view",
		"offline",
		"online",
		"unanchor",
		"use_alliance_standings",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdStarbasesStarbaseIdGet := _CorporationsCorporationIdStarbasesStarbaseIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdStarbasesStarbaseIdGet)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdStarbasesStarbaseIdGet(varCorporationsCorporationIdStarbasesStarbaseIdGet)

	return err
}

type NullableCorporationsCorporationIdStarbasesStarbaseIdGet struct {
	value *CorporationsCorporationIdStarbasesStarbaseIdGet
	isSet bool
}

func (v NullableCorporationsCorporationIdStarbasesStarbaseIdGet) Get() *CorporationsCorporationIdStarbasesStarbaseIdGet {
	return v.value
}

func (v *NullableCorporationsCorporationIdStarbasesStarbaseIdGet) Set(val *CorporationsCorporationIdStarbasesStarbaseIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdStarbasesStarbaseIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdStarbasesStarbaseIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdStarbasesStarbaseIdGet(val *CorporationsCorporationIdStarbasesStarbaseIdGet) *NullableCorporationsCorporationIdStarbasesStarbaseIdGet {
	return &NullableCorporationsCorporationIdStarbasesStarbaseIdGet{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdStarbasesStarbaseIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdStarbasesStarbaseIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


