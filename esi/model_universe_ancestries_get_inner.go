/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseAncestriesGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseAncestriesGetInner{}

// UniverseAncestriesGetInner struct for UniverseAncestriesGetInner
type UniverseAncestriesGetInner struct {
	// The bloodline associated with this ancestry
	BloodlineId int64 `json:"bloodline_id"`
	Description string `json:"description"`
	IconId *int64 `json:"icon_id,omitempty"`
	Id int64 `json:"id"`
	Name string `json:"name"`
	ShortDescription *string `json:"short_description,omitempty"`
}

type _UniverseAncestriesGetInner UniverseAncestriesGetInner

// NewUniverseAncestriesGetInner instantiates a new UniverseAncestriesGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseAncestriesGetInner(bloodlineId int64, description string, id int64, name string) *UniverseAncestriesGetInner {
	this := UniverseAncestriesGetInner{}
	this.BloodlineId = bloodlineId
	this.Description = description
	this.Id = id
	this.Name = name
	return &this
}

// NewUniverseAncestriesGetInnerWithDefaults instantiates a new UniverseAncestriesGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseAncestriesGetInnerWithDefaults() *UniverseAncestriesGetInner {
	this := UniverseAncestriesGetInner{}
	return &this
}

// GetBloodlineId returns the BloodlineId field value
func (o *UniverseAncestriesGetInner) GetBloodlineId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.BloodlineId
}

// GetBloodlineIdOk returns a tuple with the BloodlineId field value
// and a boolean to check if the value has been set.
func (o *UniverseAncestriesGetInner) GetBloodlineIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.BloodlineId, true
}

// SetBloodlineId sets field value
func (o *UniverseAncestriesGetInner) SetBloodlineId(v int64) {
	o.BloodlineId = v
}

// GetDescription returns the Description field value
func (o *UniverseAncestriesGetInner) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UniverseAncestriesGetInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UniverseAncestriesGetInner) SetDescription(v string) {
	o.Description = v
}

// GetIconId returns the IconId field value if set, zero value otherwise.
func (o *UniverseAncestriesGetInner) GetIconId() int64 {
	if o == nil || IsNil(o.IconId) {
		var ret int64
		return ret
	}
	return *o.IconId
}

// GetIconIdOk returns a tuple with the IconId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseAncestriesGetInner) GetIconIdOk() (*int64, bool) {
	if o == nil || IsNil(o.IconId) {
		return nil, false
	}
	return o.IconId, true
}

// HasIconId returns a boolean if a field has been set.
func (o *UniverseAncestriesGetInner) HasIconId() bool {
	if o != nil && !IsNil(o.IconId) {
		return true
	}

	return false
}

// SetIconId gets a reference to the given int64 and assigns it to the IconId field.
func (o *UniverseAncestriesGetInner) SetIconId(v int64) {
	o.IconId = &v
}

// GetId returns the Id field value
func (o *UniverseAncestriesGetInner) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *UniverseAncestriesGetInner) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *UniverseAncestriesGetInner) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *UniverseAncestriesGetInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniverseAncestriesGetInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniverseAncestriesGetInner) SetName(v string) {
	o.Name = v
}

// GetShortDescription returns the ShortDescription field value if set, zero value otherwise.
func (o *UniverseAncestriesGetInner) GetShortDescription() string {
	if o == nil || IsNil(o.ShortDescription) {
		var ret string
		return ret
	}
	return *o.ShortDescription
}

// GetShortDescriptionOk returns a tuple with the ShortDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseAncestriesGetInner) GetShortDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.ShortDescription) {
		return nil, false
	}
	return o.ShortDescription, true
}

// HasShortDescription returns a boolean if a field has been set.
func (o *UniverseAncestriesGetInner) HasShortDescription() bool {
	if o != nil && !IsNil(o.ShortDescription) {
		return true
	}

	return false
}

// SetShortDescription gets a reference to the given string and assigns it to the ShortDescription field.
func (o *UniverseAncestriesGetInner) SetShortDescription(v string) {
	o.ShortDescription = &v
}

func (o UniverseAncestriesGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseAncestriesGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["bloodline_id"] = o.BloodlineId
	toSerialize["description"] = o.Description
	if !IsNil(o.IconId) {
		toSerialize["icon_id"] = o.IconId
	}
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	if !IsNil(o.ShortDescription) {
		toSerialize["short_description"] = o.ShortDescription
	}
	return toSerialize, nil
}

func (o *UniverseAncestriesGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"bloodline_id",
		"description",
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseAncestriesGetInner := _UniverseAncestriesGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseAncestriesGetInner)

	if err != nil {
		return err
	}

	*o = UniverseAncestriesGetInner(varUniverseAncestriesGetInner)

	return err
}

type NullableUniverseAncestriesGetInner struct {
	value *UniverseAncestriesGetInner
	isSet bool
}

func (v NullableUniverseAncestriesGetInner) Get() *UniverseAncestriesGetInner {
	return v.value
}

func (v *NullableUniverseAncestriesGetInner) Set(val *UniverseAncestriesGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseAncestriesGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseAncestriesGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseAncestriesGetInner(val *UniverseAncestriesGetInner) *NullableUniverseAncestriesGetInner {
	return &NullableUniverseAncestriesGetInner{value: val, isSet: true}
}

func (v NullableUniverseAncestriesGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseAncestriesGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


