/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the FactionId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FactionId{}

// FactionId struct for FactionId
type FactionId struct {
	FactionId *int64 `json:"faction_id,omitempty"`
}

// NewFactionId instantiates a new FactionId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFactionId() *FactionId {
	this := FactionId{}
	return &this
}

// NewFactionIdWithDefaults instantiates a new FactionId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFactionIdWithDefaults() *FactionId {
	this := FactionId{}
	return &this
}

// GetFactionId returns the FactionId field value if set, zero value otherwise.
func (o *FactionId) GetFactionId() int64 {
	if o == nil || IsNil(o.FactionId) {
		var ret int64
		return ret
	}
	return *o.FactionId
}

// GetFactionIdOk returns a tuple with the FactionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FactionId) GetFactionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.FactionId) {
		return nil, false
	}
	return o.FactionId, true
}

// HasFactionId returns a boolean if a field has been set.
func (o *FactionId) HasFactionId() bool {
	if o != nil && !IsNil(o.FactionId) {
		return true
	}

	return false
}

// SetFactionId gets a reference to the given int64 and assigns it to the FactionId field.
func (o *FactionId) SetFactionId(v int64) {
	o.FactionId = &v
}

func (o FactionId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FactionId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FactionId) {
		toSerialize["faction_id"] = o.FactionId
	}
	return toSerialize, nil
}

type NullableFactionId struct {
	value *FactionId
	isSet bool
}

func (v NullableFactionId) Get() *FactionId {
	return v.value
}

func (v *NullableFactionId) Set(val *FactionId) {
	v.value = val
	v.isSet = true
}

func (v NullableFactionId) IsSet() bool {
	return v.isSet
}

func (v *NullableFactionId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFactionId(val *FactionId) *NullableFactionId {
	return &NullableFactionId{value: val, isSet: true}
}

func (v NullableFactionId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFactionId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


