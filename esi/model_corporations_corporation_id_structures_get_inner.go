/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdStructuresGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdStructuresGetInner{}

// CorporationsCorporationIdStructuresGetInner struct for CorporationsCorporationIdStructuresGetInner
type CorporationsCorporationIdStructuresGetInner struct {
	// ID of the corporation that owns the structure
	CorporationId int64 `json:"corporation_id"`
	// Date on which the structure will run out of fuel
	FuelExpires *time.Time `json:"fuel_expires,omitempty"`
	// The structure name
	Name *string `json:"name,omitempty"`
	// The date and time when the structure's newly requested reinforcement times (e.g. next_reinforce_hour and next_reinforce_day) will take effect
	NextReinforceApply *time.Time `json:"next_reinforce_apply,omitempty"`
	// The requested change to reinforce_hour that will take effect at the time shown by next_reinforce_apply
	NextReinforceHour *int64 `json:"next_reinforce_hour,omitempty"`
	// The id of the ACL profile for this citadel
	ProfileId int64 `json:"profile_id"`
	// The hour of day that determines the four hour window when the structure will randomly exit its reinforcement periods and become vulnerable to attack against its armor and/or hull. The structure will become vulnerable at a random time that is +/- 2 hours centered on the value of this property
	ReinforceHour *int64 `json:"reinforce_hour,omitempty"`
	// Contains a list of service upgrades, and their state
	Services []CorporationsCorporationIdStructuresGetInnerServicesInner `json:"services,omitempty"`
	State string `json:"state"`
	// Date at which the structure will move to it's next state
	StateTimerEnd *time.Time `json:"state_timer_end,omitempty"`
	// Date at which the structure entered it's current state
	StateTimerStart *time.Time `json:"state_timer_start,omitempty"`
	// The Item ID of the structure
	StructureId int64 `json:"structure_id"`
	// The solar system the structure is in
	SystemId int64 `json:"system_id"`
	// The type id of the structure
	TypeId int64 `json:"type_id"`
	// Date at which the structure will unanchor
	UnanchorsAt *time.Time `json:"unanchors_at,omitempty"`
}

type _CorporationsCorporationIdStructuresGetInner CorporationsCorporationIdStructuresGetInner

// NewCorporationsCorporationIdStructuresGetInner instantiates a new CorporationsCorporationIdStructuresGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdStructuresGetInner(corporationId int64, profileId int64, state string, structureId int64, systemId int64, typeId int64) *CorporationsCorporationIdStructuresGetInner {
	this := CorporationsCorporationIdStructuresGetInner{}
	this.CorporationId = corporationId
	this.ProfileId = profileId
	this.State = state
	this.StructureId = structureId
	this.SystemId = systemId
	this.TypeId = typeId
	return &this
}

// NewCorporationsCorporationIdStructuresGetInnerWithDefaults instantiates a new CorporationsCorporationIdStructuresGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdStructuresGetInnerWithDefaults() *CorporationsCorporationIdStructuresGetInner {
	this := CorporationsCorporationIdStructuresGetInner{}
	return &this
}

// GetCorporationId returns the CorporationId field value
func (o *CorporationsCorporationIdStructuresGetInner) GetCorporationId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.CorporationId
}

// GetCorporationIdOk returns a tuple with the CorporationId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetCorporationIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CorporationId, true
}

// SetCorporationId sets field value
func (o *CorporationsCorporationIdStructuresGetInner) SetCorporationId(v int64) {
	o.CorporationId = v
}

// GetFuelExpires returns the FuelExpires field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetFuelExpires() time.Time {
	if o == nil || IsNil(o.FuelExpires) {
		var ret time.Time
		return ret
	}
	return *o.FuelExpires
}

// GetFuelExpiresOk returns a tuple with the FuelExpires field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetFuelExpiresOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FuelExpires) {
		return nil, false
	}
	return o.FuelExpires, true
}

// HasFuelExpires returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasFuelExpires() bool {
	if o != nil && !IsNil(o.FuelExpires) {
		return true
	}

	return false
}

// SetFuelExpires gets a reference to the given time.Time and assigns it to the FuelExpires field.
func (o *CorporationsCorporationIdStructuresGetInner) SetFuelExpires(v time.Time) {
	o.FuelExpires = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CorporationsCorporationIdStructuresGetInner) SetName(v string) {
	o.Name = &v
}

// GetNextReinforceApply returns the NextReinforceApply field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetNextReinforceApply() time.Time {
	if o == nil || IsNil(o.NextReinforceApply) {
		var ret time.Time
		return ret
	}
	return *o.NextReinforceApply
}

// GetNextReinforceApplyOk returns a tuple with the NextReinforceApply field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetNextReinforceApplyOk() (*time.Time, bool) {
	if o == nil || IsNil(o.NextReinforceApply) {
		return nil, false
	}
	return o.NextReinforceApply, true
}

// HasNextReinforceApply returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasNextReinforceApply() bool {
	if o != nil && !IsNil(o.NextReinforceApply) {
		return true
	}

	return false
}

// SetNextReinforceApply gets a reference to the given time.Time and assigns it to the NextReinforceApply field.
func (o *CorporationsCorporationIdStructuresGetInner) SetNextReinforceApply(v time.Time) {
	o.NextReinforceApply = &v
}

// GetNextReinforceHour returns the NextReinforceHour field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetNextReinforceHour() int64 {
	if o == nil || IsNil(o.NextReinforceHour) {
		var ret int64
		return ret
	}
	return *o.NextReinforceHour
}

// GetNextReinforceHourOk returns a tuple with the NextReinforceHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetNextReinforceHourOk() (*int64, bool) {
	if o == nil || IsNil(o.NextReinforceHour) {
		return nil, false
	}
	return o.NextReinforceHour, true
}

// HasNextReinforceHour returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasNextReinforceHour() bool {
	if o != nil && !IsNil(o.NextReinforceHour) {
		return true
	}

	return false
}

// SetNextReinforceHour gets a reference to the given int64 and assigns it to the NextReinforceHour field.
func (o *CorporationsCorporationIdStructuresGetInner) SetNextReinforceHour(v int64) {
	o.NextReinforceHour = &v
}

// GetProfileId returns the ProfileId field value
func (o *CorporationsCorporationIdStructuresGetInner) GetProfileId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetProfileIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ProfileId, true
}

// SetProfileId sets field value
func (o *CorporationsCorporationIdStructuresGetInner) SetProfileId(v int64) {
	o.ProfileId = v
}

// GetReinforceHour returns the ReinforceHour field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetReinforceHour() int64 {
	if o == nil || IsNil(o.ReinforceHour) {
		var ret int64
		return ret
	}
	return *o.ReinforceHour
}

// GetReinforceHourOk returns a tuple with the ReinforceHour field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetReinforceHourOk() (*int64, bool) {
	if o == nil || IsNil(o.ReinforceHour) {
		return nil, false
	}
	return o.ReinforceHour, true
}

// HasReinforceHour returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasReinforceHour() bool {
	if o != nil && !IsNil(o.ReinforceHour) {
		return true
	}

	return false
}

// SetReinforceHour gets a reference to the given int64 and assigns it to the ReinforceHour field.
func (o *CorporationsCorporationIdStructuresGetInner) SetReinforceHour(v int64) {
	o.ReinforceHour = &v
}

// GetServices returns the Services field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetServices() []CorporationsCorporationIdStructuresGetInnerServicesInner {
	if o == nil || IsNil(o.Services) {
		var ret []CorporationsCorporationIdStructuresGetInnerServicesInner
		return ret
	}
	return o.Services
}

// GetServicesOk returns a tuple with the Services field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetServicesOk() ([]CorporationsCorporationIdStructuresGetInnerServicesInner, bool) {
	if o == nil || IsNil(o.Services) {
		return nil, false
	}
	return o.Services, true
}

// HasServices returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasServices() bool {
	if o != nil && !IsNil(o.Services) {
		return true
	}

	return false
}

// SetServices gets a reference to the given []CorporationsCorporationIdStructuresGetInnerServicesInner and assigns it to the Services field.
func (o *CorporationsCorporationIdStructuresGetInner) SetServices(v []CorporationsCorporationIdStructuresGetInnerServicesInner) {
	o.Services = v
}

// GetState returns the State field value
func (o *CorporationsCorporationIdStructuresGetInner) GetState() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.State
}

// GetStateOk returns a tuple with the State field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetStateOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.State, true
}

// SetState sets field value
func (o *CorporationsCorporationIdStructuresGetInner) SetState(v string) {
	o.State = v
}

// GetStateTimerEnd returns the StateTimerEnd field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetStateTimerEnd() time.Time {
	if o == nil || IsNil(o.StateTimerEnd) {
		var ret time.Time
		return ret
	}
	return *o.StateTimerEnd
}

// GetStateTimerEndOk returns a tuple with the StateTimerEnd field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetStateTimerEndOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StateTimerEnd) {
		return nil, false
	}
	return o.StateTimerEnd, true
}

// HasStateTimerEnd returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasStateTimerEnd() bool {
	if o != nil && !IsNil(o.StateTimerEnd) {
		return true
	}

	return false
}

// SetStateTimerEnd gets a reference to the given time.Time and assigns it to the StateTimerEnd field.
func (o *CorporationsCorporationIdStructuresGetInner) SetStateTimerEnd(v time.Time) {
	o.StateTimerEnd = &v
}

// GetStateTimerStart returns the StateTimerStart field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetStateTimerStart() time.Time {
	if o == nil || IsNil(o.StateTimerStart) {
		var ret time.Time
		return ret
	}
	return *o.StateTimerStart
}

// GetStateTimerStartOk returns a tuple with the StateTimerStart field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetStateTimerStartOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StateTimerStart) {
		return nil, false
	}
	return o.StateTimerStart, true
}

// HasStateTimerStart returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasStateTimerStart() bool {
	if o != nil && !IsNil(o.StateTimerStart) {
		return true
	}

	return false
}

// SetStateTimerStart gets a reference to the given time.Time and assigns it to the StateTimerStart field.
func (o *CorporationsCorporationIdStructuresGetInner) SetStateTimerStart(v time.Time) {
	o.StateTimerStart = &v
}

// GetStructureId returns the StructureId field value
func (o *CorporationsCorporationIdStructuresGetInner) GetStructureId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StructureId
}

// GetStructureIdOk returns a tuple with the StructureId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetStructureIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StructureId, true
}

// SetStructureId sets field value
func (o *CorporationsCorporationIdStructuresGetInner) SetStructureId(v int64) {
	o.StructureId = v
}

// GetSystemId returns the SystemId field value
func (o *CorporationsCorporationIdStructuresGetInner) GetSystemId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SystemId
}

// GetSystemIdOk returns a tuple with the SystemId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetSystemIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SystemId, true
}

// SetSystemId sets field value
func (o *CorporationsCorporationIdStructuresGetInner) SetSystemId(v int64) {
	o.SystemId = v
}

// GetTypeId returns the TypeId field value
func (o *CorporationsCorporationIdStructuresGetInner) GetTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *CorporationsCorporationIdStructuresGetInner) SetTypeId(v int64) {
	o.TypeId = v
}

// GetUnanchorsAt returns the UnanchorsAt field value if set, zero value otherwise.
func (o *CorporationsCorporationIdStructuresGetInner) GetUnanchorsAt() time.Time {
	if o == nil || IsNil(o.UnanchorsAt) {
		var ret time.Time
		return ret
	}
	return *o.UnanchorsAt
}

// GetUnanchorsAtOk returns a tuple with the UnanchorsAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStructuresGetInner) GetUnanchorsAtOk() (*time.Time, bool) {
	if o == nil || IsNil(o.UnanchorsAt) {
		return nil, false
	}
	return o.UnanchorsAt, true
}

// HasUnanchorsAt returns a boolean if a field has been set.
func (o *CorporationsCorporationIdStructuresGetInner) HasUnanchorsAt() bool {
	if o != nil && !IsNil(o.UnanchorsAt) {
		return true
	}

	return false
}

// SetUnanchorsAt gets a reference to the given time.Time and assigns it to the UnanchorsAt field.
func (o *CorporationsCorporationIdStructuresGetInner) SetUnanchorsAt(v time.Time) {
	o.UnanchorsAt = &v
}

func (o CorporationsCorporationIdStructuresGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdStructuresGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["corporation_id"] = o.CorporationId
	if !IsNil(o.FuelExpires) {
		toSerialize["fuel_expires"] = o.FuelExpires
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.NextReinforceApply) {
		toSerialize["next_reinforce_apply"] = o.NextReinforceApply
	}
	if !IsNil(o.NextReinforceHour) {
		toSerialize["next_reinforce_hour"] = o.NextReinforceHour
	}
	toSerialize["profile_id"] = o.ProfileId
	if !IsNil(o.ReinforceHour) {
		toSerialize["reinforce_hour"] = o.ReinforceHour
	}
	if !IsNil(o.Services) {
		toSerialize["services"] = o.Services
	}
	toSerialize["state"] = o.State
	if !IsNil(o.StateTimerEnd) {
		toSerialize["state_timer_end"] = o.StateTimerEnd
	}
	if !IsNil(o.StateTimerStart) {
		toSerialize["state_timer_start"] = o.StateTimerStart
	}
	toSerialize["structure_id"] = o.StructureId
	toSerialize["system_id"] = o.SystemId
	toSerialize["type_id"] = o.TypeId
	if !IsNil(o.UnanchorsAt) {
		toSerialize["unanchors_at"] = o.UnanchorsAt
	}
	return toSerialize, nil
}

func (o *CorporationsCorporationIdStructuresGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"corporation_id",
		"profile_id",
		"state",
		"structure_id",
		"system_id",
		"type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdStructuresGetInner := _CorporationsCorporationIdStructuresGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdStructuresGetInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdStructuresGetInner(varCorporationsCorporationIdStructuresGetInner)

	return err
}

type NullableCorporationsCorporationIdStructuresGetInner struct {
	value *CorporationsCorporationIdStructuresGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdStructuresGetInner) Get() *CorporationsCorporationIdStructuresGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdStructuresGetInner) Set(val *CorporationsCorporationIdStructuresGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdStructuresGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdStructuresGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdStructuresGetInner(val *CorporationsCorporationIdStructuresGetInner) *NullableCorporationsCorporationIdStructuresGetInner {
	return &NullableCorporationsCorporationIdStructuresGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdStructuresGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdStructuresGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


