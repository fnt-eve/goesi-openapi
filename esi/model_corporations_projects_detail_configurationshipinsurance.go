/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsDetailConfigurationshipinsurance type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailConfigurationshipinsurance{}

// CorporationsProjectsDetailConfigurationshipinsurance struct for CorporationsProjectsDetailConfigurationshipinsurance
type CorporationsProjectsDetailConfigurationshipinsurance struct {
	// Conflict type
	ConflictType string `json:"conflict_type"`
	// Identity of killer
	Identities []CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner `json:"identities,omitempty"`
	// Location of lost ship
	Locations []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner `json:"locations,omitempty"`
	// Reimburse implants
	ReimburseImplants bool `json:"reimburse_implants"`
	// Ship-type of lost ship
	Ships []CorporationsProjectsDetailConfigurationdamageshipShipsInner `json:"ships,omitempty"`
}

type _CorporationsProjectsDetailConfigurationshipinsurance CorporationsProjectsDetailConfigurationshipinsurance

// NewCorporationsProjectsDetailConfigurationshipinsurance instantiates a new CorporationsProjectsDetailConfigurationshipinsurance object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailConfigurationshipinsurance(conflictType string, reimburseImplants bool) *CorporationsProjectsDetailConfigurationshipinsurance {
	this := CorporationsProjectsDetailConfigurationshipinsurance{}
	this.ConflictType = conflictType
	this.ReimburseImplants = reimburseImplants
	return &this
}

// NewCorporationsProjectsDetailConfigurationshipinsuranceWithDefaults instantiates a new CorporationsProjectsDetailConfigurationshipinsurance object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailConfigurationshipinsuranceWithDefaults() *CorporationsProjectsDetailConfigurationshipinsurance {
	this := CorporationsProjectsDetailConfigurationshipinsurance{}
	return &this
}

// GetConflictType returns the ConflictType field value
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetConflictType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConflictType
}

// GetConflictTypeOk returns a tuple with the ConflictType field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetConflictTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConflictType, true
}

// SetConflictType sets field value
func (o *CorporationsProjectsDetailConfigurationshipinsurance) SetConflictType(v string) {
	o.ConflictType = v
}

// GetIdentities returns the Identities field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetIdentities() []CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner {
	if o == nil || IsNil(o.Identities) {
		var ret []CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner
		return ret
	}
	return o.Identities
}

// GetIdentitiesOk returns a tuple with the Identities field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetIdentitiesOk() ([]CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner, bool) {
	if o == nil || IsNil(o.Identities) {
		return nil, false
	}
	return o.Identities, true
}

// HasIdentities returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) HasIdentities() bool {
	if o != nil && !IsNil(o.Identities) {
		return true
	}

	return false
}

// SetIdentities gets a reference to the given []CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner and assigns it to the Identities field.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) SetIdentities(v []CorporationsProjectsDetailConfigurationdamageshipIdentitiesInner) {
	o.Identities = v
}

// GetLocations returns the Locations field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetLocations() []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner {
	if o == nil || IsNil(o.Locations) {
		var ret []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner
		return ret
	}
	return o.Locations
}

// GetLocationsOk returns a tuple with the Locations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetLocationsOk() ([]CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner, bool) {
	if o == nil || IsNil(o.Locations) {
		return nil, false
	}
	return o.Locations, true
}

// HasLocations returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) HasLocations() bool {
	if o != nil && !IsNil(o.Locations) {
		return true
	}

	return false
}

// SetLocations gets a reference to the given []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner and assigns it to the Locations field.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) SetLocations(v []CorporationsProjectsDetailConfigurationcapturefwcomplexLocationsInner) {
	o.Locations = v
}

// GetReimburseImplants returns the ReimburseImplants field value
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetReimburseImplants() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.ReimburseImplants
}

// GetReimburseImplantsOk returns a tuple with the ReimburseImplants field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetReimburseImplantsOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReimburseImplants, true
}

// SetReimburseImplants sets field value
func (o *CorporationsProjectsDetailConfigurationshipinsurance) SetReimburseImplants(v bool) {
	o.ReimburseImplants = v
}

// GetShips returns the Ships field value if set, zero value otherwise.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetShips() []CorporationsProjectsDetailConfigurationdamageshipShipsInner {
	if o == nil || IsNil(o.Ships) {
		var ret []CorporationsProjectsDetailConfigurationdamageshipShipsInner
		return ret
	}
	return o.Ships
}

// GetShipsOk returns a tuple with the Ships field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) GetShipsOk() ([]CorporationsProjectsDetailConfigurationdamageshipShipsInner, bool) {
	if o == nil || IsNil(o.Ships) {
		return nil, false
	}
	return o.Ships, true
}

// HasShips returns a boolean if a field has been set.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) HasShips() bool {
	if o != nil && !IsNil(o.Ships) {
		return true
	}

	return false
}

// SetShips gets a reference to the given []CorporationsProjectsDetailConfigurationdamageshipShipsInner and assigns it to the Ships field.
func (o *CorporationsProjectsDetailConfigurationshipinsurance) SetShips(v []CorporationsProjectsDetailConfigurationdamageshipShipsInner) {
	o.Ships = v
}

func (o CorporationsProjectsDetailConfigurationshipinsurance) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailConfigurationshipinsurance) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["conflict_type"] = o.ConflictType
	if !IsNil(o.Identities) {
		toSerialize["identities"] = o.Identities
	}
	if !IsNil(o.Locations) {
		toSerialize["locations"] = o.Locations
	}
	toSerialize["reimburse_implants"] = o.ReimburseImplants
	if !IsNil(o.Ships) {
		toSerialize["ships"] = o.Ships
	}
	return toSerialize, nil
}

func (o *CorporationsProjectsDetailConfigurationshipinsurance) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"conflict_type",
		"reimburse_implants",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsDetailConfigurationshipinsurance := _CorporationsProjectsDetailConfigurationshipinsurance{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsDetailConfigurationshipinsurance)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsDetailConfigurationshipinsurance(varCorporationsProjectsDetailConfigurationshipinsurance)

	return err
}

type NullableCorporationsProjectsDetailConfigurationshipinsurance struct {
	value *CorporationsProjectsDetailConfigurationshipinsurance
	isSet bool
}

func (v NullableCorporationsProjectsDetailConfigurationshipinsurance) Get() *CorporationsProjectsDetailConfigurationshipinsurance {
	return v.value
}

func (v *NullableCorporationsProjectsDetailConfigurationshipinsurance) Set(val *CorporationsProjectsDetailConfigurationshipinsurance) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailConfigurationshipinsurance) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailConfigurationshipinsurance) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailConfigurationshipinsurance(val *CorporationsProjectsDetailConfigurationshipinsurance) *NullableCorporationsProjectsDetailConfigurationshipinsurance {
	return &NullableCorporationsProjectsDetailConfigurationshipinsurance{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailConfigurationshipinsurance) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailConfigurationshipinsurance) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


