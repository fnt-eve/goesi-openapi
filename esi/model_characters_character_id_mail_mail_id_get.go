/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
)

// checks if the CharactersCharacterIdMailMailIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdMailMailIdGet{}

// CharactersCharacterIdMailMailIdGet struct for CharactersCharacterIdMailMailIdGet
type CharactersCharacterIdMailMailIdGet struct {
	// Mail's body
	Body *string `json:"body,omitempty"`
	// From whom the mail was sent
	From *int64 `json:"from,omitempty"`
	// Labels attached to the mail
	Labels []int64 `json:"labels,omitempty"`
	// Whether the mail is flagged as read
	Read *bool `json:"read,omitempty"`
	// Recipients of the mail
	Recipients []PostCharactersCharacterIdMailRequestRecipientsInner `json:"recipients,omitempty"`
	// Mail subject
	Subject *string `json:"subject,omitempty"`
	// When the mail was sent
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewCharactersCharacterIdMailMailIdGet instantiates a new CharactersCharacterIdMailMailIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdMailMailIdGet() *CharactersCharacterIdMailMailIdGet {
	this := CharactersCharacterIdMailMailIdGet{}
	return &this
}

// NewCharactersCharacterIdMailMailIdGetWithDefaults instantiates a new CharactersCharacterIdMailMailIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdMailMailIdGetWithDefaults() *CharactersCharacterIdMailMailIdGet {
	this := CharactersCharacterIdMailMailIdGet{}
	return &this
}

// GetBody returns the Body field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetBody() string {
	if o == nil || IsNil(o.Body) {
		var ret string
		return ret
	}
	return *o.Body
}

// GetBodyOk returns a tuple with the Body field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetBodyOk() (*string, bool) {
	if o == nil || IsNil(o.Body) {
		return nil, false
	}
	return o.Body, true
}

// HasBody returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasBody() bool {
	if o != nil && !IsNil(o.Body) {
		return true
	}

	return false
}

// SetBody gets a reference to the given string and assigns it to the Body field.
func (o *CharactersCharacterIdMailMailIdGet) SetBody(v string) {
	o.Body = &v
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetFrom() int64 {
	if o == nil || IsNil(o.From) {
		var ret int64
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetFromOk() (*int64, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int64 and assigns it to the From field.
func (o *CharactersCharacterIdMailMailIdGet) SetFrom(v int64) {
	o.From = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetLabels() []int64 {
	if o == nil || IsNil(o.Labels) {
		var ret []int64
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetLabelsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []int64 and assigns it to the Labels field.
func (o *CharactersCharacterIdMailMailIdGet) SetLabels(v []int64) {
	o.Labels = v
}

// GetRead returns the Read field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetRead() bool {
	if o == nil || IsNil(o.Read) {
		var ret bool
		return ret
	}
	return *o.Read
}

// GetReadOk returns a tuple with the Read field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetReadOk() (*bool, bool) {
	if o == nil || IsNil(o.Read) {
		return nil, false
	}
	return o.Read, true
}

// HasRead returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasRead() bool {
	if o != nil && !IsNil(o.Read) {
		return true
	}

	return false
}

// SetRead gets a reference to the given bool and assigns it to the Read field.
func (o *CharactersCharacterIdMailMailIdGet) SetRead(v bool) {
	o.Read = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetRecipients() []PostCharactersCharacterIdMailRequestRecipientsInner {
	if o == nil || IsNil(o.Recipients) {
		var ret []PostCharactersCharacterIdMailRequestRecipientsInner
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetRecipientsOk() ([]PostCharactersCharacterIdMailRequestRecipientsInner, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []PostCharactersCharacterIdMailRequestRecipientsInner and assigns it to the Recipients field.
func (o *CharactersCharacterIdMailMailIdGet) SetRecipients(v []PostCharactersCharacterIdMailRequestRecipientsInner) {
	o.Recipients = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CharactersCharacterIdMailMailIdGet) SetSubject(v string) {
	o.Subject = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailMailIdGet) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailMailIdGet) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailMailIdGet) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *CharactersCharacterIdMailMailIdGet) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o CharactersCharacterIdMailMailIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdMailMailIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Body) {
		toSerialize["body"] = o.Body
	}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.Read) {
		toSerialize["read"] = o.Read
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableCharactersCharacterIdMailMailIdGet struct {
	value *CharactersCharacterIdMailMailIdGet
	isSet bool
}

func (v NullableCharactersCharacterIdMailMailIdGet) Get() *CharactersCharacterIdMailMailIdGet {
	return v.value
}

func (v *NullableCharactersCharacterIdMailMailIdGet) Set(val *CharactersCharacterIdMailMailIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdMailMailIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdMailMailIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdMailMailIdGet(val *CharactersCharacterIdMailMailIdGet) *NullableCharactersCharacterIdMailMailIdGet {
	return &NullableCharactersCharacterIdMailMailIdGet{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdMailMailIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdMailMailIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


