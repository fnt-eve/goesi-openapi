/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
)

// checks if the CharactersCharacterIdMailGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdMailGetInner{}

// CharactersCharacterIdMailGetInner struct for CharactersCharacterIdMailGetInner
type CharactersCharacterIdMailGetInner struct {
	// From whom the mail was sent
	From *int64 `json:"from,omitempty"`
	IsRead *bool `json:"is_read,omitempty"`
	Labels []int64 `json:"labels,omitempty"`
	MailId *int64 `json:"mail_id,omitempty"`
	// Recipients of the mail
	Recipients []PostCharactersCharacterIdMailRequestRecipientsInner `json:"recipients,omitempty"`
	// Mail subject
	Subject *string `json:"subject,omitempty"`
	// When the mail was sent
	Timestamp *time.Time `json:"timestamp,omitempty"`
}

// NewCharactersCharacterIdMailGetInner instantiates a new CharactersCharacterIdMailGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdMailGetInner() *CharactersCharacterIdMailGetInner {
	this := CharactersCharacterIdMailGetInner{}
	return &this
}

// NewCharactersCharacterIdMailGetInnerWithDefaults instantiates a new CharactersCharacterIdMailGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdMailGetInnerWithDefaults() *CharactersCharacterIdMailGetInner {
	this := CharactersCharacterIdMailGetInner{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetFrom() int64 {
	if o == nil || IsNil(o.From) {
		var ret int64
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetFromOk() (*int64, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given int64 and assigns it to the From field.
func (o *CharactersCharacterIdMailGetInner) SetFrom(v int64) {
	o.From = &v
}

// GetIsRead returns the IsRead field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetIsRead() bool {
	if o == nil || IsNil(o.IsRead) {
		var ret bool
		return ret
	}
	return *o.IsRead
}

// GetIsReadOk returns a tuple with the IsRead field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetIsReadOk() (*bool, bool) {
	if o == nil || IsNil(o.IsRead) {
		return nil, false
	}
	return o.IsRead, true
}

// HasIsRead returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasIsRead() bool {
	if o != nil && !IsNil(o.IsRead) {
		return true
	}

	return false
}

// SetIsRead gets a reference to the given bool and assigns it to the IsRead field.
func (o *CharactersCharacterIdMailGetInner) SetIsRead(v bool) {
	o.IsRead = &v
}

// GetLabels returns the Labels field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetLabels() []int64 {
	if o == nil || IsNil(o.Labels) {
		var ret []int64
		return ret
	}
	return o.Labels
}

// GetLabelsOk returns a tuple with the Labels field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetLabelsOk() ([]int64, bool) {
	if o == nil || IsNil(o.Labels) {
		return nil, false
	}
	return o.Labels, true
}

// HasLabels returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasLabels() bool {
	if o != nil && !IsNil(o.Labels) {
		return true
	}

	return false
}

// SetLabels gets a reference to the given []int64 and assigns it to the Labels field.
func (o *CharactersCharacterIdMailGetInner) SetLabels(v []int64) {
	o.Labels = v
}

// GetMailId returns the MailId field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetMailId() int64 {
	if o == nil || IsNil(o.MailId) {
		var ret int64
		return ret
	}
	return *o.MailId
}

// GetMailIdOk returns a tuple with the MailId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetMailIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MailId) {
		return nil, false
	}
	return o.MailId, true
}

// HasMailId returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasMailId() bool {
	if o != nil && !IsNil(o.MailId) {
		return true
	}

	return false
}

// SetMailId gets a reference to the given int64 and assigns it to the MailId field.
func (o *CharactersCharacterIdMailGetInner) SetMailId(v int64) {
	o.MailId = &v
}

// GetRecipients returns the Recipients field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetRecipients() []PostCharactersCharacterIdMailRequestRecipientsInner {
	if o == nil || IsNil(o.Recipients) {
		var ret []PostCharactersCharacterIdMailRequestRecipientsInner
		return ret
	}
	return o.Recipients
}

// GetRecipientsOk returns a tuple with the Recipients field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetRecipientsOk() ([]PostCharactersCharacterIdMailRequestRecipientsInner, bool) {
	if o == nil || IsNil(o.Recipients) {
		return nil, false
	}
	return o.Recipients, true
}

// HasRecipients returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasRecipients() bool {
	if o != nil && !IsNil(o.Recipients) {
		return true
	}

	return false
}

// SetRecipients gets a reference to the given []PostCharactersCharacterIdMailRequestRecipientsInner and assigns it to the Recipients field.
func (o *CharactersCharacterIdMailGetInner) SetRecipients(v []PostCharactersCharacterIdMailRequestRecipientsInner) {
	o.Recipients = v
}

// GetSubject returns the Subject field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetSubject() string {
	if o == nil || IsNil(o.Subject) {
		var ret string
		return ret
	}
	return *o.Subject
}

// GetSubjectOk returns a tuple with the Subject field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetSubjectOk() (*string, bool) {
	if o == nil || IsNil(o.Subject) {
		return nil, false
	}
	return o.Subject, true
}

// HasSubject returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasSubject() bool {
	if o != nil && !IsNil(o.Subject) {
		return true
	}

	return false
}

// SetSubject gets a reference to the given string and assigns it to the Subject field.
func (o *CharactersCharacterIdMailGetInner) SetSubject(v string) {
	o.Subject = &v
}

// GetTimestamp returns the Timestamp field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailGetInner) GetTimestamp() time.Time {
	if o == nil || IsNil(o.Timestamp) {
		var ret time.Time
		return ret
	}
	return *o.Timestamp
}

// GetTimestampOk returns a tuple with the Timestamp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailGetInner) GetTimestampOk() (*time.Time, bool) {
	if o == nil || IsNil(o.Timestamp) {
		return nil, false
	}
	return o.Timestamp, true
}

// HasTimestamp returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailGetInner) HasTimestamp() bool {
	if o != nil && !IsNil(o.Timestamp) {
		return true
	}

	return false
}

// SetTimestamp gets a reference to the given time.Time and assigns it to the Timestamp field.
func (o *CharactersCharacterIdMailGetInner) SetTimestamp(v time.Time) {
	o.Timestamp = &v
}

func (o CharactersCharacterIdMailGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdMailGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.IsRead) {
		toSerialize["is_read"] = o.IsRead
	}
	if !IsNil(o.Labels) {
		toSerialize["labels"] = o.Labels
	}
	if !IsNil(o.MailId) {
		toSerialize["mail_id"] = o.MailId
	}
	if !IsNil(o.Recipients) {
		toSerialize["recipients"] = o.Recipients
	}
	if !IsNil(o.Subject) {
		toSerialize["subject"] = o.Subject
	}
	if !IsNil(o.Timestamp) {
		toSerialize["timestamp"] = o.Timestamp
	}
	return toSerialize, nil
}

type NullableCharactersCharacterIdMailGetInner struct {
	value *CharactersCharacterIdMailGetInner
	isSet bool
}

func (v NullableCharactersCharacterIdMailGetInner) Get() *CharactersCharacterIdMailGetInner {
	return v.value
}

func (v *NullableCharactersCharacterIdMailGetInner) Set(val *CharactersCharacterIdMailGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdMailGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdMailGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdMailGetInner(val *CharactersCharacterIdMailGetInner) *NullableCharactersCharacterIdMailGetInner {
	return &NullableCharactersCharacterIdMailGetInner{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdMailGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdMailGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


