/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner{}

// CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner fuel object
type CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner struct {
	Quantity int64 `json:"quantity"`
	TypeId int64 `json:"type_id"`
}

type _CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner

// NewCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner instantiates a new CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(quantity int64, typeId int64) *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner {
	this := CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner{}
	this.Quantity = quantity
	this.TypeId = typeId
	return &this
}

// NewCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInnerWithDefaults instantiates a new CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInnerWithDefaults() *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner {
	this := CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner{}
	return &this
}

// GetQuantity returns the Quantity field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) SetQuantity(v int64) {
	o.Quantity = v
}

// GetTypeId returns the TypeId field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) GetTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) GetTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) SetTypeId(v int64) {
	o.TypeId = v
}

func (o CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["quantity"] = o.Quantity
	toSerialize["type_id"] = o.TypeId
	return toSerialize, nil
}

func (o *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"quantity",
		"type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner := _CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(varCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner)

	return err
}

type NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner struct {
	value *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner
	isSet bool
}

func (v NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) Get() *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) Set(val *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner(val *CorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) *NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner {
	return &NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdStarbasesStarbaseIdGetFuelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


