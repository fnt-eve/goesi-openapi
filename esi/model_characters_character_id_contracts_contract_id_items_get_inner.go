/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CharactersCharacterIdContractsContractIdItemsGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdContractsContractIdItemsGetInner{}

// CharactersCharacterIdContractsContractIdItemsGetInner struct for CharactersCharacterIdContractsContractIdItemsGetInner
type CharactersCharacterIdContractsContractIdItemsGetInner struct {
	// true if the contract issuer has submitted this item with the contract, false if the isser is asking for this item in the contract
	IsIncluded bool `json:"is_included"`
	IsSingleton bool `json:"is_singleton"`
	// Number of items in the stack
	Quantity int64 `json:"quantity"`
	// -1 indicates that the item is a singleton (non-stackable). If the item happens to be a Blueprint, -1 is an Original and -2 is a Blueprint Copy
	RawQuantity *int64 `json:"raw_quantity,omitempty"`
	// Unique ID for the item
	RecordId int64 `json:"record_id"`
	// Type ID for item
	TypeId int64 `json:"type_id"`
}

type _CharactersCharacterIdContractsContractIdItemsGetInner CharactersCharacterIdContractsContractIdItemsGetInner

// NewCharactersCharacterIdContractsContractIdItemsGetInner instantiates a new CharactersCharacterIdContractsContractIdItemsGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdContractsContractIdItemsGetInner(isIncluded bool, isSingleton bool, quantity int64, recordId int64, typeId int64) *CharactersCharacterIdContractsContractIdItemsGetInner {
	this := CharactersCharacterIdContractsContractIdItemsGetInner{}
	this.IsIncluded = isIncluded
	this.IsSingleton = isSingleton
	this.Quantity = quantity
	this.RecordId = recordId
	this.TypeId = typeId
	return &this
}

// NewCharactersCharacterIdContractsContractIdItemsGetInnerWithDefaults instantiates a new CharactersCharacterIdContractsContractIdItemsGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdContractsContractIdItemsGetInnerWithDefaults() *CharactersCharacterIdContractsContractIdItemsGetInner {
	this := CharactersCharacterIdContractsContractIdItemsGetInner{}
	return &this
}

// GetIsIncluded returns the IsIncluded field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetIsIncluded() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsIncluded
}

// GetIsIncludedOk returns a tuple with the IsIncluded field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetIsIncludedOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsIncluded, true
}

// SetIsIncluded sets field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) SetIsIncluded(v bool) {
	o.IsIncluded = v
}

// GetIsSingleton returns the IsSingleton field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetIsSingleton() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsSingleton
}

// GetIsSingletonOk returns a tuple with the IsSingleton field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetIsSingletonOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsSingleton, true
}

// SetIsSingleton sets field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) SetIsSingleton(v bool) {
	o.IsSingleton = v
}

// GetQuantity returns the Quantity field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetQuantity() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Quantity
}

// GetQuantityOk returns a tuple with the Quantity field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetQuantityOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Quantity, true
}

// SetQuantity sets field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) SetQuantity(v int64) {
	o.Quantity = v
}

// GetRawQuantity returns the RawQuantity field value if set, zero value otherwise.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetRawQuantity() int64 {
	if o == nil || IsNil(o.RawQuantity) {
		var ret int64
		return ret
	}
	return *o.RawQuantity
}

// GetRawQuantityOk returns a tuple with the RawQuantity field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetRawQuantityOk() (*int64, bool) {
	if o == nil || IsNil(o.RawQuantity) {
		return nil, false
	}
	return o.RawQuantity, true
}

// HasRawQuantity returns a boolean if a field has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) HasRawQuantity() bool {
	if o != nil && !IsNil(o.RawQuantity) {
		return true
	}

	return false
}

// SetRawQuantity gets a reference to the given int64 and assigns it to the RawQuantity field.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) SetRawQuantity(v int64) {
	o.RawQuantity = &v
}

// GetRecordId returns the RecordId field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetRecordId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RecordId
}

// GetRecordIdOk returns a tuple with the RecordId field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetRecordIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordId, true
}

// SetRecordId sets field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) SetRecordId(v int64) {
	o.RecordId = v
}

// GetTypeId returns the TypeId field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetTypeId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.TypeId
}

// GetTypeIdOk returns a tuple with the TypeId field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) GetTypeIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TypeId, true
}

// SetTypeId sets field value
func (o *CharactersCharacterIdContractsContractIdItemsGetInner) SetTypeId(v int64) {
	o.TypeId = v
}

func (o CharactersCharacterIdContractsContractIdItemsGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdContractsContractIdItemsGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["is_included"] = o.IsIncluded
	toSerialize["is_singleton"] = o.IsSingleton
	toSerialize["quantity"] = o.Quantity
	if !IsNil(o.RawQuantity) {
		toSerialize["raw_quantity"] = o.RawQuantity
	}
	toSerialize["record_id"] = o.RecordId
	toSerialize["type_id"] = o.TypeId
	return toSerialize, nil
}

func (o *CharactersCharacterIdContractsContractIdItemsGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"is_included",
		"is_singleton",
		"quantity",
		"record_id",
		"type_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCharactersCharacterIdContractsContractIdItemsGetInner := _CharactersCharacterIdContractsContractIdItemsGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCharactersCharacterIdContractsContractIdItemsGetInner)

	if err != nil {
		return err
	}

	*o = CharactersCharacterIdContractsContractIdItemsGetInner(varCharactersCharacterIdContractsContractIdItemsGetInner)

	return err
}

type NullableCharactersCharacterIdContractsContractIdItemsGetInner struct {
	value *CharactersCharacterIdContractsContractIdItemsGetInner
	isSet bool
}

func (v NullableCharactersCharacterIdContractsContractIdItemsGetInner) Get() *CharactersCharacterIdContractsContractIdItemsGetInner {
	return v.value
}

func (v *NullableCharactersCharacterIdContractsContractIdItemsGetInner) Set(val *CharactersCharacterIdContractsContractIdItemsGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdContractsContractIdItemsGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdContractsContractIdItemsGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdContractsContractIdItemsGetInner(val *CharactersCharacterIdContractsContractIdItemsGetInner) *NullableCharactersCharacterIdContractsContractIdItemsGetInner {
	return &NullableCharactersCharacterIdContractsContractIdItemsGetInner{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdContractsContractIdItemsGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdContractsContractIdItemsGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


