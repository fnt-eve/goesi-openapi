/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CharactersCharacterIdSkillqueueGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdSkillqueueGetInner{}

// CharactersCharacterIdSkillqueueGetInner struct for CharactersCharacterIdSkillqueueGetInner
type CharactersCharacterIdSkillqueueGetInner struct {
	// Date on which training of the skill will complete. Omitted if the skill queue is paused.
	FinishDate *time.Time `json:"finish_date,omitempty"`
	FinishedLevel int64 `json:"finished_level"`
	LevelEndSp *int64 `json:"level_end_sp,omitempty"`
	// Amount of SP that was in the skill when it started training it's current level. Used to calculate % of current level complete.
	LevelStartSp *int64 `json:"level_start_sp,omitempty"`
	QueuePosition int64 `json:"queue_position"`
	SkillId int64 `json:"skill_id"`
	StartDate *time.Time `json:"start_date,omitempty"`
	TrainingStartSp *int64 `json:"training_start_sp,omitempty"`
}

type _CharactersCharacterIdSkillqueueGetInner CharactersCharacterIdSkillqueueGetInner

// NewCharactersCharacterIdSkillqueueGetInner instantiates a new CharactersCharacterIdSkillqueueGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdSkillqueueGetInner(finishedLevel int64, queuePosition int64, skillId int64) *CharactersCharacterIdSkillqueueGetInner {
	this := CharactersCharacterIdSkillqueueGetInner{}
	this.FinishedLevel = finishedLevel
	this.QueuePosition = queuePosition
	this.SkillId = skillId
	return &this
}

// NewCharactersCharacterIdSkillqueueGetInnerWithDefaults instantiates a new CharactersCharacterIdSkillqueueGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdSkillqueueGetInnerWithDefaults() *CharactersCharacterIdSkillqueueGetInner {
	this := CharactersCharacterIdSkillqueueGetInner{}
	return &this
}

// GetFinishDate returns the FinishDate field value if set, zero value otherwise.
func (o *CharactersCharacterIdSkillqueueGetInner) GetFinishDate() time.Time {
	if o == nil || IsNil(o.FinishDate) {
		var ret time.Time
		return ret
	}
	return *o.FinishDate
}

// GetFinishDateOk returns a tuple with the FinishDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetFinishDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.FinishDate) {
		return nil, false
	}
	return o.FinishDate, true
}

// HasFinishDate returns a boolean if a field has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) HasFinishDate() bool {
	if o != nil && !IsNil(o.FinishDate) {
		return true
	}

	return false
}

// SetFinishDate gets a reference to the given time.Time and assigns it to the FinishDate field.
func (o *CharactersCharacterIdSkillqueueGetInner) SetFinishDate(v time.Time) {
	o.FinishDate = &v
}

// GetFinishedLevel returns the FinishedLevel field value
func (o *CharactersCharacterIdSkillqueueGetInner) GetFinishedLevel() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FinishedLevel
}

// GetFinishedLevelOk returns a tuple with the FinishedLevel field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetFinishedLevelOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FinishedLevel, true
}

// SetFinishedLevel sets field value
func (o *CharactersCharacterIdSkillqueueGetInner) SetFinishedLevel(v int64) {
	o.FinishedLevel = v
}

// GetLevelEndSp returns the LevelEndSp field value if set, zero value otherwise.
func (o *CharactersCharacterIdSkillqueueGetInner) GetLevelEndSp() int64 {
	if o == nil || IsNil(o.LevelEndSp) {
		var ret int64
		return ret
	}
	return *o.LevelEndSp
}

// GetLevelEndSpOk returns a tuple with the LevelEndSp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetLevelEndSpOk() (*int64, bool) {
	if o == nil || IsNil(o.LevelEndSp) {
		return nil, false
	}
	return o.LevelEndSp, true
}

// HasLevelEndSp returns a boolean if a field has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) HasLevelEndSp() bool {
	if o != nil && !IsNil(o.LevelEndSp) {
		return true
	}

	return false
}

// SetLevelEndSp gets a reference to the given int64 and assigns it to the LevelEndSp field.
func (o *CharactersCharacterIdSkillqueueGetInner) SetLevelEndSp(v int64) {
	o.LevelEndSp = &v
}

// GetLevelStartSp returns the LevelStartSp field value if set, zero value otherwise.
func (o *CharactersCharacterIdSkillqueueGetInner) GetLevelStartSp() int64 {
	if o == nil || IsNil(o.LevelStartSp) {
		var ret int64
		return ret
	}
	return *o.LevelStartSp
}

// GetLevelStartSpOk returns a tuple with the LevelStartSp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetLevelStartSpOk() (*int64, bool) {
	if o == nil || IsNil(o.LevelStartSp) {
		return nil, false
	}
	return o.LevelStartSp, true
}

// HasLevelStartSp returns a boolean if a field has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) HasLevelStartSp() bool {
	if o != nil && !IsNil(o.LevelStartSp) {
		return true
	}

	return false
}

// SetLevelStartSp gets a reference to the given int64 and assigns it to the LevelStartSp field.
func (o *CharactersCharacterIdSkillqueueGetInner) SetLevelStartSp(v int64) {
	o.LevelStartSp = &v
}

// GetQueuePosition returns the QueuePosition field value
func (o *CharactersCharacterIdSkillqueueGetInner) GetQueuePosition() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.QueuePosition
}

// GetQueuePositionOk returns a tuple with the QueuePosition field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetQueuePositionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.QueuePosition, true
}

// SetQueuePosition sets field value
func (o *CharactersCharacterIdSkillqueueGetInner) SetQueuePosition(v int64) {
	o.QueuePosition = v
}

// GetSkillId returns the SkillId field value
func (o *CharactersCharacterIdSkillqueueGetInner) GetSkillId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.SkillId
}

// GetSkillIdOk returns a tuple with the SkillId field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetSkillIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SkillId, true
}

// SetSkillId sets field value
func (o *CharactersCharacterIdSkillqueueGetInner) SetSkillId(v int64) {
	o.SkillId = v
}

// GetStartDate returns the StartDate field value if set, zero value otherwise.
func (o *CharactersCharacterIdSkillqueueGetInner) GetStartDate() time.Time {
	if o == nil || IsNil(o.StartDate) {
		var ret time.Time
		return ret
	}
	return *o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetStartDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.StartDate) {
		return nil, false
	}
	return o.StartDate, true
}

// HasStartDate returns a boolean if a field has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) HasStartDate() bool {
	if o != nil && !IsNil(o.StartDate) {
		return true
	}

	return false
}

// SetStartDate gets a reference to the given time.Time and assigns it to the StartDate field.
func (o *CharactersCharacterIdSkillqueueGetInner) SetStartDate(v time.Time) {
	o.StartDate = &v
}

// GetTrainingStartSp returns the TrainingStartSp field value if set, zero value otherwise.
func (o *CharactersCharacterIdSkillqueueGetInner) GetTrainingStartSp() int64 {
	if o == nil || IsNil(o.TrainingStartSp) {
		var ret int64
		return ret
	}
	return *o.TrainingStartSp
}

// GetTrainingStartSpOk returns a tuple with the TrainingStartSp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) GetTrainingStartSpOk() (*int64, bool) {
	if o == nil || IsNil(o.TrainingStartSp) {
		return nil, false
	}
	return o.TrainingStartSp, true
}

// HasTrainingStartSp returns a boolean if a field has been set.
func (o *CharactersCharacterIdSkillqueueGetInner) HasTrainingStartSp() bool {
	if o != nil && !IsNil(o.TrainingStartSp) {
		return true
	}

	return false
}

// SetTrainingStartSp gets a reference to the given int64 and assigns it to the TrainingStartSp field.
func (o *CharactersCharacterIdSkillqueueGetInner) SetTrainingStartSp(v int64) {
	o.TrainingStartSp = &v
}

func (o CharactersCharacterIdSkillqueueGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdSkillqueueGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FinishDate) {
		toSerialize["finish_date"] = o.FinishDate
	}
	toSerialize["finished_level"] = o.FinishedLevel
	if !IsNil(o.LevelEndSp) {
		toSerialize["level_end_sp"] = o.LevelEndSp
	}
	if !IsNil(o.LevelStartSp) {
		toSerialize["level_start_sp"] = o.LevelStartSp
	}
	toSerialize["queue_position"] = o.QueuePosition
	toSerialize["skill_id"] = o.SkillId
	if !IsNil(o.StartDate) {
		toSerialize["start_date"] = o.StartDate
	}
	if !IsNil(o.TrainingStartSp) {
		toSerialize["training_start_sp"] = o.TrainingStartSp
	}
	return toSerialize, nil
}

func (o *CharactersCharacterIdSkillqueueGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"finished_level",
		"queue_position",
		"skill_id",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCharactersCharacterIdSkillqueueGetInner := _CharactersCharacterIdSkillqueueGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCharactersCharacterIdSkillqueueGetInner)

	if err != nil {
		return err
	}

	*o = CharactersCharacterIdSkillqueueGetInner(varCharactersCharacterIdSkillqueueGetInner)

	return err
}

type NullableCharactersCharacterIdSkillqueueGetInner struct {
	value *CharactersCharacterIdSkillqueueGetInner
	isSet bool
}

func (v NullableCharactersCharacterIdSkillqueueGetInner) Get() *CharactersCharacterIdSkillqueueGetInner {
	return v.value
}

func (v *NullableCharactersCharacterIdSkillqueueGetInner) Set(val *CharactersCharacterIdSkillqueueGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdSkillqueueGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdSkillqueueGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdSkillqueueGetInner(val *CharactersCharacterIdSkillqueueGetInner) *NullableCharactersCharacterIdSkillqueueGetInner {
	return &NullableCharactersCharacterIdSkillqueueGetInner{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdSkillqueueGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdSkillqueueGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


