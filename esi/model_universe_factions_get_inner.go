/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the UniverseFactionsGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseFactionsGetInner{}

// UniverseFactionsGetInner struct for UniverseFactionsGetInner
type UniverseFactionsGetInner struct {
	CorporationId *int64 `json:"corporation_id,omitempty"`
	Description string `json:"description"`
	FactionId int64 `json:"faction_id"`
	IsUnique bool `json:"is_unique"`
	MilitiaCorporationId *int64 `json:"militia_corporation_id,omitempty"`
	Name string `json:"name"`
	SizeFactor float64 `json:"size_factor"`
	SolarSystemId *int64 `json:"solar_system_id,omitempty"`
	StationCount int64 `json:"station_count"`
	StationSystemCount int64 `json:"station_system_count"`
}

type _UniverseFactionsGetInner UniverseFactionsGetInner

// NewUniverseFactionsGetInner instantiates a new UniverseFactionsGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseFactionsGetInner(description string, factionId int64, isUnique bool, name string, sizeFactor float64, stationCount int64, stationSystemCount int64) *UniverseFactionsGetInner {
	this := UniverseFactionsGetInner{}
	this.Description = description
	this.FactionId = factionId
	this.IsUnique = isUnique
	this.Name = name
	this.SizeFactor = sizeFactor
	this.StationCount = stationCount
	this.StationSystemCount = stationSystemCount
	return &this
}

// NewUniverseFactionsGetInnerWithDefaults instantiates a new UniverseFactionsGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseFactionsGetInnerWithDefaults() *UniverseFactionsGetInner {
	this := UniverseFactionsGetInner{}
	return &this
}

// GetCorporationId returns the CorporationId field value if set, zero value otherwise.
func (o *UniverseFactionsGetInner) GetCorporationId() int64 {
	if o == nil || IsNil(o.CorporationId) {
		var ret int64
		return ret
	}
	return *o.CorporationId
}

// GetCorporationIdOk returns a tuple with the CorporationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetCorporationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.CorporationId) {
		return nil, false
	}
	return o.CorporationId, true
}

// HasCorporationId returns a boolean if a field has been set.
func (o *UniverseFactionsGetInner) HasCorporationId() bool {
	if o != nil && !IsNil(o.CorporationId) {
		return true
	}

	return false
}

// SetCorporationId gets a reference to the given int64 and assigns it to the CorporationId field.
func (o *UniverseFactionsGetInner) SetCorporationId(v int64) {
	o.CorporationId = &v
}

// GetDescription returns the Description field value
func (o *UniverseFactionsGetInner) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *UniverseFactionsGetInner) SetDescription(v string) {
	o.Description = v
}

// GetFactionId returns the FactionId field value
func (o *UniverseFactionsGetInner) GetFactionId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FactionId
}

// GetFactionIdOk returns a tuple with the FactionId field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetFactionIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FactionId, true
}

// SetFactionId sets field value
func (o *UniverseFactionsGetInner) SetFactionId(v int64) {
	o.FactionId = v
}

// GetIsUnique returns the IsUnique field value
func (o *UniverseFactionsGetInner) GetIsUnique() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.IsUnique
}

// GetIsUniqueOk returns a tuple with the IsUnique field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetIsUniqueOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsUnique, true
}

// SetIsUnique sets field value
func (o *UniverseFactionsGetInner) SetIsUnique(v bool) {
	o.IsUnique = v
}

// GetMilitiaCorporationId returns the MilitiaCorporationId field value if set, zero value otherwise.
func (o *UniverseFactionsGetInner) GetMilitiaCorporationId() int64 {
	if o == nil || IsNil(o.MilitiaCorporationId) {
		var ret int64
		return ret
	}
	return *o.MilitiaCorporationId
}

// GetMilitiaCorporationIdOk returns a tuple with the MilitiaCorporationId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetMilitiaCorporationIdOk() (*int64, bool) {
	if o == nil || IsNil(o.MilitiaCorporationId) {
		return nil, false
	}
	return o.MilitiaCorporationId, true
}

// HasMilitiaCorporationId returns a boolean if a field has been set.
func (o *UniverseFactionsGetInner) HasMilitiaCorporationId() bool {
	if o != nil && !IsNil(o.MilitiaCorporationId) {
		return true
	}

	return false
}

// SetMilitiaCorporationId gets a reference to the given int64 and assigns it to the MilitiaCorporationId field.
func (o *UniverseFactionsGetInner) SetMilitiaCorporationId(v int64) {
	o.MilitiaCorporationId = &v
}

// GetName returns the Name field value
func (o *UniverseFactionsGetInner) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *UniverseFactionsGetInner) SetName(v string) {
	o.Name = v
}

// GetSizeFactor returns the SizeFactor field value
func (o *UniverseFactionsGetInner) GetSizeFactor() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.SizeFactor
}

// GetSizeFactorOk returns a tuple with the SizeFactor field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetSizeFactorOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.SizeFactor, true
}

// SetSizeFactor sets field value
func (o *UniverseFactionsGetInner) SetSizeFactor(v float64) {
	o.SizeFactor = v
}

// GetSolarSystemId returns the SolarSystemId field value if set, zero value otherwise.
func (o *UniverseFactionsGetInner) GetSolarSystemId() int64 {
	if o == nil || IsNil(o.SolarSystemId) {
		var ret int64
		return ret
	}
	return *o.SolarSystemId
}

// GetSolarSystemIdOk returns a tuple with the SolarSystemId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetSolarSystemIdOk() (*int64, bool) {
	if o == nil || IsNil(o.SolarSystemId) {
		return nil, false
	}
	return o.SolarSystemId, true
}

// HasSolarSystemId returns a boolean if a field has been set.
func (o *UniverseFactionsGetInner) HasSolarSystemId() bool {
	if o != nil && !IsNil(o.SolarSystemId) {
		return true
	}

	return false
}

// SetSolarSystemId gets a reference to the given int64 and assigns it to the SolarSystemId field.
func (o *UniverseFactionsGetInner) SetSolarSystemId(v int64) {
	o.SolarSystemId = &v
}

// GetStationCount returns the StationCount field value
func (o *UniverseFactionsGetInner) GetStationCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StationCount
}

// GetStationCountOk returns a tuple with the StationCount field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetStationCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StationCount, true
}

// SetStationCount sets field value
func (o *UniverseFactionsGetInner) SetStationCount(v int64) {
	o.StationCount = v
}

// GetStationSystemCount returns the StationSystemCount field value
func (o *UniverseFactionsGetInner) GetStationSystemCount() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.StationSystemCount
}

// GetStationSystemCountOk returns a tuple with the StationSystemCount field value
// and a boolean to check if the value has been set.
func (o *UniverseFactionsGetInner) GetStationSystemCountOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StationSystemCount, true
}

// SetStationSystemCount sets field value
func (o *UniverseFactionsGetInner) SetStationSystemCount(v int64) {
	o.StationSystemCount = v
}

func (o UniverseFactionsGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseFactionsGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CorporationId) {
		toSerialize["corporation_id"] = o.CorporationId
	}
	toSerialize["description"] = o.Description
	toSerialize["faction_id"] = o.FactionId
	toSerialize["is_unique"] = o.IsUnique
	if !IsNil(o.MilitiaCorporationId) {
		toSerialize["militia_corporation_id"] = o.MilitiaCorporationId
	}
	toSerialize["name"] = o.Name
	toSerialize["size_factor"] = o.SizeFactor
	if !IsNil(o.SolarSystemId) {
		toSerialize["solar_system_id"] = o.SolarSystemId
	}
	toSerialize["station_count"] = o.StationCount
	toSerialize["station_system_count"] = o.StationSystemCount
	return toSerialize, nil
}

func (o *UniverseFactionsGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"faction_id",
		"is_unique",
		"name",
		"size_factor",
		"station_count",
		"station_system_count",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varUniverseFactionsGetInner := _UniverseFactionsGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varUniverseFactionsGetInner)

	if err != nil {
		return err
	}

	*o = UniverseFactionsGetInner(varUniverseFactionsGetInner)

	return err
}

type NullableUniverseFactionsGetInner struct {
	value *UniverseFactionsGetInner
	isSet bool
}

func (v NullableUniverseFactionsGetInner) Get() *UniverseFactionsGetInner {
	return v.value
}

func (v *NullableUniverseFactionsGetInner) Set(val *UniverseFactionsGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseFactionsGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseFactionsGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseFactionsGetInner(val *UniverseFactionsGetInner) *NullableUniverseFactionsGetInner {
	return &NullableUniverseFactionsGetInner{value: val, isSet: true}
}

func (v NullableUniverseFactionsGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseFactionsGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


