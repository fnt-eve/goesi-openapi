/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FwLeaderboardsCorporationsGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FwLeaderboardsCorporationsGet{}

// FwLeaderboardsCorporationsGet struct for FwLeaderboardsCorporationsGet
type FwLeaderboardsCorporationsGet struct {
	Kills FwLeaderboardsCorporationsGetKills `json:"kills"`
	VictoryPoints FwLeaderboardsCorporationsGetVictoryPoints `json:"victory_points"`
}

type _FwLeaderboardsCorporationsGet FwLeaderboardsCorporationsGet

// NewFwLeaderboardsCorporationsGet instantiates a new FwLeaderboardsCorporationsGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFwLeaderboardsCorporationsGet(kills FwLeaderboardsCorporationsGetKills, victoryPoints FwLeaderboardsCorporationsGetVictoryPoints) *FwLeaderboardsCorporationsGet {
	this := FwLeaderboardsCorporationsGet{}
	this.Kills = kills
	this.VictoryPoints = victoryPoints
	return &this
}

// NewFwLeaderboardsCorporationsGetWithDefaults instantiates a new FwLeaderboardsCorporationsGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFwLeaderboardsCorporationsGetWithDefaults() *FwLeaderboardsCorporationsGet {
	this := FwLeaderboardsCorporationsGet{}
	return &this
}

// GetKills returns the Kills field value
func (o *FwLeaderboardsCorporationsGet) GetKills() FwLeaderboardsCorporationsGetKills {
	if o == nil {
		var ret FwLeaderboardsCorporationsGetKills
		return ret
	}

	return o.Kills
}

// GetKillsOk returns a tuple with the Kills field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsCorporationsGet) GetKillsOk() (*FwLeaderboardsCorporationsGetKills, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kills, true
}

// SetKills sets field value
func (o *FwLeaderboardsCorporationsGet) SetKills(v FwLeaderboardsCorporationsGetKills) {
	o.Kills = v
}

// GetVictoryPoints returns the VictoryPoints field value
func (o *FwLeaderboardsCorporationsGet) GetVictoryPoints() FwLeaderboardsCorporationsGetVictoryPoints {
	if o == nil {
		var ret FwLeaderboardsCorporationsGetVictoryPoints
		return ret
	}

	return o.VictoryPoints
}

// GetVictoryPointsOk returns a tuple with the VictoryPoints field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsCorporationsGet) GetVictoryPointsOk() (*FwLeaderboardsCorporationsGetVictoryPoints, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictoryPoints, true
}

// SetVictoryPoints sets field value
func (o *FwLeaderboardsCorporationsGet) SetVictoryPoints(v FwLeaderboardsCorporationsGetVictoryPoints) {
	o.VictoryPoints = v
}

func (o FwLeaderboardsCorporationsGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FwLeaderboardsCorporationsGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kills"] = o.Kills
	toSerialize["victory_points"] = o.VictoryPoints
	return toSerialize, nil
}

func (o *FwLeaderboardsCorporationsGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kills",
		"victory_points",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFwLeaderboardsCorporationsGet := _FwLeaderboardsCorporationsGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFwLeaderboardsCorporationsGet)

	if err != nil {
		return err
	}

	*o = FwLeaderboardsCorporationsGet(varFwLeaderboardsCorporationsGet)

	return err
}

type NullableFwLeaderboardsCorporationsGet struct {
	value *FwLeaderboardsCorporationsGet
	isSet bool
}

func (v NullableFwLeaderboardsCorporationsGet) Get() *FwLeaderboardsCorporationsGet {
	return v.value
}

func (v *NullableFwLeaderboardsCorporationsGet) Set(val *FwLeaderboardsCorporationsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableFwLeaderboardsCorporationsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableFwLeaderboardsCorporationsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFwLeaderboardsCorporationsGet(val *FwLeaderboardsCorporationsGet) *NullableFwLeaderboardsCorporationsGet {
	return &NullableFwLeaderboardsCorporationsGet{value: val, isSet: true}
}

func (v NullableFwLeaderboardsCorporationsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFwLeaderboardsCorporationsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


