/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CharactersCharacterIdStandingsGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdStandingsGetInner{}

// CharactersCharacterIdStandingsGetInner struct for CharactersCharacterIdStandingsGetInner
type CharactersCharacterIdStandingsGetInner struct {
	FromId int64 `json:"from_id"`
	FromType string `json:"from_type"`
	Standing float64 `json:"standing"`
}

type _CharactersCharacterIdStandingsGetInner CharactersCharacterIdStandingsGetInner

// NewCharactersCharacterIdStandingsGetInner instantiates a new CharactersCharacterIdStandingsGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdStandingsGetInner(fromId int64, fromType string, standing float64) *CharactersCharacterIdStandingsGetInner {
	this := CharactersCharacterIdStandingsGetInner{}
	this.FromId = fromId
	this.FromType = fromType
	this.Standing = standing
	return &this
}

// NewCharactersCharacterIdStandingsGetInnerWithDefaults instantiates a new CharactersCharacterIdStandingsGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdStandingsGetInnerWithDefaults() *CharactersCharacterIdStandingsGetInner {
	this := CharactersCharacterIdStandingsGetInner{}
	return &this
}

// GetFromId returns the FromId field value
func (o *CharactersCharacterIdStandingsGetInner) GetFromId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.FromId
}

// GetFromIdOk returns a tuple with the FromId field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdStandingsGetInner) GetFromIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromId, true
}

// SetFromId sets field value
func (o *CharactersCharacterIdStandingsGetInner) SetFromId(v int64) {
	o.FromId = v
}

// GetFromType returns the FromType field value
func (o *CharactersCharacterIdStandingsGetInner) GetFromType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FromType
}

// GetFromTypeOk returns a tuple with the FromType field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdStandingsGetInner) GetFromTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FromType, true
}

// SetFromType sets field value
func (o *CharactersCharacterIdStandingsGetInner) SetFromType(v string) {
	o.FromType = v
}

// GetStanding returns the Standing field value
func (o *CharactersCharacterIdStandingsGetInner) GetStanding() float64 {
	if o == nil {
		var ret float64
		return ret
	}

	return o.Standing
}

// GetStandingOk returns a tuple with the Standing field value
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdStandingsGetInner) GetStandingOk() (*float64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Standing, true
}

// SetStanding sets field value
func (o *CharactersCharacterIdStandingsGetInner) SetStanding(v float64) {
	o.Standing = v
}

func (o CharactersCharacterIdStandingsGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdStandingsGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["from_id"] = o.FromId
	toSerialize["from_type"] = o.FromType
	toSerialize["standing"] = o.Standing
	return toSerialize, nil
}

func (o *CharactersCharacterIdStandingsGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"from_id",
		"from_type",
		"standing",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCharactersCharacterIdStandingsGetInner := _CharactersCharacterIdStandingsGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCharactersCharacterIdStandingsGetInner)

	if err != nil {
		return err
	}

	*o = CharactersCharacterIdStandingsGetInner(varCharactersCharacterIdStandingsGetInner)

	return err
}

type NullableCharactersCharacterIdStandingsGetInner struct {
	value *CharactersCharacterIdStandingsGetInner
	isSet bool
}

func (v NullableCharactersCharacterIdStandingsGetInner) Get() *CharactersCharacterIdStandingsGetInner {
	return v.value
}

func (v *NullableCharactersCharacterIdStandingsGetInner) Set(val *CharactersCharacterIdStandingsGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdStandingsGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdStandingsGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdStandingsGetInner(val *CharactersCharacterIdStandingsGetInner) *NullableCharactersCharacterIdStandingsGetInner {
	return &NullableCharactersCharacterIdStandingsGetInner{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdStandingsGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdStandingsGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


