/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the MarketsGroupsMarketGroupIdGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &MarketsGroupsMarketGroupIdGet{}

// MarketsGroupsMarketGroupIdGet struct for MarketsGroupsMarketGroupIdGet
type MarketsGroupsMarketGroupIdGet struct {
	Description string `json:"description"`
	MarketGroupId int64 `json:"market_group_id"`
	Name string `json:"name"`
	ParentGroupId *int64 `json:"parent_group_id,omitempty"`
	Types []int64 `json:"types"`
}

type _MarketsGroupsMarketGroupIdGet MarketsGroupsMarketGroupIdGet

// NewMarketsGroupsMarketGroupIdGet instantiates a new MarketsGroupsMarketGroupIdGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewMarketsGroupsMarketGroupIdGet(description string, marketGroupId int64, name string, types []int64) *MarketsGroupsMarketGroupIdGet {
	this := MarketsGroupsMarketGroupIdGet{}
	this.Description = description
	this.MarketGroupId = marketGroupId
	this.Name = name
	this.Types = types
	return &this
}

// NewMarketsGroupsMarketGroupIdGetWithDefaults instantiates a new MarketsGroupsMarketGroupIdGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewMarketsGroupsMarketGroupIdGetWithDefaults() *MarketsGroupsMarketGroupIdGet {
	this := MarketsGroupsMarketGroupIdGet{}
	return &this
}

// GetDescription returns the Description field value
func (o *MarketsGroupsMarketGroupIdGet) GetDescription() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Description
}

// GetDescriptionOk returns a tuple with the Description field value
// and a boolean to check if the value has been set.
func (o *MarketsGroupsMarketGroupIdGet) GetDescriptionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Description, true
}

// SetDescription sets field value
func (o *MarketsGroupsMarketGroupIdGet) SetDescription(v string) {
	o.Description = v
}

// GetMarketGroupId returns the MarketGroupId field value
func (o *MarketsGroupsMarketGroupIdGet) GetMarketGroupId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.MarketGroupId
}

// GetMarketGroupIdOk returns a tuple with the MarketGroupId field value
// and a boolean to check if the value has been set.
func (o *MarketsGroupsMarketGroupIdGet) GetMarketGroupIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MarketGroupId, true
}

// SetMarketGroupId sets field value
func (o *MarketsGroupsMarketGroupIdGet) SetMarketGroupId(v int64) {
	o.MarketGroupId = v
}

// GetName returns the Name field value
func (o *MarketsGroupsMarketGroupIdGet) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *MarketsGroupsMarketGroupIdGet) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *MarketsGroupsMarketGroupIdGet) SetName(v string) {
	o.Name = v
}

// GetParentGroupId returns the ParentGroupId field value if set, zero value otherwise.
func (o *MarketsGroupsMarketGroupIdGet) GetParentGroupId() int64 {
	if o == nil || IsNil(o.ParentGroupId) {
		var ret int64
		return ret
	}
	return *o.ParentGroupId
}

// GetParentGroupIdOk returns a tuple with the ParentGroupId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *MarketsGroupsMarketGroupIdGet) GetParentGroupIdOk() (*int64, bool) {
	if o == nil || IsNil(o.ParentGroupId) {
		return nil, false
	}
	return o.ParentGroupId, true
}

// HasParentGroupId returns a boolean if a field has been set.
func (o *MarketsGroupsMarketGroupIdGet) HasParentGroupId() bool {
	if o != nil && !IsNil(o.ParentGroupId) {
		return true
	}

	return false
}

// SetParentGroupId gets a reference to the given int64 and assigns it to the ParentGroupId field.
func (o *MarketsGroupsMarketGroupIdGet) SetParentGroupId(v int64) {
	o.ParentGroupId = &v
}

// GetTypes returns the Types field value
func (o *MarketsGroupsMarketGroupIdGet) GetTypes() []int64 {
	if o == nil {
		var ret []int64
		return ret
	}

	return o.Types
}

// GetTypesOk returns a tuple with the Types field value
// and a boolean to check if the value has been set.
func (o *MarketsGroupsMarketGroupIdGet) GetTypesOk() ([]int64, bool) {
	if o == nil {
		return nil, false
	}
	return o.Types, true
}

// SetTypes sets field value
func (o *MarketsGroupsMarketGroupIdGet) SetTypes(v []int64) {
	o.Types = v
}

func (o MarketsGroupsMarketGroupIdGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o MarketsGroupsMarketGroupIdGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["description"] = o.Description
	toSerialize["market_group_id"] = o.MarketGroupId
	toSerialize["name"] = o.Name
	if !IsNil(o.ParentGroupId) {
		toSerialize["parent_group_id"] = o.ParentGroupId
	}
	toSerialize["types"] = o.Types
	return toSerialize, nil
}

func (o *MarketsGroupsMarketGroupIdGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"description",
		"market_group_id",
		"name",
		"types",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varMarketsGroupsMarketGroupIdGet := _MarketsGroupsMarketGroupIdGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varMarketsGroupsMarketGroupIdGet)

	if err != nil {
		return err
	}

	*o = MarketsGroupsMarketGroupIdGet(varMarketsGroupsMarketGroupIdGet)

	return err
}

type NullableMarketsGroupsMarketGroupIdGet struct {
	value *MarketsGroupsMarketGroupIdGet
	isSet bool
}

func (v NullableMarketsGroupsMarketGroupIdGet) Get() *MarketsGroupsMarketGroupIdGet {
	return v.value
}

func (v *NullableMarketsGroupsMarketGroupIdGet) Set(val *MarketsGroupsMarketGroupIdGet) {
	v.value = val
	v.isSet = true
}

func (v NullableMarketsGroupsMarketGroupIdGet) IsSet() bool {
	return v.isSet
}

func (v *NullableMarketsGroupsMarketGroupIdGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableMarketsGroupsMarketGroupIdGet(val *MarketsGroupsMarketGroupIdGet) *NullableMarketsGroupsMarketGroupIdGet {
	return &NullableMarketsGroupsMarketGroupIdGet{value: val, isSet: true}
}

func (v NullableMarketsGroupsMarketGroupIdGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableMarketsGroupsMarketGroupIdGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


