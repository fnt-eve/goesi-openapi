/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsContribution type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsContribution{}

// CorporationsProjectsContribution struct for CorporationsProjectsContribution
type CorporationsProjectsContribution struct {
	// Your contribution
	Contributed int64 `json:"contributed"`
	// Moment this information was last modified
	LastModified *time.Time `json:"last_modified,omitempty"`
}

type _CorporationsProjectsContribution CorporationsProjectsContribution

// NewCorporationsProjectsContribution instantiates a new CorporationsProjectsContribution object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsContribution(contributed int64) *CorporationsProjectsContribution {
	this := CorporationsProjectsContribution{}
	this.Contributed = contributed
	return &this
}

// NewCorporationsProjectsContributionWithDefaults instantiates a new CorporationsProjectsContribution object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsContributionWithDefaults() *CorporationsProjectsContribution {
	this := CorporationsProjectsContribution{}
	return &this
}

// GetContributed returns the Contributed field value
func (o *CorporationsProjectsContribution) GetContributed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Contributed
}

// GetContributedOk returns a tuple with the Contributed field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsContribution) GetContributedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contributed, true
}

// SetContributed sets field value
func (o *CorporationsProjectsContribution) SetContributed(v int64) {
	o.Contributed = v
}

// GetLastModified returns the LastModified field value if set, zero value otherwise.
func (o *CorporationsProjectsContribution) GetLastModified() time.Time {
	if o == nil || IsNil(o.LastModified) {
		var ret time.Time
		return ret
	}
	return *o.LastModified
}

// GetLastModifiedOk returns a tuple with the LastModified field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsContribution) GetLastModifiedOk() (*time.Time, bool) {
	if o == nil || IsNil(o.LastModified) {
		return nil, false
	}
	return o.LastModified, true
}

// HasLastModified returns a boolean if a field has been set.
func (o *CorporationsProjectsContribution) HasLastModified() bool {
	if o != nil && !IsNil(o.LastModified) {
		return true
	}

	return false
}

// SetLastModified gets a reference to the given time.Time and assigns it to the LastModified field.
func (o *CorporationsProjectsContribution) SetLastModified(v time.Time) {
	o.LastModified = &v
}

func (o CorporationsProjectsContribution) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsContribution) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contributed"] = o.Contributed
	if !IsNil(o.LastModified) {
		toSerialize["last_modified"] = o.LastModified
	}
	return toSerialize, nil
}

func (o *CorporationsProjectsContribution) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contributed",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsContribution := _CorporationsProjectsContribution{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsContribution)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsContribution(varCorporationsProjectsContribution)

	return err
}

type NullableCorporationsProjectsContribution struct {
	value *CorporationsProjectsContribution
	isSet bool
}

func (v NullableCorporationsProjectsContribution) Get() *CorporationsProjectsContribution {
	return v.value
}

func (v *NullableCorporationsProjectsContribution) Set(val *CorporationsProjectsContribution) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsContribution) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsContribution) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsContribution(val *CorporationsProjectsContribution) *NullableCorporationsProjectsContribution {
	return &NullableCorporationsProjectsContribution{value: val, isSet: true}
}

func (v NullableCorporationsProjectsContribution) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsContribution) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


