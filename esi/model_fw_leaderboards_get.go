/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the FwLeaderboardsGet type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FwLeaderboardsGet{}

// FwLeaderboardsGet struct for FwLeaderboardsGet
type FwLeaderboardsGet struct {
	Kills FwLeaderboardsGetKills `json:"kills"`
	VictoryPoints FwLeaderboardsGetVictoryPoints `json:"victory_points"`
}

type _FwLeaderboardsGet FwLeaderboardsGet

// NewFwLeaderboardsGet instantiates a new FwLeaderboardsGet object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFwLeaderboardsGet(kills FwLeaderboardsGetKills, victoryPoints FwLeaderboardsGetVictoryPoints) *FwLeaderboardsGet {
	this := FwLeaderboardsGet{}
	this.Kills = kills
	this.VictoryPoints = victoryPoints
	return &this
}

// NewFwLeaderboardsGetWithDefaults instantiates a new FwLeaderboardsGet object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFwLeaderboardsGetWithDefaults() *FwLeaderboardsGet {
	this := FwLeaderboardsGet{}
	return &this
}

// GetKills returns the Kills field value
func (o *FwLeaderboardsGet) GetKills() FwLeaderboardsGetKills {
	if o == nil {
		var ret FwLeaderboardsGetKills
		return ret
	}

	return o.Kills
}

// GetKillsOk returns a tuple with the Kills field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsGet) GetKillsOk() (*FwLeaderboardsGetKills, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kills, true
}

// SetKills sets field value
func (o *FwLeaderboardsGet) SetKills(v FwLeaderboardsGetKills) {
	o.Kills = v
}

// GetVictoryPoints returns the VictoryPoints field value
func (o *FwLeaderboardsGet) GetVictoryPoints() FwLeaderboardsGetVictoryPoints {
	if o == nil {
		var ret FwLeaderboardsGetVictoryPoints
		return ret
	}

	return o.VictoryPoints
}

// GetVictoryPointsOk returns a tuple with the VictoryPoints field value
// and a boolean to check if the value has been set.
func (o *FwLeaderboardsGet) GetVictoryPointsOk() (*FwLeaderboardsGetVictoryPoints, bool) {
	if o == nil {
		return nil, false
	}
	return &o.VictoryPoints, true
}

// SetVictoryPoints sets field value
func (o *FwLeaderboardsGet) SetVictoryPoints(v FwLeaderboardsGetVictoryPoints) {
	o.VictoryPoints = v
}

func (o FwLeaderboardsGet) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FwLeaderboardsGet) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kills"] = o.Kills
	toSerialize["victory_points"] = o.VictoryPoints
	return toSerialize, nil
}

func (o *FwLeaderboardsGet) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"kills",
		"victory_points",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varFwLeaderboardsGet := _FwLeaderboardsGet{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varFwLeaderboardsGet)

	if err != nil {
		return err
	}

	*o = FwLeaderboardsGet(varFwLeaderboardsGet)

	return err
}

type NullableFwLeaderboardsGet struct {
	value *FwLeaderboardsGet
	isSet bool
}

func (v NullableFwLeaderboardsGet) Get() *FwLeaderboardsGet {
	return v.value
}

func (v *NullableFwLeaderboardsGet) Set(val *FwLeaderboardsGet) {
	v.value = val
	v.isSet = true
}

func (v NullableFwLeaderboardsGet) IsSet() bool {
	return v.isSet
}

func (v *NullableFwLeaderboardsGet) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFwLeaderboardsGet(val *FwLeaderboardsGet) *NullableFwLeaderboardsGet {
	return &NullableFwLeaderboardsGet{value: val, isSet: true}
}

func (v NullableFwLeaderboardsGet) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFwLeaderboardsGet) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


