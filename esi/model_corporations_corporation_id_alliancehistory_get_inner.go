/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
	"bytes"
	"fmt"
)

// checks if the CorporationsCorporationIdAlliancehistoryGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsCorporationIdAlliancehistoryGetInner{}

// CorporationsCorporationIdAlliancehistoryGetInner struct for CorporationsCorporationIdAlliancehistoryGetInner
type CorporationsCorporationIdAlliancehistoryGetInner struct {
	AllianceId *int64 `json:"alliance_id,omitempty"`
	// True if the alliance has been closed
	IsDeleted *bool `json:"is_deleted,omitempty"`
	// An incrementing ID that can be used to canonically establish order of records in cases where dates may be ambiguous
	RecordId int64 `json:"record_id"`
	StartDate time.Time `json:"start_date"`
}

type _CorporationsCorporationIdAlliancehistoryGetInner CorporationsCorporationIdAlliancehistoryGetInner

// NewCorporationsCorporationIdAlliancehistoryGetInner instantiates a new CorporationsCorporationIdAlliancehistoryGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsCorporationIdAlliancehistoryGetInner(recordId int64, startDate time.Time) *CorporationsCorporationIdAlliancehistoryGetInner {
	this := CorporationsCorporationIdAlliancehistoryGetInner{}
	this.RecordId = recordId
	this.StartDate = startDate
	return &this
}

// NewCorporationsCorporationIdAlliancehistoryGetInnerWithDefaults instantiates a new CorporationsCorporationIdAlliancehistoryGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsCorporationIdAlliancehistoryGetInnerWithDefaults() *CorporationsCorporationIdAlliancehistoryGetInner {
	this := CorporationsCorporationIdAlliancehistoryGetInner{}
	return &this
}

// GetAllianceId returns the AllianceId field value if set, zero value otherwise.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetAllianceId() int64 {
	if o == nil || IsNil(o.AllianceId) {
		var ret int64
		return ret
	}
	return *o.AllianceId
}

// GetAllianceIdOk returns a tuple with the AllianceId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetAllianceIdOk() (*int64, bool) {
	if o == nil || IsNil(o.AllianceId) {
		return nil, false
	}
	return o.AllianceId, true
}

// HasAllianceId returns a boolean if a field has been set.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) HasAllianceId() bool {
	if o != nil && !IsNil(o.AllianceId) {
		return true
	}

	return false
}

// SetAllianceId gets a reference to the given int64 and assigns it to the AllianceId field.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) SetAllianceId(v int64) {
	o.AllianceId = &v
}

// GetIsDeleted returns the IsDeleted field value if set, zero value otherwise.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetIsDeleted() bool {
	if o == nil || IsNil(o.IsDeleted) {
		var ret bool
		return ret
	}
	return *o.IsDeleted
}

// GetIsDeletedOk returns a tuple with the IsDeleted field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetIsDeletedOk() (*bool, bool) {
	if o == nil || IsNil(o.IsDeleted) {
		return nil, false
	}
	return o.IsDeleted, true
}

// HasIsDeleted returns a boolean if a field has been set.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) HasIsDeleted() bool {
	if o != nil && !IsNil(o.IsDeleted) {
		return true
	}

	return false
}

// SetIsDeleted gets a reference to the given bool and assigns it to the IsDeleted field.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) SetIsDeleted(v bool) {
	o.IsDeleted = &v
}

// GetRecordId returns the RecordId field value
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetRecordId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.RecordId
}

// GetRecordIdOk returns a tuple with the RecordId field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetRecordIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RecordId, true
}

// SetRecordId sets field value
func (o *CorporationsCorporationIdAlliancehistoryGetInner) SetRecordId(v int64) {
	o.RecordId = v
}

// GetStartDate returns the StartDate field value
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetStartDate() time.Time {
	if o == nil {
		var ret time.Time
		return ret
	}

	return o.StartDate
}

// GetStartDateOk returns a tuple with the StartDate field value
// and a boolean to check if the value has been set.
func (o *CorporationsCorporationIdAlliancehistoryGetInner) GetStartDateOk() (*time.Time, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StartDate, true
}

// SetStartDate sets field value
func (o *CorporationsCorporationIdAlliancehistoryGetInner) SetStartDate(v time.Time) {
	o.StartDate = v
}

func (o CorporationsCorporationIdAlliancehistoryGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsCorporationIdAlliancehistoryGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllianceId) {
		toSerialize["alliance_id"] = o.AllianceId
	}
	if !IsNil(o.IsDeleted) {
		toSerialize["is_deleted"] = o.IsDeleted
	}
	toSerialize["record_id"] = o.RecordId
	toSerialize["start_date"] = o.StartDate
	return toSerialize, nil
}

func (o *CorporationsCorporationIdAlliancehistoryGetInner) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"record_id",
		"start_date",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsCorporationIdAlliancehistoryGetInner := _CorporationsCorporationIdAlliancehistoryGetInner{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsCorporationIdAlliancehistoryGetInner)

	if err != nil {
		return err
	}

	*o = CorporationsCorporationIdAlliancehistoryGetInner(varCorporationsCorporationIdAlliancehistoryGetInner)

	return err
}

type NullableCorporationsCorporationIdAlliancehistoryGetInner struct {
	value *CorporationsCorporationIdAlliancehistoryGetInner
	isSet bool
}

func (v NullableCorporationsCorporationIdAlliancehistoryGetInner) Get() *CorporationsCorporationIdAlliancehistoryGetInner {
	return v.value
}

func (v *NullableCorporationsCorporationIdAlliancehistoryGetInner) Set(val *CorporationsCorporationIdAlliancehistoryGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsCorporationIdAlliancehistoryGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsCorporationIdAlliancehistoryGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsCorporationIdAlliancehistoryGetInner(val *CorporationsCorporationIdAlliancehistoryGetInner) *NullableCorporationsCorporationIdAlliancehistoryGetInner {
	return &NullableCorporationsCorporationIdAlliancehistoryGetInner{value: val, isSet: true}
}

func (v NullableCorporationsCorporationIdAlliancehistoryGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsCorporationIdAlliancehistoryGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


