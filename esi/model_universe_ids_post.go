/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the UniverseIdsPost type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &UniverseIdsPost{}

// UniverseIdsPost struct for UniverseIdsPost
type UniverseIdsPost struct {
	Agents []UniverseIdsPostAgentsInner `json:"agents,omitempty"`
	Alliances []UniverseIdsPostAlliancesInner `json:"alliances,omitempty"`
	Characters []UniverseIdsPostCharactersInner `json:"characters,omitempty"`
	Constellations []UniverseIdsPostConstellationsInner `json:"constellations,omitempty"`
	Corporations []UniverseIdsPostCorporationsInner `json:"corporations,omitempty"`
	Factions []UniverseIdsPostFactionsInner `json:"factions,omitempty"`
	InventoryTypes []UniverseIdsPostInventoryTypesInner `json:"inventory_types,omitempty"`
	Regions []UniverseIdsPostRegionsInner `json:"regions,omitempty"`
	Stations []UniverseIdsPostStationsInner `json:"stations,omitempty"`
	Systems []UniverseIdsPostSystemsInner `json:"systems,omitempty"`
}

// NewUniverseIdsPost instantiates a new UniverseIdsPost object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewUniverseIdsPost() *UniverseIdsPost {
	this := UniverseIdsPost{}
	return &this
}

// NewUniverseIdsPostWithDefaults instantiates a new UniverseIdsPost object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewUniverseIdsPostWithDefaults() *UniverseIdsPost {
	this := UniverseIdsPost{}
	return &this
}

// GetAgents returns the Agents field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetAgents() []UniverseIdsPostAgentsInner {
	if o == nil || IsNil(o.Agents) {
		var ret []UniverseIdsPostAgentsInner
		return ret
	}
	return o.Agents
}

// GetAgentsOk returns a tuple with the Agents field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetAgentsOk() ([]UniverseIdsPostAgentsInner, bool) {
	if o == nil || IsNil(o.Agents) {
		return nil, false
	}
	return o.Agents, true
}

// HasAgents returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasAgents() bool {
	if o != nil && !IsNil(o.Agents) {
		return true
	}

	return false
}

// SetAgents gets a reference to the given []UniverseIdsPostAgentsInner and assigns it to the Agents field.
func (o *UniverseIdsPost) SetAgents(v []UniverseIdsPostAgentsInner) {
	o.Agents = v
}

// GetAlliances returns the Alliances field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetAlliances() []UniverseIdsPostAlliancesInner {
	if o == nil || IsNil(o.Alliances) {
		var ret []UniverseIdsPostAlliancesInner
		return ret
	}
	return o.Alliances
}

// GetAlliancesOk returns a tuple with the Alliances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetAlliancesOk() ([]UniverseIdsPostAlliancesInner, bool) {
	if o == nil || IsNil(o.Alliances) {
		return nil, false
	}
	return o.Alliances, true
}

// HasAlliances returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasAlliances() bool {
	if o != nil && !IsNil(o.Alliances) {
		return true
	}

	return false
}

// SetAlliances gets a reference to the given []UniverseIdsPostAlliancesInner and assigns it to the Alliances field.
func (o *UniverseIdsPost) SetAlliances(v []UniverseIdsPostAlliancesInner) {
	o.Alliances = v
}

// GetCharacters returns the Characters field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetCharacters() []UniverseIdsPostCharactersInner {
	if o == nil || IsNil(o.Characters) {
		var ret []UniverseIdsPostCharactersInner
		return ret
	}
	return o.Characters
}

// GetCharactersOk returns a tuple with the Characters field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetCharactersOk() ([]UniverseIdsPostCharactersInner, bool) {
	if o == nil || IsNil(o.Characters) {
		return nil, false
	}
	return o.Characters, true
}

// HasCharacters returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasCharacters() bool {
	if o != nil && !IsNil(o.Characters) {
		return true
	}

	return false
}

// SetCharacters gets a reference to the given []UniverseIdsPostCharactersInner and assigns it to the Characters field.
func (o *UniverseIdsPost) SetCharacters(v []UniverseIdsPostCharactersInner) {
	o.Characters = v
}

// GetConstellations returns the Constellations field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetConstellations() []UniverseIdsPostConstellationsInner {
	if o == nil || IsNil(o.Constellations) {
		var ret []UniverseIdsPostConstellationsInner
		return ret
	}
	return o.Constellations
}

// GetConstellationsOk returns a tuple with the Constellations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetConstellationsOk() ([]UniverseIdsPostConstellationsInner, bool) {
	if o == nil || IsNil(o.Constellations) {
		return nil, false
	}
	return o.Constellations, true
}

// HasConstellations returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasConstellations() bool {
	if o != nil && !IsNil(o.Constellations) {
		return true
	}

	return false
}

// SetConstellations gets a reference to the given []UniverseIdsPostConstellationsInner and assigns it to the Constellations field.
func (o *UniverseIdsPost) SetConstellations(v []UniverseIdsPostConstellationsInner) {
	o.Constellations = v
}

// GetCorporations returns the Corporations field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetCorporations() []UniverseIdsPostCorporationsInner {
	if o == nil || IsNil(o.Corporations) {
		var ret []UniverseIdsPostCorporationsInner
		return ret
	}
	return o.Corporations
}

// GetCorporationsOk returns a tuple with the Corporations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetCorporationsOk() ([]UniverseIdsPostCorporationsInner, bool) {
	if o == nil || IsNil(o.Corporations) {
		return nil, false
	}
	return o.Corporations, true
}

// HasCorporations returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasCorporations() bool {
	if o != nil && !IsNil(o.Corporations) {
		return true
	}

	return false
}

// SetCorporations gets a reference to the given []UniverseIdsPostCorporationsInner and assigns it to the Corporations field.
func (o *UniverseIdsPost) SetCorporations(v []UniverseIdsPostCorporationsInner) {
	o.Corporations = v
}

// GetFactions returns the Factions field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetFactions() []UniverseIdsPostFactionsInner {
	if o == nil || IsNil(o.Factions) {
		var ret []UniverseIdsPostFactionsInner
		return ret
	}
	return o.Factions
}

// GetFactionsOk returns a tuple with the Factions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetFactionsOk() ([]UniverseIdsPostFactionsInner, bool) {
	if o == nil || IsNil(o.Factions) {
		return nil, false
	}
	return o.Factions, true
}

// HasFactions returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasFactions() bool {
	if o != nil && !IsNil(o.Factions) {
		return true
	}

	return false
}

// SetFactions gets a reference to the given []UniverseIdsPostFactionsInner and assigns it to the Factions field.
func (o *UniverseIdsPost) SetFactions(v []UniverseIdsPostFactionsInner) {
	o.Factions = v
}

// GetInventoryTypes returns the InventoryTypes field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetInventoryTypes() []UniverseIdsPostInventoryTypesInner {
	if o == nil || IsNil(o.InventoryTypes) {
		var ret []UniverseIdsPostInventoryTypesInner
		return ret
	}
	return o.InventoryTypes
}

// GetInventoryTypesOk returns a tuple with the InventoryTypes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetInventoryTypesOk() ([]UniverseIdsPostInventoryTypesInner, bool) {
	if o == nil || IsNil(o.InventoryTypes) {
		return nil, false
	}
	return o.InventoryTypes, true
}

// HasInventoryTypes returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasInventoryTypes() bool {
	if o != nil && !IsNil(o.InventoryTypes) {
		return true
	}

	return false
}

// SetInventoryTypes gets a reference to the given []UniverseIdsPostInventoryTypesInner and assigns it to the InventoryTypes field.
func (o *UniverseIdsPost) SetInventoryTypes(v []UniverseIdsPostInventoryTypesInner) {
	o.InventoryTypes = v
}

// GetRegions returns the Regions field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetRegions() []UniverseIdsPostRegionsInner {
	if o == nil || IsNil(o.Regions) {
		var ret []UniverseIdsPostRegionsInner
		return ret
	}
	return o.Regions
}

// GetRegionsOk returns a tuple with the Regions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetRegionsOk() ([]UniverseIdsPostRegionsInner, bool) {
	if o == nil || IsNil(o.Regions) {
		return nil, false
	}
	return o.Regions, true
}

// HasRegions returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasRegions() bool {
	if o != nil && !IsNil(o.Regions) {
		return true
	}

	return false
}

// SetRegions gets a reference to the given []UniverseIdsPostRegionsInner and assigns it to the Regions field.
func (o *UniverseIdsPost) SetRegions(v []UniverseIdsPostRegionsInner) {
	o.Regions = v
}

// GetStations returns the Stations field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetStations() []UniverseIdsPostStationsInner {
	if o == nil || IsNil(o.Stations) {
		var ret []UniverseIdsPostStationsInner
		return ret
	}
	return o.Stations
}

// GetStationsOk returns a tuple with the Stations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetStationsOk() ([]UniverseIdsPostStationsInner, bool) {
	if o == nil || IsNil(o.Stations) {
		return nil, false
	}
	return o.Stations, true
}

// HasStations returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasStations() bool {
	if o != nil && !IsNil(o.Stations) {
		return true
	}

	return false
}

// SetStations gets a reference to the given []UniverseIdsPostStationsInner and assigns it to the Stations field.
func (o *UniverseIdsPost) SetStations(v []UniverseIdsPostStationsInner) {
	o.Stations = v
}

// GetSystems returns the Systems field value if set, zero value otherwise.
func (o *UniverseIdsPost) GetSystems() []UniverseIdsPostSystemsInner {
	if o == nil || IsNil(o.Systems) {
		var ret []UniverseIdsPostSystemsInner
		return ret
	}
	return o.Systems
}

// GetSystemsOk returns a tuple with the Systems field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *UniverseIdsPost) GetSystemsOk() ([]UniverseIdsPostSystemsInner, bool) {
	if o == nil || IsNil(o.Systems) {
		return nil, false
	}
	return o.Systems, true
}

// HasSystems returns a boolean if a field has been set.
func (o *UniverseIdsPost) HasSystems() bool {
	if o != nil && !IsNil(o.Systems) {
		return true
	}

	return false
}

// SetSystems gets a reference to the given []UniverseIdsPostSystemsInner and assigns it to the Systems field.
func (o *UniverseIdsPost) SetSystems(v []UniverseIdsPostSystemsInner) {
	o.Systems = v
}

func (o UniverseIdsPost) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o UniverseIdsPost) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Agents) {
		toSerialize["agents"] = o.Agents
	}
	if !IsNil(o.Alliances) {
		toSerialize["alliances"] = o.Alliances
	}
	if !IsNil(o.Characters) {
		toSerialize["characters"] = o.Characters
	}
	if !IsNil(o.Constellations) {
		toSerialize["constellations"] = o.Constellations
	}
	if !IsNil(o.Corporations) {
		toSerialize["corporations"] = o.Corporations
	}
	if !IsNil(o.Factions) {
		toSerialize["factions"] = o.Factions
	}
	if !IsNil(o.InventoryTypes) {
		toSerialize["inventory_types"] = o.InventoryTypes
	}
	if !IsNil(o.Regions) {
		toSerialize["regions"] = o.Regions
	}
	if !IsNil(o.Stations) {
		toSerialize["stations"] = o.Stations
	}
	if !IsNil(o.Systems) {
		toSerialize["systems"] = o.Systems
	}
	return toSerialize, nil
}

type NullableUniverseIdsPost struct {
	value *UniverseIdsPost
	isSet bool
}

func (v NullableUniverseIdsPost) Get() *UniverseIdsPost {
	return v.value
}

func (v *NullableUniverseIdsPost) Set(val *UniverseIdsPost) {
	v.value = val
	v.isSet = true
}

func (v NullableUniverseIdsPost) IsSet() bool {
	return v.isSet
}

func (v *NullableUniverseIdsPost) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableUniverseIdsPost(val *UniverseIdsPost) *NullableUniverseIdsPost {
	return &NullableUniverseIdsPost{value: val, isSet: true}
}

func (v NullableUniverseIdsPost) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableUniverseIdsPost) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


