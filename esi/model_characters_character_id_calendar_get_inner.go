/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"time"
)

// checks if the CharactersCharacterIdCalendarGetInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdCalendarGetInner{}

// CharactersCharacterIdCalendarGetInner event
type CharactersCharacterIdCalendarGetInner struct {
	EventDate *time.Time `json:"event_date,omitempty"`
	EventId *int64 `json:"event_id,omitempty"`
	EventResponse *string `json:"event_response,omitempty"`
	Importance *int64 `json:"importance,omitempty"`
	Title *string `json:"title,omitempty"`
}

// NewCharactersCharacterIdCalendarGetInner instantiates a new CharactersCharacterIdCalendarGetInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdCalendarGetInner() *CharactersCharacterIdCalendarGetInner {
	this := CharactersCharacterIdCalendarGetInner{}
	return &this
}

// NewCharactersCharacterIdCalendarGetInnerWithDefaults instantiates a new CharactersCharacterIdCalendarGetInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdCalendarGetInnerWithDefaults() *CharactersCharacterIdCalendarGetInner {
	this := CharactersCharacterIdCalendarGetInner{}
	return &this
}

// GetEventDate returns the EventDate field value if set, zero value otherwise.
func (o *CharactersCharacterIdCalendarGetInner) GetEventDate() time.Time {
	if o == nil || IsNil(o.EventDate) {
		var ret time.Time
		return ret
	}
	return *o.EventDate
}

// GetEventDateOk returns a tuple with the EventDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdCalendarGetInner) GetEventDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.EventDate) {
		return nil, false
	}
	return o.EventDate, true
}

// HasEventDate returns a boolean if a field has been set.
func (o *CharactersCharacterIdCalendarGetInner) HasEventDate() bool {
	if o != nil && !IsNil(o.EventDate) {
		return true
	}

	return false
}

// SetEventDate gets a reference to the given time.Time and assigns it to the EventDate field.
func (o *CharactersCharacterIdCalendarGetInner) SetEventDate(v time.Time) {
	o.EventDate = &v
}

// GetEventId returns the EventId field value if set, zero value otherwise.
func (o *CharactersCharacterIdCalendarGetInner) GetEventId() int64 {
	if o == nil || IsNil(o.EventId) {
		var ret int64
		return ret
	}
	return *o.EventId
}

// GetEventIdOk returns a tuple with the EventId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdCalendarGetInner) GetEventIdOk() (*int64, bool) {
	if o == nil || IsNil(o.EventId) {
		return nil, false
	}
	return o.EventId, true
}

// HasEventId returns a boolean if a field has been set.
func (o *CharactersCharacterIdCalendarGetInner) HasEventId() bool {
	if o != nil && !IsNil(o.EventId) {
		return true
	}

	return false
}

// SetEventId gets a reference to the given int64 and assigns it to the EventId field.
func (o *CharactersCharacterIdCalendarGetInner) SetEventId(v int64) {
	o.EventId = &v
}

// GetEventResponse returns the EventResponse field value if set, zero value otherwise.
func (o *CharactersCharacterIdCalendarGetInner) GetEventResponse() string {
	if o == nil || IsNil(o.EventResponse) {
		var ret string
		return ret
	}
	return *o.EventResponse
}

// GetEventResponseOk returns a tuple with the EventResponse field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdCalendarGetInner) GetEventResponseOk() (*string, bool) {
	if o == nil || IsNil(o.EventResponse) {
		return nil, false
	}
	return o.EventResponse, true
}

// HasEventResponse returns a boolean if a field has been set.
func (o *CharactersCharacterIdCalendarGetInner) HasEventResponse() bool {
	if o != nil && !IsNil(o.EventResponse) {
		return true
	}

	return false
}

// SetEventResponse gets a reference to the given string and assigns it to the EventResponse field.
func (o *CharactersCharacterIdCalendarGetInner) SetEventResponse(v string) {
	o.EventResponse = &v
}

// GetImportance returns the Importance field value if set, zero value otherwise.
func (o *CharactersCharacterIdCalendarGetInner) GetImportance() int64 {
	if o == nil || IsNil(o.Importance) {
		var ret int64
		return ret
	}
	return *o.Importance
}

// GetImportanceOk returns a tuple with the Importance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdCalendarGetInner) GetImportanceOk() (*int64, bool) {
	if o == nil || IsNil(o.Importance) {
		return nil, false
	}
	return o.Importance, true
}

// HasImportance returns a boolean if a field has been set.
func (o *CharactersCharacterIdCalendarGetInner) HasImportance() bool {
	if o != nil && !IsNil(o.Importance) {
		return true
	}

	return false
}

// SetImportance gets a reference to the given int64 and assigns it to the Importance field.
func (o *CharactersCharacterIdCalendarGetInner) SetImportance(v int64) {
	o.Importance = &v
}

// GetTitle returns the Title field value if set, zero value otherwise.
func (o *CharactersCharacterIdCalendarGetInner) GetTitle() string {
	if o == nil || IsNil(o.Title) {
		var ret string
		return ret
	}
	return *o.Title
}

// GetTitleOk returns a tuple with the Title field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdCalendarGetInner) GetTitleOk() (*string, bool) {
	if o == nil || IsNil(o.Title) {
		return nil, false
	}
	return o.Title, true
}

// HasTitle returns a boolean if a field has been set.
func (o *CharactersCharacterIdCalendarGetInner) HasTitle() bool {
	if o != nil && !IsNil(o.Title) {
		return true
	}

	return false
}

// SetTitle gets a reference to the given string and assigns it to the Title field.
func (o *CharactersCharacterIdCalendarGetInner) SetTitle(v string) {
	o.Title = &v
}

func (o CharactersCharacterIdCalendarGetInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdCalendarGetInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.EventDate) {
		toSerialize["event_date"] = o.EventDate
	}
	if !IsNil(o.EventId) {
		toSerialize["event_id"] = o.EventId
	}
	if !IsNil(o.EventResponse) {
		toSerialize["event_response"] = o.EventResponse
	}
	if !IsNil(o.Importance) {
		toSerialize["importance"] = o.Importance
	}
	if !IsNil(o.Title) {
		toSerialize["title"] = o.Title
	}
	return toSerialize, nil
}

type NullableCharactersCharacterIdCalendarGetInner struct {
	value *CharactersCharacterIdCalendarGetInner
	isSet bool
}

func (v NullableCharactersCharacterIdCalendarGetInner) Get() *CharactersCharacterIdCalendarGetInner {
	return v.value
}

func (v *NullableCharactersCharacterIdCalendarGetInner) Set(val *CharactersCharacterIdCalendarGetInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdCalendarGetInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdCalendarGetInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdCalendarGetInner(val *CharactersCharacterIdCalendarGetInner) *NullableCharactersCharacterIdCalendarGetInner {
	return &NullableCharactersCharacterIdCalendarGetInner{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdCalendarGetInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdCalendarGetInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


