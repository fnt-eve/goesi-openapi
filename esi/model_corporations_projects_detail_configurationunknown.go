/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsDetailConfigurationunknown type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsDetailConfigurationunknown{}

// CorporationsProjectsDetailConfigurationunknown struct for CorporationsProjectsDetailConfigurationunknown
type CorporationsProjectsDetailConfigurationunknown struct {
	// JSON-encoded configuration
	Data interface{} `json:"data"`
	// Configuration type
	Type string `json:"type"`
}

type _CorporationsProjectsDetailConfigurationunknown CorporationsProjectsDetailConfigurationunknown

// NewCorporationsProjectsDetailConfigurationunknown instantiates a new CorporationsProjectsDetailConfigurationunknown object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsDetailConfigurationunknown(data interface{}, type_ string) *CorporationsProjectsDetailConfigurationunknown {
	this := CorporationsProjectsDetailConfigurationunknown{}
	this.Data = data
	this.Type = type_
	return &this
}

// NewCorporationsProjectsDetailConfigurationunknownWithDefaults instantiates a new CorporationsProjectsDetailConfigurationunknown object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsDetailConfigurationunknownWithDefaults() *CorporationsProjectsDetailConfigurationunknown {
	this := CorporationsProjectsDetailConfigurationunknown{}
	return &this
}

// GetData returns the Data field value
// If the value is explicit nil, the zero value for interface{} will be returned
func (o *CorporationsProjectsDetailConfigurationunknown) GetData() interface{} {
	if o == nil {
		var ret interface{}
		return ret
	}

	return o.Data
}

// GetDataOk returns a tuple with the Data field value
// and a boolean to check if the value has been set.
// NOTE: If the value is an explicit nil, `nil, true` will be returned
func (o *CorporationsProjectsDetailConfigurationunknown) GetDataOk() (*interface{}, bool) {
	if o == nil || IsNil(o.Data) {
		return nil, false
	}
	return &o.Data, true
}

// SetData sets field value
func (o *CorporationsProjectsDetailConfigurationunknown) SetData(v interface{}) {
	o.Data = v
}

// GetType returns the Type field value
func (o *CorporationsProjectsDetailConfigurationunknown) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsDetailConfigurationunknown) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *CorporationsProjectsDetailConfigurationunknown) SetType(v string) {
	o.Type = v
}

func (o CorporationsProjectsDetailConfigurationunknown) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsDetailConfigurationunknown) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if o.Data != nil {
		toSerialize["data"] = o.Data
	}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

func (o *CorporationsProjectsDetailConfigurationunknown) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"data",
		"type",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsDetailConfigurationunknown := _CorporationsProjectsDetailConfigurationunknown{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsDetailConfigurationunknown)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsDetailConfigurationunknown(varCorporationsProjectsDetailConfigurationunknown)

	return err
}

type NullableCorporationsProjectsDetailConfigurationunknown struct {
	value *CorporationsProjectsDetailConfigurationunknown
	isSet bool
}

func (v NullableCorporationsProjectsDetailConfigurationunknown) Get() *CorporationsProjectsDetailConfigurationunknown {
	return v.value
}

func (v *NullableCorporationsProjectsDetailConfigurationunknown) Set(val *CorporationsProjectsDetailConfigurationunknown) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsDetailConfigurationunknown) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsDetailConfigurationunknown) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsDetailConfigurationunknown(val *CorporationsProjectsDetailConfigurationunknown) *NullableCorporationsProjectsDetailConfigurationunknown {
	return &NullableCorporationsProjectsDetailConfigurationunknown{value: val, isSet: true}
}

func (v NullableCorporationsProjectsDetailConfigurationunknown) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsDetailConfigurationunknown) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


