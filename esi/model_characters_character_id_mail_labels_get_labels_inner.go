/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2020-01-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the CharactersCharacterIdMailLabelsGetLabelsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CharactersCharacterIdMailLabelsGetLabelsInner{}

// CharactersCharacterIdMailLabelsGetLabelsInner label object
type CharactersCharacterIdMailLabelsGetLabelsInner struct {
	Color *string `json:"color,omitempty"`
	LabelId *int64 `json:"label_id,omitempty"`
	Name *string `json:"name,omitempty"`
	UnreadCount *int64 `json:"unread_count,omitempty"`
}

// NewCharactersCharacterIdMailLabelsGetLabelsInner instantiates a new CharactersCharacterIdMailLabelsGetLabelsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCharactersCharacterIdMailLabelsGetLabelsInner() *CharactersCharacterIdMailLabelsGetLabelsInner {
	this := CharactersCharacterIdMailLabelsGetLabelsInner{}
	var color string = "#ffffff"
	this.Color = &color
	return &this
}

// NewCharactersCharacterIdMailLabelsGetLabelsInnerWithDefaults instantiates a new CharactersCharacterIdMailLabelsGetLabelsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCharactersCharacterIdMailLabelsGetLabelsInnerWithDefaults() *CharactersCharacterIdMailLabelsGetLabelsInner {
	this := CharactersCharacterIdMailLabelsGetLabelsInner{}
	var color string = "#ffffff"
	this.Color = &color
	return &this
}

// GetColor returns the Color field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetColor() string {
	if o == nil || IsNil(o.Color) {
		var ret string
		return ret
	}
	return *o.Color
}

// GetColorOk returns a tuple with the Color field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetColorOk() (*string, bool) {
	if o == nil || IsNil(o.Color) {
		return nil, false
	}
	return o.Color, true
}

// HasColor returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) HasColor() bool {
	if o != nil && !IsNil(o.Color) {
		return true
	}

	return false
}

// SetColor gets a reference to the given string and assigns it to the Color field.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) SetColor(v string) {
	o.Color = &v
}

// GetLabelId returns the LabelId field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetLabelId() int64 {
	if o == nil || IsNil(o.LabelId) {
		var ret int64
		return ret
	}
	return *o.LabelId
}

// GetLabelIdOk returns a tuple with the LabelId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetLabelIdOk() (*int64, bool) {
	if o == nil || IsNil(o.LabelId) {
		return nil, false
	}
	return o.LabelId, true
}

// HasLabelId returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) HasLabelId() bool {
	if o != nil && !IsNil(o.LabelId) {
		return true
	}

	return false
}

// SetLabelId gets a reference to the given int64 and assigns it to the LabelId field.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) SetLabelId(v int64) {
	o.LabelId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) SetName(v string) {
	o.Name = &v
}

// GetUnreadCount returns the UnreadCount field value if set, zero value otherwise.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetUnreadCount() int64 {
	if o == nil || IsNil(o.UnreadCount) {
		var ret int64
		return ret
	}
	return *o.UnreadCount
}

// GetUnreadCountOk returns a tuple with the UnreadCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) GetUnreadCountOk() (*int64, bool) {
	if o == nil || IsNil(o.UnreadCount) {
		return nil, false
	}
	return o.UnreadCount, true
}

// HasUnreadCount returns a boolean if a field has been set.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) HasUnreadCount() bool {
	if o != nil && !IsNil(o.UnreadCount) {
		return true
	}

	return false
}

// SetUnreadCount gets a reference to the given int64 and assigns it to the UnreadCount field.
func (o *CharactersCharacterIdMailLabelsGetLabelsInner) SetUnreadCount(v int64) {
	o.UnreadCount = &v
}

func (o CharactersCharacterIdMailLabelsGetLabelsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CharactersCharacterIdMailLabelsGetLabelsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Color) {
		toSerialize["color"] = o.Color
	}
	if !IsNil(o.LabelId) {
		toSerialize["label_id"] = o.LabelId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.UnreadCount) {
		toSerialize["unread_count"] = o.UnreadCount
	}
	return toSerialize, nil
}

type NullableCharactersCharacterIdMailLabelsGetLabelsInner struct {
	value *CharactersCharacterIdMailLabelsGetLabelsInner
	isSet bool
}

func (v NullableCharactersCharacterIdMailLabelsGetLabelsInner) Get() *CharactersCharacterIdMailLabelsGetLabelsInner {
	return v.value
}

func (v *NullableCharactersCharacterIdMailLabelsGetLabelsInner) Set(val *CharactersCharacterIdMailLabelsGetLabelsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableCharactersCharacterIdMailLabelsGetLabelsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableCharactersCharacterIdMailLabelsGetLabelsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCharactersCharacterIdMailLabelsGetLabelsInner(val *CharactersCharacterIdMailLabelsGetLabelsInner) *NullableCharactersCharacterIdMailLabelsGetLabelsInner {
	return &NullableCharactersCharacterIdMailLabelsGetLabelsInner{value: val, isSet: true}
}

func (v NullableCharactersCharacterIdMailLabelsGetLabelsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCharactersCharacterIdMailLabelsGetLabelsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


