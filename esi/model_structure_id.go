/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
)

// checks if the StructureId type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StructureId{}

// StructureId struct for StructureId
type StructureId struct {
	StructureId *int64 `json:"structure_id,omitempty"`
}

// NewStructureId instantiates a new StructureId object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStructureId() *StructureId {
	this := StructureId{}
	return &this
}

// NewStructureIdWithDefaults instantiates a new StructureId object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStructureIdWithDefaults() *StructureId {
	this := StructureId{}
	return &this
}

// GetStructureId returns the StructureId field value if set, zero value otherwise.
func (o *StructureId) GetStructureId() int64 {
	if o == nil || IsNil(o.StructureId) {
		var ret int64
		return ret
	}
	return *o.StructureId
}

// GetStructureIdOk returns a tuple with the StructureId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StructureId) GetStructureIdOk() (*int64, bool) {
	if o == nil || IsNil(o.StructureId) {
		return nil, false
	}
	return o.StructureId, true
}

// HasStructureId returns a boolean if a field has been set.
func (o *StructureId) HasStructureId() bool {
	if o != nil && !IsNil(o.StructureId) {
		return true
	}

	return false
}

// SetStructureId gets a reference to the given int64 and assigns it to the StructureId field.
func (o *StructureId) SetStructureId(v int64) {
	o.StructureId = &v
}

func (o StructureId) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StructureId) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.StructureId) {
		toSerialize["structure_id"] = o.StructureId
	}
	return toSerialize, nil
}

type NullableStructureId struct {
	value *StructureId
	isSet bool
}

func (v NullableStructureId) Get() *StructureId {
	return v.value
}

func (v *NullableStructureId) Set(val *StructureId) {
	v.value = val
	v.isSet = true
}

func (v NullableStructureId) IsSet() bool {
	return v.isSet
}

func (v *NullableStructureId) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStructureId(val *StructureId) *NullableStructureId {
	return &NullableStructureId{value: val, isSet: true}
}

func (v NullableStructureId) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStructureId) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


