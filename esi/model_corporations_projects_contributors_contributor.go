/*
EVE Stable Infrastructure (ESI) - tranquility

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2025-09-30
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package esi

import (
	"encoding/json"
	"bytes"
	"fmt"
)

// checks if the CorporationsProjectsContributorsContributor type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CorporationsProjectsContributorsContributor{}

// CorporationsProjectsContributorsContributor struct for CorporationsProjectsContributorsContributor
type CorporationsProjectsContributorsContributor struct {
	// Contributor's contributed progress
	Contributed int64 `json:"contributed"`
	Id int64 `json:"id"`
	// Contributor's name
	Name string `json:"name"`
}

type _CorporationsProjectsContributorsContributor CorporationsProjectsContributorsContributor

// NewCorporationsProjectsContributorsContributor instantiates a new CorporationsProjectsContributorsContributor object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCorporationsProjectsContributorsContributor(contributed int64, id int64, name string) *CorporationsProjectsContributorsContributor {
	this := CorporationsProjectsContributorsContributor{}
	this.Contributed = contributed
	this.Id = id
	this.Name = name
	return &this
}

// NewCorporationsProjectsContributorsContributorWithDefaults instantiates a new CorporationsProjectsContributorsContributor object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCorporationsProjectsContributorsContributorWithDefaults() *CorporationsProjectsContributorsContributor {
	this := CorporationsProjectsContributorsContributor{}
	return &this
}

// GetContributed returns the Contributed field value
func (o *CorporationsProjectsContributorsContributor) GetContributed() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Contributed
}

// GetContributedOk returns a tuple with the Contributed field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsContributorsContributor) GetContributedOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Contributed, true
}

// SetContributed sets field value
func (o *CorporationsProjectsContributorsContributor) SetContributed(v int64) {
	o.Contributed = v
}

// GetId returns the Id field value
func (o *CorporationsProjectsContributorsContributor) GetId() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsContributorsContributor) GetIdOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *CorporationsProjectsContributorsContributor) SetId(v int64) {
	o.Id = v
}

// GetName returns the Name field value
func (o *CorporationsProjectsContributorsContributor) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *CorporationsProjectsContributorsContributor) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *CorporationsProjectsContributorsContributor) SetName(v string) {
	o.Name = v
}

func (o CorporationsProjectsContributorsContributor) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CorporationsProjectsContributorsContributor) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["contributed"] = o.Contributed
	toSerialize["id"] = o.Id
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

func (o *CorporationsProjectsContributorsContributor) UnmarshalJSON(data []byte) (err error) {
	// This validates that all required properties are included in the JSON object
	// by unmarshalling the object into a generic map with string keys and checking
	// that every required field exists as a key in the generic map.
	requiredProperties := []string{
		"contributed",
		"id",
		"name",
	}

	allProperties := make(map[string]interface{})

	err = json.Unmarshal(data, &allProperties)

	if err != nil {
		return err;
	}

	for _, requiredProperty := range(requiredProperties) {
		if _, exists := allProperties[requiredProperty]; !exists {
			return fmt.Errorf("no value given for required property %v", requiredProperty)
		}
	}

	varCorporationsProjectsContributorsContributor := _CorporationsProjectsContributorsContributor{}

	decoder := json.NewDecoder(bytes.NewReader(data))
	decoder.DisallowUnknownFields()
	err = decoder.Decode(&varCorporationsProjectsContributorsContributor)

	if err != nil {
		return err
	}

	*o = CorporationsProjectsContributorsContributor(varCorporationsProjectsContributorsContributor)

	return err
}

type NullableCorporationsProjectsContributorsContributor struct {
	value *CorporationsProjectsContributorsContributor
	isSet bool
}

func (v NullableCorporationsProjectsContributorsContributor) Get() *CorporationsProjectsContributorsContributor {
	return v.value
}

func (v *NullableCorporationsProjectsContributorsContributor) Set(val *CorporationsProjectsContributorsContributor) {
	v.value = val
	v.isSet = true
}

func (v NullableCorporationsProjectsContributorsContributor) IsSet() bool {
	return v.isSet
}

func (v *NullableCorporationsProjectsContributorsContributor) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCorporationsProjectsContributorsContributor(val *CorporationsProjectsContributorsContributor) *NullableCorporationsProjectsContributorsContributor {
	return &NullableCorporationsProjectsContributorsContributor{value: val, isSet: true}
}

func (v NullableCorporationsProjectsContributorsContributor) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCorporationsProjectsContributorsContributor) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


